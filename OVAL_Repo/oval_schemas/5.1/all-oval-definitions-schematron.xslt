<?xml version="1.0" standalone="yes"?>
<axsl:stylesheet xmlns:axsl="http://www.w3.org/1999/XSL/Transform" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns:iso="http://purl.oclc.org/dsdl/schematron" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:apache-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#apache" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:freebsd-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#freebsd" xmlns:hpux-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#hpux" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:ios-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#ios" xmlns:linux-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns:macos-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#macos" xmlns:sol-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#solaris" xmlns:unix-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" xmlns:win-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" version="1.0"><!--Implementers: please note that overriding process-prolog or process-root is 
    the preferred method for meta-stylesheets to use where possible. -->
<axsl:param name="archiveDirParameter"/><axsl:param name="archiveNameParameter"/><axsl:param name="fileNameParameter"/><axsl:param name="fileDirParameter"/>

<!--PHASES-->


<!--PROLOG-->
<axsl:output xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" method="xml" omit-xml-declaration="no" standalone="yes" indent="yes"/>

<!--KEYS-->


<!--DEFAULT RULES-->


<!--MODE: SCHEMATRON-SELECT-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-select-full-path"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-->
<!--This mode can be used to generate an ugly though full XPath for locators-->
<axsl:template match="*" mode="schematron-get-full-path"><axsl:apply-templates select="parent::*" mode="schematron-get-full-path"/><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''"><axsl:value-of select="name()"/><axsl:variable name="p_1" select="1+    count(preceding-sibling::*[name()=name(current())])"/><axsl:if test="$p_1&gt;1 or following-sibling::*[name()=name(current())]">[<axsl:value-of select="$p_1"/>]</axsl:if></axsl:when><axsl:otherwise><axsl:text>*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text><axsl:variable name="p_2" select="1+   count(preceding-sibling::*[local-name()=local-name(current())])"/><axsl:if test="$p_2&gt;1 or following-sibling::*[local-name()=local-name(current())]">[<axsl:value-of select="$p_2"/>]</axsl:if></axsl:otherwise></axsl:choose></axsl:template><axsl:template match="@*" mode="schematron-get-full-path"><axsl:text>/</axsl:text><axsl:choose><axsl:when test="namespace-uri()=''">@<axsl:value-of select="name()"/></axsl:when><axsl:otherwise><axsl:text>@*[local-name()='</axsl:text><axsl:value-of select="local-name()"/><axsl:text>' and namespace-uri()='</axsl:text><axsl:value-of select="namespace-uri()"/><axsl:text>']</axsl:text></axsl:otherwise></axsl:choose></axsl:template>

<!--MODE: SCHEMATRON-FULL-PATH-2-->
<!--This mode can be used to generate prefixed XPath for humans-->
<axsl:template match="node() | @*" mode="schematron-get-full-path-2"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="preceding-sibling::*[name(.)=name(current())]"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-FROM-PATH -->
<axsl:template match="/" mode="generate-id-from-path"/><axsl:template match="text()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.text-', 1+count(preceding-sibling::text()), '-')"/></axsl:template><axsl:template match="comment()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.comment-', 1+count(preceding-sibling::comment()), '-')"/></axsl:template><axsl:template match="processing-instruction()" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.processing-instruction-', 1+count(preceding-sibling::processing-instruction()), '-')"/></axsl:template><axsl:template match="@*" mode="generate-id-from-path"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:value-of select="concat('.@', name())"/></axsl:template><axsl:template match="*" mode="generate-id-from-path" priority="-0.5"><axsl:apply-templates select="parent::*" mode="generate-id-from-path"/><axsl:text>.</axsl:text><axsl:value-of select="concat('.',name(),'-',1+count(preceding-sibling::*[name()=name(current())]),'-')"/></axsl:template><!--MODE: SCHEMATRON-FULL-PATH-3-->
<!--This mode can be used to generate prefixed XPath for humans 
	(Top-level element has index)-->
<axsl:template match="node() | @*" mode="schematron-get-full-path-3"><axsl:for-each select="ancestor-or-self::*"><axsl:text>/</axsl:text><axsl:value-of select="name(.)"/><axsl:if test="parent::*"><axsl:text>[</axsl:text><axsl:value-of select="count(preceding-sibling::*[name(.)=name(current())])+1"/><axsl:text>]</axsl:text></axsl:if></axsl:for-each><axsl:if test="not(self::*)"><axsl:text/>/@<axsl:value-of select="name(.)"/></axsl:if></axsl:template>

<!--MODE: GENERATE-ID-2 -->
<axsl:template match="/" mode="generate-id-2">U</axsl:template><axsl:template match="*" mode="generate-id-2" priority="2"><axsl:text>U</axsl:text><axsl:number level="multiple" count="*"/></axsl:template><axsl:template match="node()" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>n</axsl:text><axsl:number count="node()"/></axsl:template><axsl:template match="@*" mode="generate-id-2"><axsl:text>U.</axsl:text><axsl:number level="multiple" count="*"/><axsl:text>_</axsl:text><axsl:value-of select="string-length(local-name(.))"/><axsl:text>_</axsl:text><axsl:value-of select="translate(name(),':','.')"/></axsl:template><!--Strip characters--><axsl:template match="text()" priority="-1"/>

<!--SCHEMA METADATA-->
<axsl:template match="/"><svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" title="schematron validation of the Windows portion of an OVAL Definitions file" schemaVersion=""><axsl:comment><axsl:value-of select="$archiveDirParameter"/>   
		 <axsl:value-of select="$archiveNameParameter"/>  
		 <axsl:value-of select="$fileNameParameter"/>  
		 <axsl:value-of select="$fileDirParameter"/></axsl:comment><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5" prefix="oval-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#apache" prefix="apache-def"/><svrl:ns-prefix-in-attribute-values uri="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#freebsd" prefix="freebsd-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#hpux" prefix="hpux-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" prefix="ind-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#ios" prefix="ios-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" prefix="linux-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#macos" prefix="macos-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#solaris" prefix="sol-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" prefix="unix-def"/><svrl:ns-prefix-in-attribute-values uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" prefix="win-def"/><svrl:active-pattern><axsl:attribute name="id">empty_def_doc</axsl:attribute><axsl:attribute name="name">empty_def_doc</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M23"/><svrl:active-pattern><axsl:attribute name="id">value</axsl:attribute><axsl:attribute name="name">value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M24"/><svrl:active-pattern><axsl:attribute name="id">literal_component</axsl:attribute><axsl:attribute name="name">literal_component</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M25"/><svrl:active-pattern><axsl:attribute name="id">item_field</axsl:attribute><axsl:attribute name="name">item_field</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M26"/><svrl:active-pattern><axsl:attribute name="id">entityvarref</axsl:attribute><axsl:attribute name="name">entityvarref</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M27"/><svrl:active-pattern><axsl:attribute name="id">httpdtst</axsl:attribute><axsl:attribute name="name">httpdtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M28"/><svrl:active-pattern><axsl:attribute name="id">httpdstepath</axsl:attribute><axsl:attribute name="name">httpdstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M29"/><svrl:active-pattern><axsl:attribute name="id">httpdstebinaryname</axsl:attribute><axsl:attribute name="name">httpdstebinaryname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M30"/><svrl:active-pattern><axsl:attribute name="id">httpdsteversion</axsl:attribute><axsl:attribute name="name">httpdsteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M31"/><svrl:active-pattern><axsl:attribute name="id">vertst</axsl:attribute><axsl:attribute name="name">vertst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M32"/><svrl:active-pattern><axsl:attribute name="id">apcheversteversion</axsl:attribute><axsl:attribute name="name">apcheversteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M33"/><svrl:active-pattern><axsl:attribute name="id">portinfotst</axsl:attribute><axsl:attribute name="name">portinfotst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M34"/><svrl:active-pattern><axsl:attribute name="id">portinfoobjpkginst</axsl:attribute><axsl:attribute name="name">portinfoobjpkginst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M35"/><svrl:active-pattern><axsl:attribute name="id">portinfostepkginst</axsl:attribute><axsl:attribute name="name">portinfostepkginst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M36"/><svrl:active-pattern><axsl:attribute name="id">portinfostename</axsl:attribute><axsl:attribute name="name">portinfostename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M37"/><svrl:active-pattern><axsl:attribute name="id">portinfostecategory</axsl:attribute><axsl:attribute name="name">portinfostecategory</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M38"/><svrl:active-pattern><axsl:attribute name="id">portinfosteversion</axsl:attribute><axsl:attribute name="name">portinfosteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M39"/><svrl:active-pattern><axsl:attribute name="id">portinfostevendor</axsl:attribute><axsl:attribute name="name">portinfostevendor</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M40"/><svrl:active-pattern><axsl:attribute name="id">portinfostedescription</axsl:attribute><axsl:attribute name="name">portinfostedescription</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M41"/><svrl:active-pattern><axsl:attribute name="id">gcobjparameter_name</axsl:attribute><axsl:attribute name="name">gcobjparameter_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M42"/><svrl:active-pattern><axsl:attribute name="id">gcobjpathname</axsl:attribute><axsl:attribute name="name">gcobjpathname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M43"/><svrl:active-pattern><axsl:attribute name="id">gcsteparameter_name</axsl:attribute><axsl:attribute name="name">gcsteparameter_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M44"/><svrl:active-pattern><axsl:attribute name="id">gcstepathname</axsl:attribute><axsl:attribute name="name">gcstepathname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M45"/><svrl:active-pattern><axsl:attribute name="id">gcsteoutput</axsl:attribute><axsl:attribute name="name">gcsteoutput</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M46"/><svrl:active-pattern><axsl:attribute name="id">patchobjpatch_name</axsl:attribute><axsl:attribute name="name">patchobjpatch_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M47"/><svrl:active-pattern><axsl:attribute name="id">patchstepatch_name</axsl:attribute><axsl:attribute name="name">patchstepatch_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M48"/><svrl:active-pattern><axsl:attribute name="id">patchsteswtype</axsl:attribute><axsl:attribute name="name">patchsteswtype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M49"/><svrl:active-pattern><axsl:attribute name="id">patchstearea_patched</axsl:attribute><axsl:attribute name="name">patchstearea_patched</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M50"/><svrl:active-pattern><axsl:attribute name="id">patchstepatch_base</axsl:attribute><axsl:attribute name="name">patchstepatch_base</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M51"/><svrl:active-pattern><axsl:attribute name="id">swlistobjswlist</axsl:attribute><axsl:attribute name="name">swlistobjswlist</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M52"/><svrl:active-pattern><axsl:attribute name="id">swliststeswlist</axsl:attribute><axsl:attribute name="name">swliststeswlist</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M53"/><svrl:active-pattern><axsl:attribute name="id">swliststebundle</axsl:attribute><axsl:attribute name="name">swliststebundle</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M54"/><svrl:active-pattern><axsl:attribute name="id">swliststefileset</axsl:attribute><axsl:attribute name="name">swliststefileset</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M55"/><svrl:active-pattern><axsl:attribute name="id">swliststeversion</axsl:attribute><axsl:attribute name="name">swliststeversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M56"/><svrl:active-pattern><axsl:attribute name="id">swliststetitle</axsl:attribute><axsl:attribute name="name">swliststetitle</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M57"/><svrl:active-pattern><axsl:attribute name="id">swliststevendor</axsl:attribute><axsl:attribute name="name">swliststevendor</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M58"/><svrl:active-pattern><axsl:attribute name="id">trustobjusername</axsl:attribute><axsl:attribute name="name">trustobjusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M59"/><svrl:active-pattern><axsl:attribute name="id">truststeusername</axsl:attribute><axsl:attribute name="name">truststeusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M60"/><svrl:active-pattern><axsl:attribute name="id">truststeuid</axsl:attribute><axsl:attribute name="name">truststeuid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M61"/><svrl:active-pattern><axsl:attribute name="id">truststepassword</axsl:attribute><axsl:attribute name="name">truststepassword</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M62"/><svrl:active-pattern><axsl:attribute name="id">truststeaccount_owner</axsl:attribute><axsl:attribute name="name">truststeaccount_owner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M63"/><svrl:active-pattern><axsl:attribute name="id">truststeboot_auth</axsl:attribute><axsl:attribute name="name">truststeboot_auth</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M64"/><svrl:active-pattern><axsl:attribute name="id">truststeaudit_id</axsl:attribute><axsl:attribute name="name">truststeaudit_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M65"/><svrl:active-pattern><axsl:attribute name="id">truststeaudit_flag</axsl:attribute><axsl:attribute name="name">truststeaudit_flag</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M66"/><svrl:active-pattern><axsl:attribute name="id">truststepw_change_min</axsl:attribute><axsl:attribute name="name">truststepw_change_min</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M67"/><svrl:active-pattern><axsl:attribute name="id">truststepw_max_size</axsl:attribute><axsl:attribute name="name">truststepw_max_size</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M68"/><svrl:active-pattern><axsl:attribute name="id">truststepw_expiration</axsl:attribute><axsl:attribute name="name">truststepw_expiration</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M69"/><svrl:active-pattern><axsl:attribute name="id">truststepw_life</axsl:attribute><axsl:attribute name="name">truststepw_life</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M70"/><svrl:active-pattern><axsl:attribute name="id">truststepw_change_s</axsl:attribute><axsl:attribute name="name">truststepw_change_s</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M71"/><svrl:active-pattern><axsl:attribute name="id">truststepw_change_u</axsl:attribute><axsl:attribute name="name">truststepw_change_u</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M72"/><svrl:active-pattern><axsl:attribute name="id">truststeacct_expire</axsl:attribute><axsl:attribute name="name">truststeacct_expire</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M73"/><svrl:active-pattern><axsl:attribute name="id">truststemax_llogin</axsl:attribute><axsl:attribute name="name">truststemax_llogin</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M74"/><svrl:active-pattern><axsl:attribute name="id">truststeexp_warning</axsl:attribute><axsl:attribute name="name">truststeexp_warning</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M75"/><svrl:active-pattern><axsl:attribute name="id">truststeusr_chg_pw</axsl:attribute><axsl:attribute name="name">truststeusr_chg_pw</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M76"/><svrl:active-pattern><axsl:attribute name="id">truststegen_pw</axsl:attribute><axsl:attribute name="name">truststegen_pw</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M77"/><svrl:active-pattern><axsl:attribute name="id">truststepw_restrict</axsl:attribute><axsl:attribute name="name">truststepw_restrict</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M78"/><svrl:active-pattern><axsl:attribute name="id">truststepw_null</axsl:attribute><axsl:attribute name="name">truststepw_null</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M79"/><svrl:active-pattern><axsl:attribute name="id">truststepw_gen_char</axsl:attribute><axsl:attribute name="name">truststepw_gen_char</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M80"/><svrl:active-pattern><axsl:attribute name="id">truststepw_gen_let</axsl:attribute><axsl:attribute name="name">truststepw_gen_let</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M81"/><svrl:active-pattern><axsl:attribute name="id">truststelogin_time</axsl:attribute><axsl:attribute name="name">truststelogin_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M82"/><svrl:active-pattern><axsl:attribute name="id">truststepw_changer</axsl:attribute><axsl:attribute name="name">truststepw_changer</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M83"/><svrl:active-pattern><axsl:attribute name="id">truststelogin_time_s</axsl:attribute><axsl:attribute name="name">truststelogin_time_s</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M84"/><svrl:active-pattern><axsl:attribute name="id">truststelogin_time_u</axsl:attribute><axsl:attribute name="name">truststelogin_time_u</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M85"/><svrl:active-pattern><axsl:attribute name="id">truststelogin_tty_s</axsl:attribute><axsl:attribute name="name">truststelogin_tty_s</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M86"/><svrl:active-pattern><axsl:attribute name="id">truststelogin_tty_u</axsl:attribute><axsl:attribute name="name">truststelogin_tty_u</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M87"/><svrl:active-pattern><axsl:attribute name="id">truststenum_u_logins</axsl:attribute><axsl:attribute name="name">truststenum_u_logins</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M88"/><svrl:active-pattern><axsl:attribute name="id">truststemax_u_logins</axsl:attribute><axsl:attribute name="name">truststemax_u_logins</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M89"/><svrl:active-pattern><axsl:attribute name="id">truststelock_flag</axsl:attribute><axsl:attribute name="name">truststelock_flag</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M90"/><svrl:active-pattern><axsl:attribute name="id">famtst</axsl:attribute><axsl:attribute name="name">famtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M91"/><svrl:active-pattern><axsl:attribute name="id">famstefamily</axsl:attribute><axsl:attribute name="name">famstefamily</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M92"/><svrl:active-pattern><axsl:attribute name="id">md5tst</axsl:attribute><axsl:attribute name="name">md5tst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M93"/><svrl:active-pattern><axsl:attribute name="id">md5objpath</axsl:attribute><axsl:attribute name="name">md5objpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M94"/><svrl:active-pattern><axsl:attribute name="id">md5objfilename</axsl:attribute><axsl:attribute name="name">md5objfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M95"/><svrl:active-pattern><axsl:attribute name="id">md5stepath</axsl:attribute><axsl:attribute name="name">md5stepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M96"/><svrl:active-pattern><axsl:attribute name="id">md5stefilename</axsl:attribute><axsl:attribute name="name">md5stefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M97"/><svrl:active-pattern><axsl:attribute name="id">md5stemd5</axsl:attribute><axsl:attribute name="name">md5stemd5</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M98"/><svrl:active-pattern><axsl:attribute name="id">envtst</axsl:attribute><axsl:attribute name="name">envtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M99"/><svrl:active-pattern><axsl:attribute name="id">envobjname</axsl:attribute><axsl:attribute name="name">envobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M100"/><svrl:active-pattern><axsl:attribute name="id">envstename</axsl:attribute><axsl:attribute name="name">envstename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M101"/><svrl:active-pattern><axsl:attribute name="id">envstevalue</axsl:attribute><axsl:attribute name="name">envstevalue</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M102"/><svrl:active-pattern><axsl:attribute name="id">txttst</axsl:attribute><axsl:attribute name="name">txttst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M103"/><svrl:active-pattern><axsl:attribute name="id">txtobjpath</axsl:attribute><axsl:attribute name="name">txtobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M104"/><svrl:active-pattern><axsl:attribute name="id">txtobjfilename</axsl:attribute><axsl:attribute name="name">txtobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M105"/><svrl:active-pattern><axsl:attribute name="id">txtobjline</axsl:attribute><axsl:attribute name="name">txtobjline</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M106"/><svrl:active-pattern><axsl:attribute name="id">txtstepath</axsl:attribute><axsl:attribute name="name">txtstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M107"/><svrl:active-pattern><axsl:attribute name="id">txtstefilename</axsl:attribute><axsl:attribute name="name">txtstefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M108"/><svrl:active-pattern><axsl:attribute name="id">txtsteline</axsl:attribute><axsl:attribute name="name">txtsteline</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M109"/><svrl:active-pattern><axsl:attribute name="id">txtstesubexpression</axsl:attribute><axsl:attribute name="name">txtstesubexpression</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M110"/><svrl:active-pattern><axsl:attribute name="id">vattst</axsl:attribute><axsl:attribute name="name">vattst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M111"/><svrl:active-pattern><axsl:attribute name="id">varobjvar_ref</axsl:attribute><axsl:attribute name="name">varobjvar_ref</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M112"/><svrl:active-pattern><axsl:attribute name="id">varstevar_ref</axsl:attribute><axsl:attribute name="name">varstevar_ref</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M113"/><svrl:active-pattern><axsl:attribute name="id">varstevalue</axsl:attribute><axsl:attribute name="name">varstevalue</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M114"/><svrl:active-pattern><axsl:attribute name="id">xmltst</axsl:attribute><axsl:attribute name="name">xmltst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M115"/><svrl:active-pattern><axsl:attribute name="id">xmlobjpath</axsl:attribute><axsl:attribute name="name">xmlobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M116"/><svrl:active-pattern><axsl:attribute name="id">xmlobjfilename</axsl:attribute><axsl:attribute name="name">xmlobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M117"/><svrl:active-pattern><axsl:attribute name="id">xmlobjxpath</axsl:attribute><axsl:attribute name="name">xmlobjxpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M118"/><svrl:active-pattern><axsl:attribute name="id">xmlstepath</axsl:attribute><axsl:attribute name="name">xmlstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M119"/><svrl:active-pattern><axsl:attribute name="id">xmlstefilename</axsl:attribute><axsl:attribute name="name">xmlstefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M120"/><svrl:active-pattern><axsl:attribute name="id">xmlstexpath</axsl:attribute><axsl:attribute name="name">xmlstexpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M121"/><svrl:active-pattern><axsl:attribute name="id">xmlstevalue_of</axsl:attribute><axsl:attribute name="name">xmlstevalue_of</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M122"/><svrl:active-pattern><axsl:attribute name="id">globaltst</axsl:attribute><axsl:attribute name="name">globaltst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M123"/><svrl:active-pattern><axsl:attribute name="id">globalobjglobal_command</axsl:attribute><axsl:attribute name="name">globalobjglobal_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M124"/><svrl:active-pattern><axsl:attribute name="id">globalsteglobal_command</axsl:attribute><axsl:attribute name="name">globalsteglobal_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M125"/><svrl:active-pattern><axsl:attribute name="id">interfacetst</axsl:attribute><axsl:attribute name="name">interfacetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M126"/><svrl:active-pattern><axsl:attribute name="id">interfaceobjname</axsl:attribute><axsl:attribute name="name">interfaceobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M127"/><svrl:active-pattern><axsl:attribute name="id">interfacestename</axsl:attribute><axsl:attribute name="name">interfacestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M128"/><svrl:active-pattern><axsl:attribute name="id">interfacesteip_directed_broadcast_command</axsl:attribute><axsl:attribute name="name">interfacesteip_directed_broadcast_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M129"/><svrl:active-pattern><axsl:attribute name="id">interfacesteno_ip_directed_broadcast_command</axsl:attribute><axsl:attribute name="name">interfacesteno_ip_directed_broadcast_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M130"/><svrl:active-pattern><axsl:attribute name="id">interfacesteproxy_arp_command</axsl:attribute><axsl:attribute name="name">interfacesteproxy_arp_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M131"/><svrl:active-pattern><axsl:attribute name="id">interfacesteshutdown_command</axsl:attribute><axsl:attribute name="name">interfacesteshutdown_command</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M132"/><svrl:active-pattern><axsl:attribute name="id">linetst</axsl:attribute><axsl:attribute name="name">linetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M133"/><svrl:active-pattern><axsl:attribute name="id">lineobjshow_subcommand</axsl:attribute><axsl:attribute name="name">lineobjshow_subcommand</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M134"/><svrl:active-pattern><axsl:attribute name="id">linesteshow_subcommand</axsl:attribute><axsl:attribute name="name">linesteshow_subcommand</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M135"/><svrl:active-pattern><axsl:attribute name="id">linesteconfig_line</axsl:attribute><axsl:attribute name="name">linesteconfig_line</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M136"/><svrl:active-pattern><axsl:attribute name="id">snmptst</axsl:attribute><axsl:attribute name="name">snmptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M137"/><svrl:active-pattern><axsl:attribute name="id">snmpsteaccess_list</axsl:attribute><axsl:attribute name="name">snmpsteaccess_list</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M138"/><svrl:active-pattern><axsl:attribute name="id">snmpstecommunity_name</axsl:attribute><axsl:attribute name="name">snmpstecommunity_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M139"/><svrl:active-pattern><axsl:attribute name="id">tclshtst</axsl:attribute><axsl:attribute name="name">tclshtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M140"/><svrl:active-pattern><axsl:attribute name="id">tclshsteavailable</axsl:attribute><axsl:attribute name="name">tclshsteavailable</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M141"/><svrl:active-pattern><axsl:attribute name="id">vertst</axsl:attribute><axsl:attribute name="name">vertst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M142"/><svrl:active-pattern><axsl:attribute name="id">verstemajor_release</axsl:attribute><axsl:attribute name="name">verstemajor_release</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M143"/><svrl:active-pattern><axsl:attribute name="id">verstetrain_number</axsl:attribute><axsl:attribute name="name">verstetrain_number</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M144"/><svrl:active-pattern><axsl:attribute name="id">verstetrain_identifier</axsl:attribute><axsl:attribute name="name">verstetrain_identifier</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M145"/><svrl:active-pattern><axsl:attribute name="id">versteversion_string</axsl:attribute><axsl:attribute name="name">versteversion_string</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M146"/><svrl:active-pattern><axsl:attribute name="id">dpkgobjname</axsl:attribute><axsl:attribute name="name">dpkgobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M147"/><svrl:active-pattern><axsl:attribute name="id">dpkgstename</axsl:attribute><axsl:attribute name="name">dpkgstename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M148"/><svrl:active-pattern><axsl:attribute name="id">dpkgstearch</axsl:attribute><axsl:attribute name="name">dpkgstearch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M149"/><svrl:active-pattern><axsl:attribute name="id">dpkgsteepoch</axsl:attribute><axsl:attribute name="name">dpkgsteepoch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M150"/><svrl:active-pattern><axsl:attribute name="id">dpkgsterelease</axsl:attribute><axsl:attribute name="name">dpkgsterelease</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M151"/><svrl:active-pattern><axsl:attribute name="id">dpkgsteversion</axsl:attribute><axsl:attribute name="name">dpkgsteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M152"/><svrl:active-pattern><axsl:attribute name="id">dpkgsteevr</axsl:attribute><axsl:attribute name="name">dpkgsteevr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M153"/><svrl:active-pattern><axsl:attribute name="id">ilsobjprotocol</axsl:attribute><axsl:attribute name="name">ilsobjprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M154"/><svrl:active-pattern><axsl:attribute name="id">ilsobjlocal_address</axsl:attribute><axsl:attribute name="name">ilsobjlocal_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M155"/><svrl:active-pattern><axsl:attribute name="id">ilsobjlocal_port</axsl:attribute><axsl:attribute name="name">ilsobjlocal_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M156"/><svrl:active-pattern><axsl:attribute name="id">ilssteprotocol</axsl:attribute><axsl:attribute name="name">ilssteprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M157"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_address</axsl:attribute><axsl:attribute name="name">ilsstelocal_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M158"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_port</axsl:attribute><axsl:attribute name="name">ilsstelocal_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M159"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_full_address</axsl:attribute><axsl:attribute name="name">ilsstelocal_full_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M160"/><svrl:active-pattern><axsl:attribute name="id">ilssteprogram_name</axsl:attribute><axsl:attribute name="name">ilssteprogram_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M161"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_address</axsl:attribute><axsl:attribute name="name">ilssteforeign_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M162"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_port</axsl:attribute><axsl:attribute name="name">ilssteforeign_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M163"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_full_address</axsl:attribute><axsl:attribute name="name">ilssteforeign_full_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M164"/><svrl:active-pattern><axsl:attribute name="id">ilsstepid</axsl:attribute><axsl:attribute name="name">ilsstepid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M165"/><svrl:active-pattern><axsl:attribute name="id">ilssteuser_id</axsl:attribute><axsl:attribute name="name">ilssteuser_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M166"/><svrl:active-pattern><axsl:attribute name="id">rpmobjname</axsl:attribute><axsl:attribute name="name">rpmobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M167"/><svrl:active-pattern><axsl:attribute name="id">rpmstename</axsl:attribute><axsl:attribute name="name">rpmstename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M168"/><svrl:active-pattern><axsl:attribute name="id">rpmstearch</axsl:attribute><axsl:attribute name="name">rpmstearch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M169"/><svrl:active-pattern><axsl:attribute name="id">rpmsteepoch</axsl:attribute><axsl:attribute name="name">rpmsteepoch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M170"/><svrl:active-pattern><axsl:attribute name="id">rpmsterelease</axsl:attribute><axsl:attribute name="name">rpmsterelease</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M171"/><svrl:active-pattern><axsl:attribute name="id">rpmsteversion</axsl:attribute><axsl:attribute name="name">rpmsteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M172"/><svrl:active-pattern><axsl:attribute name="id">rpmsteevr</axsl:attribute><axsl:attribute name="name">rpmsteevr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M173"/><svrl:active-pattern><axsl:attribute name="id">rpmstesignaturekeyid</axsl:attribute><axsl:attribute name="name">rpmstesignaturekeyid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M174"/><svrl:active-pattern><axsl:attribute name="id">spkginfoobjname</axsl:attribute><axsl:attribute name="name">spkginfoobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M175"/><svrl:active-pattern><axsl:attribute name="id">spkginfostename</axsl:attribute><axsl:attribute name="name">spkginfostename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M176"/><svrl:active-pattern><axsl:attribute name="id">spkginfosteversion</axsl:attribute><axsl:attribute name="name">spkginfosteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M177"/><svrl:active-pattern><axsl:attribute name="id">spkginfostearch</axsl:attribute><axsl:attribute name="name">spkginfostearch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M178"/><svrl:active-pattern><axsl:attribute name="id">spkginfosterevision</axsl:attribute><axsl:attribute name="name">spkginfosterevision</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M179"/><svrl:active-pattern><axsl:attribute name="id">accountobjusername</axsl:attribute><axsl:attribute name="name">accountobjusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M180"/><svrl:active-pattern><axsl:attribute name="id">accountsteusername</axsl:attribute><axsl:attribute name="name">accountsteusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M181"/><svrl:active-pattern><axsl:attribute name="id">accountstepassword</axsl:attribute><axsl:attribute name="name">accountstepassword</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M182"/><svrl:active-pattern><axsl:attribute name="id">accountsteuid</axsl:attribute><axsl:attribute name="name">accountsteuid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M183"/><svrl:active-pattern><axsl:attribute name="id">accountstegid</axsl:attribute><axsl:attribute name="name">accountstegid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M184"/><svrl:active-pattern><axsl:attribute name="id">accountsterealname</axsl:attribute><axsl:attribute name="name">accountsterealname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M185"/><svrl:active-pattern><axsl:attribute name="id">accountstehome_dir</axsl:attribute><axsl:attribute name="name">accountstehome_dir</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M186"/><svrl:active-pattern><axsl:attribute name="id">accountstelogin_shell</axsl:attribute><axsl:attribute name="name">accountstelogin_shell</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M187"/><svrl:active-pattern><axsl:attribute name="id">ilsobjprogram_name</axsl:attribute><axsl:attribute name="name">ilsobjprogram_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M188"/><svrl:active-pattern><axsl:attribute name="id">ilssteprogram_name</axsl:attribute><axsl:attribute name="name">ilssteprogram_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M189"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_address</axsl:attribute><axsl:attribute name="name">ilsstelocal_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M190"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_full_address</axsl:attribute><axsl:attribute name="name">ilsstelocal_full_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M191"/><svrl:active-pattern><axsl:attribute name="id">ilsstelocal_port</axsl:attribute><axsl:attribute name="name">ilsstelocal_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M192"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_address</axsl:attribute><axsl:attribute name="name">ilssteforeign_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M193"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_full_address</axsl:attribute><axsl:attribute name="name">ilssteforeign_full_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M194"/><svrl:active-pattern><axsl:attribute name="id">ilssteforeign_port</axsl:attribute><axsl:attribute name="name">ilssteforeign_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M195"/><svrl:active-pattern><axsl:attribute name="id">ilsstepid</axsl:attribute><axsl:attribute name="name">ilsstepid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M196"/><svrl:active-pattern><axsl:attribute name="id">ilssteprotocol</axsl:attribute><axsl:attribute name="name">ilssteprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M197"/><svrl:active-pattern><axsl:attribute name="id">ilssteuser_id</axsl:attribute><axsl:attribute name="name">ilssteuser_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M198"/><svrl:active-pattern><axsl:attribute name="id">nvramobjnvram_var</axsl:attribute><axsl:attribute name="name">nvramobjnvram_var</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M199"/><svrl:active-pattern><axsl:attribute name="id">nvramstenvram_var</axsl:attribute><axsl:attribute name="name">nvramstenvram_var</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M200"/><svrl:active-pattern><axsl:attribute name="id">nvramstenvram_value</axsl:attribute><axsl:attribute name="name">nvramstenvram_value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M201"/><svrl:active-pattern><axsl:attribute name="id">pwpobjusername</axsl:attribute><axsl:attribute name="name">pwpobjusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M202"/><svrl:active-pattern><axsl:attribute name="id">pwpobjuserpass</axsl:attribute><axsl:attribute name="name">pwpobjuserpass</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M203"/><svrl:active-pattern><axsl:attribute name="id">pwpobjdirectory_node</axsl:attribute><axsl:attribute name="name">pwpobjdirectory_node</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M204"/><svrl:active-pattern><axsl:attribute name="id">pwpsteusername</axsl:attribute><axsl:attribute name="name">pwpsteusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M205"/><svrl:active-pattern><axsl:attribute name="id">pwpsteuserpass</axsl:attribute><axsl:attribute name="name">pwpsteuserpass</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M206"/><svrl:active-pattern><axsl:attribute name="id">pwpstedirectory_node</axsl:attribute><axsl:attribute name="name">pwpstedirectory_node</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M207"/><svrl:active-pattern><axsl:attribute name="id">pwpstemaxChars</axsl:attribute><axsl:attribute name="name">pwpstemaxChars</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M208"/><svrl:active-pattern><axsl:attribute name="id">pwpstemaxFailedLoginAttempts</axsl:attribute><axsl:attribute name="name">pwpstemaxFailedLoginAttempts</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M209"/><svrl:active-pattern><axsl:attribute name="id">pwpsteminChars</axsl:attribute><axsl:attribute name="name">pwpsteminChars</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M210"/><svrl:active-pattern><axsl:attribute name="id">pwpstepasswordCannotBeName</axsl:attribute><axsl:attribute name="name">pwpstepasswordCannotBeName</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M211"/><svrl:active-pattern><axsl:attribute name="id">pwpsterequiresAlpha</axsl:attribute><axsl:attribute name="name">pwpsterequiresAlpha</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M212"/><svrl:active-pattern><axsl:attribute name="id">pwpsterequiresNumeric</axsl:attribute><axsl:attribute name="name">pwpsterequiresNumeric</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M213"/><svrl:active-pattern><axsl:attribute name="id">isastebits</axsl:attribute><axsl:attribute name="name">isastebits</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M214"/><svrl:active-pattern><axsl:attribute name="id">isastekernel_isa</axsl:attribute><axsl:attribute name="name">isastekernel_isa</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M215"/><svrl:active-pattern><axsl:attribute name="id">isasteapplication_isa</axsl:attribute><axsl:attribute name="name">isasteapplication_isa</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M216"/><svrl:active-pattern><axsl:attribute name="id">packageobjpkginst</axsl:attribute><axsl:attribute name="name">packageobjpkginst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M217"/><svrl:active-pattern><axsl:attribute name="id">packagestepkginst</axsl:attribute><axsl:attribute name="name">packagestepkginst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M218"/><svrl:active-pattern><axsl:attribute name="id">packagestename</axsl:attribute><axsl:attribute name="name">packagestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M219"/><svrl:active-pattern><axsl:attribute name="id">packagestecategory</axsl:attribute><axsl:attribute name="name">packagestecategory</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M220"/><svrl:active-pattern><axsl:attribute name="id">packagesteversion</axsl:attribute><axsl:attribute name="name">packagesteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M221"/><svrl:active-pattern><axsl:attribute name="id">packagestevendor</axsl:attribute><axsl:attribute name="name">packagestevendor</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M222"/><svrl:active-pattern><axsl:attribute name="id">packagestedescription</axsl:attribute><axsl:attribute name="name">packagestedescription</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M223"/><svrl:active-pattern><axsl:attribute name="id">patchobjbase</axsl:attribute><axsl:attribute name="name">patchobjbase</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M224"/><svrl:active-pattern><axsl:attribute name="id">patchstebase</axsl:attribute><axsl:attribute name="name">patchstebase</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M225"/><svrl:active-pattern><axsl:attribute name="id">patchsteversion</axsl:attribute><axsl:attribute name="name">patchsteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M226"/><svrl:active-pattern><axsl:attribute name="id">unixfileobjpath</axsl:attribute><axsl:attribute name="name">unixfileobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M227"/><svrl:active-pattern><axsl:attribute name="id">unixfileobjfilename</axsl:attribute><axsl:attribute name="name">unixfileobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M228"/><svrl:active-pattern><axsl:attribute name="id">unixfilestepath</axsl:attribute><axsl:attribute name="name">unixfilestepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M229"/><svrl:active-pattern><axsl:attribute name="id">unixfilestefilename</axsl:attribute><axsl:attribute name="name">unixfilestefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M230"/><svrl:active-pattern><axsl:attribute name="id">unixfilestetype</axsl:attribute><axsl:attribute name="name">unixfilestetype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M231"/><svrl:active-pattern><axsl:attribute name="id">unixfilestegroup_id</axsl:attribute><axsl:attribute name="name">unixfilestegroup_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M232"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteuser_id</axsl:attribute><axsl:attribute name="name">unixfilesteuser_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M233"/><svrl:active-pattern><axsl:attribute name="id">unixfilestea_time</axsl:attribute><axsl:attribute name="name">unixfilestea_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M234"/><svrl:active-pattern><axsl:attribute name="id">unixfilestec_time</axsl:attribute><axsl:attribute name="name">unixfilestec_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M235"/><svrl:active-pattern><axsl:attribute name="id">unixfilestem_time</axsl:attribute><axsl:attribute name="name">unixfilestem_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M236"/><svrl:active-pattern><axsl:attribute name="id">unixfilestesize</axsl:attribute><axsl:attribute name="name">unixfilestesize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M237"/><svrl:active-pattern><axsl:attribute name="id">unixfilestesuid</axsl:attribute><axsl:attribute name="name">unixfilestesuid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M238"/><svrl:active-pattern><axsl:attribute name="id">unixfilestesgid</axsl:attribute><axsl:attribute name="name">unixfilestesgid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M239"/><svrl:active-pattern><axsl:attribute name="id">unixfilestesticky</axsl:attribute><axsl:attribute name="name">unixfilestesticky</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M240"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteuread</axsl:attribute><axsl:attribute name="name">unixfilesteuread</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M241"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteuwrite</axsl:attribute><axsl:attribute name="name">unixfilesteuwrite</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M242"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteuexec</axsl:attribute><axsl:attribute name="name">unixfilesteuexec</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M243"/><svrl:active-pattern><axsl:attribute name="id">unixfilestegread</axsl:attribute><axsl:attribute name="name">unixfilestegread</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M244"/><svrl:active-pattern><axsl:attribute name="id">unixfilestegwrite</axsl:attribute><axsl:attribute name="name">unixfilestegwrite</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M245"/><svrl:active-pattern><axsl:attribute name="id">unixfilestegexec</axsl:attribute><axsl:attribute name="name">unixfilestegexec</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M246"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteoread</axsl:attribute><axsl:attribute name="name">unixfilesteoread</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M247"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteowrite</axsl:attribute><axsl:attribute name="name">unixfilesteowrite</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M248"/><svrl:active-pattern><axsl:attribute name="id">unixfilesteoexec</axsl:attribute><axsl:attribute name="name">unixfilesteoexec</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M249"/><svrl:active-pattern><axsl:attribute name="id">inetdobjprotocol</axsl:attribute><axsl:attribute name="name">inetdobjprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M250"/><svrl:active-pattern><axsl:attribute name="id">inetdobjservice_name</axsl:attribute><axsl:attribute name="name">inetdobjservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M251"/><svrl:active-pattern><axsl:attribute name="id">inetdsteprotocol</axsl:attribute><axsl:attribute name="name">inetdsteprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M252"/><svrl:active-pattern><axsl:attribute name="id">inetdsteservice_name</axsl:attribute><axsl:attribute name="name">inetdsteservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M253"/><svrl:active-pattern><axsl:attribute name="id">inetdsteserver_program</axsl:attribute><axsl:attribute name="name">inetdsteserver_program</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M254"/><svrl:active-pattern><axsl:attribute name="id">inetdsteserver_arguments</axsl:attribute><axsl:attribute name="name">inetdsteserver_arguments</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M255"/><svrl:active-pattern><axsl:attribute name="id">inetdsteendpoint_type</axsl:attribute><axsl:attribute name="name">inetdsteendpoint_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M256"/><svrl:active-pattern><axsl:attribute name="id">inetdsteexec_as_user</axsl:attribute><axsl:attribute name="name">inetdsteexec_as_user</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M257"/><svrl:active-pattern><axsl:attribute name="id">inetdstewait_status</axsl:attribute><axsl:attribute name="name">inetdstewait_status</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M258"/><svrl:active-pattern><axsl:attribute name="id">unixinterfaceobjname</axsl:attribute><axsl:attribute name="name">unixinterfaceobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M259"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacestename</axsl:attribute><axsl:attribute name="name">unixinterfacestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M260"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacestehardware_addr</axsl:attribute><axsl:attribute name="name">unixinterfacestehardware_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M261"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacesteinet_addr</axsl:attribute><axsl:attribute name="name">unixinterfacesteinet_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M262"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacestebroadcast_addr</axsl:attribute><axsl:attribute name="name">unixinterfacestebroadcast_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M263"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacestenetmask</axsl:attribute><axsl:attribute name="name">unixinterfacestenetmask</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M264"/><svrl:active-pattern><axsl:attribute name="id">unixinterfacesteflag</axsl:attribute><axsl:attribute name="name">unixinterfacesteflag</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M265"/><svrl:active-pattern><axsl:attribute name="id">passwordobjusername</axsl:attribute><axsl:attribute name="name">passwordobjusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M266"/><svrl:active-pattern><axsl:attribute name="id">passwordsteusername</axsl:attribute><axsl:attribute name="name">passwordsteusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M267"/><svrl:active-pattern><axsl:attribute name="id">passwordstepassword</axsl:attribute><axsl:attribute name="name">passwordstepassword</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M268"/><svrl:active-pattern><axsl:attribute name="id">passwordsteuser_id</axsl:attribute><axsl:attribute name="name">passwordsteuser_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M269"/><svrl:active-pattern><axsl:attribute name="id">passwordstegroup_id</axsl:attribute><axsl:attribute name="name">passwordstegroup_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M270"/><svrl:active-pattern><axsl:attribute name="id">passwordstegcos</axsl:attribute><axsl:attribute name="name">passwordstegcos</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M271"/><svrl:active-pattern><axsl:attribute name="id">passwordstehome_dir</axsl:attribute><axsl:attribute name="name">passwordstehome_dir</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M272"/><svrl:active-pattern><axsl:attribute name="id">passwordstelogin_shell</axsl:attribute><axsl:attribute name="name">passwordstelogin_shell</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M273"/><svrl:active-pattern><axsl:attribute name="id">unixprocessobjcommand</axsl:attribute><axsl:attribute name="name">unixprocessobjcommand</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M274"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstecommand</axsl:attribute><axsl:attribute name="name">unixprocessstecommand</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M275"/><svrl:active-pattern><axsl:attribute name="id">unixprocesssteexec_time</axsl:attribute><axsl:attribute name="name">unixprocesssteexec_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M276"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstepid</axsl:attribute><axsl:attribute name="name">unixprocessstepid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M277"/><svrl:active-pattern><axsl:attribute name="id">unixprocesssteppid</axsl:attribute><axsl:attribute name="name">unixprocesssteppid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M278"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstepriority</axsl:attribute><axsl:attribute name="name">unixprocessstepriority</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M279"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstescheduling_class</axsl:attribute><axsl:attribute name="name">unixprocessstescheduling_class</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M280"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstestart_time</axsl:attribute><axsl:attribute name="name">unixprocessstestart_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M281"/><svrl:active-pattern><axsl:attribute name="id">unixprocessstetty</axsl:attribute><axsl:attribute name="name">unixprocessstetty</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M282"/><svrl:active-pattern><axsl:attribute name="id">unixprocesssteuser_id</axsl:attribute><axsl:attribute name="name">unixprocesssteuser_id</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M283"/><svrl:active-pattern><axsl:attribute name="id">unixrlobjservice_name</axsl:attribute><axsl:attribute name="name">unixrlobjservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M284"/><svrl:active-pattern><axsl:attribute name="id">unixrlobjrunlevel</axsl:attribute><axsl:attribute name="name">unixrlobjrunlevel</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M285"/><svrl:active-pattern><axsl:attribute name="id">unixrlsteservice_name</axsl:attribute><axsl:attribute name="name">unixrlsteservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M286"/><svrl:active-pattern><axsl:attribute name="id">unixrlsterunlevel</axsl:attribute><axsl:attribute name="name">unixrlsterunlevel</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M287"/><svrl:active-pattern><axsl:attribute name="id">unixrlstestart</axsl:attribute><axsl:attribute name="name">unixrlstestart</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M288"/><svrl:active-pattern><axsl:attribute name="id">unixrlstekill</axsl:attribute><axsl:attribute name="name">unixrlstekill</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M289"/><svrl:active-pattern><axsl:attribute name="id">sccsobjpath</axsl:attribute><axsl:attribute name="name">sccsobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M290"/><svrl:active-pattern><axsl:attribute name="id">sccsobjfilename</axsl:attribute><axsl:attribute name="name">sccsobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M291"/><svrl:active-pattern><axsl:attribute name="id">sccsstepath</axsl:attribute><axsl:attribute name="name">sccsstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M292"/><svrl:active-pattern><axsl:attribute name="id">sccsstefilename</axsl:attribute><axsl:attribute name="name">sccsstefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M293"/><svrl:active-pattern><axsl:attribute name="id">sccsstemodule_name</axsl:attribute><axsl:attribute name="name">sccsstemodule_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M294"/><svrl:active-pattern><axsl:attribute name="id">sccsstemodule_type</axsl:attribute><axsl:attribute name="name">sccsstemodule_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M295"/><svrl:active-pattern><axsl:attribute name="id">sccssterelease</axsl:attribute><axsl:attribute name="name">sccssterelease</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M296"/><svrl:active-pattern><axsl:attribute name="id">sccsstelevel</axsl:attribute><axsl:attribute name="name">sccsstelevel</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M297"/><svrl:active-pattern><axsl:attribute name="id">sccsstebranch</axsl:attribute><axsl:attribute name="name">sccsstebranch</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M298"/><svrl:active-pattern><axsl:attribute name="id">sccsstesequence</axsl:attribute><axsl:attribute name="name">sccsstesequence</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M299"/><svrl:active-pattern><axsl:attribute name="id">sccsstewhat_string</axsl:attribute><axsl:attribute name="name">sccsstewhat_string</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M300"/><svrl:active-pattern><axsl:attribute name="id">shadowobjusername</axsl:attribute><axsl:attribute name="name">shadowobjusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M301"/><svrl:active-pattern><axsl:attribute name="id">shadowsteusername</axsl:attribute><axsl:attribute name="name">shadowsteusername</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M302"/><svrl:active-pattern><axsl:attribute name="id">shadowstepassword</axsl:attribute><axsl:attribute name="name">shadowstepassword</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M303"/><svrl:active-pattern><axsl:attribute name="id">shadowstechg_lst</axsl:attribute><axsl:attribute name="name">shadowstechg_lst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M304"/><svrl:active-pattern><axsl:attribute name="id">shadowstechg_allow</axsl:attribute><axsl:attribute name="name">shadowstechg_allow</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M305"/><svrl:active-pattern><axsl:attribute name="id">shadowstechg_req</axsl:attribute><axsl:attribute name="name">shadowstechg_req</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M306"/><svrl:active-pattern><axsl:attribute name="id">shadowsteexp_warn</axsl:attribute><axsl:attribute name="name">shadowsteexp_warn</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M307"/><svrl:active-pattern><axsl:attribute name="id">shadowsteexp_inact</axsl:attribute><axsl:attribute name="name">shadowsteexp_inact</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M308"/><svrl:active-pattern><axsl:attribute name="id">shadowsteexp_date</axsl:attribute><axsl:attribute name="name">shadowsteexp_date</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M309"/><svrl:active-pattern><axsl:attribute name="id">shadowsteflag</axsl:attribute><axsl:attribute name="name">shadowsteflag</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M310"/><svrl:active-pattern><axsl:attribute name="id">unamestemachine_class</axsl:attribute><axsl:attribute name="name">unamestemachine_class</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M311"/><svrl:active-pattern><axsl:attribute name="id">unamestenode_name</axsl:attribute><axsl:attribute name="name">unamestenode_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M312"/><svrl:active-pattern><axsl:attribute name="id">unamesteos_name</axsl:attribute><axsl:attribute name="name">unamesteos_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M313"/><svrl:active-pattern><axsl:attribute name="id">unamesteos_release</axsl:attribute><axsl:attribute name="name">unamesteos_release</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M314"/><svrl:active-pattern><axsl:attribute name="id">unamesteos_version</axsl:attribute><axsl:attribute name="name">unamesteos_version</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M315"/><svrl:active-pattern><axsl:attribute name="id">unamesteprocessor_type</axsl:attribute><axsl:attribute name="name">unamesteprocessor_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M316"/><svrl:active-pattern><axsl:attribute name="id">xinetdobjprotocol</axsl:attribute><axsl:attribute name="name">xinetdobjprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M317"/><svrl:active-pattern><axsl:attribute name="id">xinetdobjservice_name</axsl:attribute><axsl:attribute name="name">xinetdobjservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M318"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteprotocol</axsl:attribute><axsl:attribute name="name">xinetdsteprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M319"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteservice_name</axsl:attribute><axsl:attribute name="name">xinetdsteservice_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M320"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteflags</axsl:attribute><axsl:attribute name="name">xinetdsteflags</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M321"/><svrl:active-pattern><axsl:attribute name="id">xinetdstenoaccess</axsl:attribute><axsl:attribute name="name">xinetdstenoaccess</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M322"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteonlyfrom</axsl:attribute><axsl:attribute name="name">xinetdsteonlyfrom</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M323"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteport</axsl:attribute><axsl:attribute name="name">xinetdsteport</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M324"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteserver</axsl:attribute><axsl:attribute name="name">xinetdsteserver</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M325"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteserverarguments</axsl:attribute><axsl:attribute name="name">xinetdsteserverarguments</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M326"/><svrl:active-pattern><axsl:attribute name="id">xinetdstesockettype</axsl:attribute><axsl:attribute name="name">xinetdstesockettype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M327"/><svrl:active-pattern><axsl:attribute name="id">xinetdstetype</axsl:attribute><axsl:attribute name="name">xinetdstetype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M328"/><svrl:active-pattern><axsl:attribute name="id">xinetdsteuser</axsl:attribute><axsl:attribute name="name">xinetdsteuser</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M329"/><svrl:active-pattern><axsl:attribute name="id">xinetdstewait</axsl:attribute><axsl:attribute name="name">xinetdstewait</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M330"/><svrl:active-pattern><axsl:attribute name="id">xinetdstedisabled</axsl:attribute><axsl:attribute name="name">xinetdstedisabled</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M331"/><svrl:active-pattern><axsl:attribute name="id">affected_platform</axsl:attribute><axsl:attribute name="name">affected_platform</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M332"/><svrl:active-pattern><axsl:attribute name="id">attst</axsl:attribute><axsl:attribute name="name">attst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M333"/><svrl:active-pattern><axsl:attribute name="id">atobjsecurity_principle</axsl:attribute><axsl:attribute name="name">atobjsecurity_principle</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M334"/><svrl:active-pattern><axsl:attribute name="id">atstesecurity_principle</axsl:attribute><axsl:attribute name="name">atstesecurity_principle</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M335"/><svrl:active-pattern><axsl:attribute name="id">atsteseassignprimarytokenprivilege</axsl:attribute><axsl:attribute name="name">atsteseassignprimarytokenprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M336"/><svrl:active-pattern><axsl:attribute name="id">atsteseauditprivilege</axsl:attribute><axsl:attribute name="name">atsteseauditprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M337"/><svrl:active-pattern><axsl:attribute name="id">atstesebackupprivilege</axsl:attribute><axsl:attribute name="name">atstesebackupprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M338"/><svrl:active-pattern><axsl:attribute name="id">atstesechangenotifyprivilege</axsl:attribute><axsl:attribute name="name">atstesechangenotifyprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M339"/><svrl:active-pattern><axsl:attribute name="id">atstesecreateglobalprivilege</axsl:attribute><axsl:attribute name="name">atstesecreateglobalprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M340"/><svrl:active-pattern><axsl:attribute name="id">atstesecreatepagefileprivilege</axsl:attribute><axsl:attribute name="name">atstesecreatepagefileprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M341"/><svrl:active-pattern><axsl:attribute name="id">atstesecreatepermanentprivilege</axsl:attribute><axsl:attribute name="name">atstesecreatepermanentprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M342"/><svrl:active-pattern><axsl:attribute name="id">atstesecreatetokenprivilege</axsl:attribute><axsl:attribute name="name">atstesecreatetokenprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M343"/><svrl:active-pattern><axsl:attribute name="id">atstesedebugprivilege</axsl:attribute><axsl:attribute name="name">atstesedebugprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M344"/><svrl:active-pattern><axsl:attribute name="id">atsteseenabledelegationprivilege</axsl:attribute><axsl:attribute name="name">atsteseenabledelegationprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M345"/><svrl:active-pattern><axsl:attribute name="id">atsteseimpersonateprivilege</axsl:attribute><axsl:attribute name="name">atsteseimpersonateprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M346"/><svrl:active-pattern><axsl:attribute name="id">atsteseincreasebasepriorityprivilege</axsl:attribute><axsl:attribute name="name">atsteseincreasebasepriorityprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M347"/><svrl:active-pattern><axsl:attribute name="id">atsteseincreasequotaprivilege</axsl:attribute><axsl:attribute name="name">atsteseincreasequotaprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M348"/><svrl:active-pattern><axsl:attribute name="id">atsteseloaddriverprivilege</axsl:attribute><axsl:attribute name="name">atsteseloaddriverprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M349"/><svrl:active-pattern><axsl:attribute name="id">atsteselockmemoryprivilege</axsl:attribute><axsl:attribute name="name">atsteselockmemoryprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M350"/><svrl:active-pattern><axsl:attribute name="id">atstesemachineaccountprivilege</axsl:attribute><axsl:attribute name="name">atstesemachineaccountprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M351"/><svrl:active-pattern><axsl:attribute name="id">atstesemanagevolumeprivilege</axsl:attribute><axsl:attribute name="name">atstesemanagevolumeprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M352"/><svrl:active-pattern><axsl:attribute name="id">atsteseprofilesingleprocessprivilege</axsl:attribute><axsl:attribute name="name">atsteseprofilesingleprocessprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M353"/><svrl:active-pattern><axsl:attribute name="id">atsteseremoteshutdownprivilege</axsl:attribute><axsl:attribute name="name">atsteseremoteshutdownprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M354"/><svrl:active-pattern><axsl:attribute name="id">atsteserestoreprivilege</axsl:attribute><axsl:attribute name="name">atsteserestoreprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M355"/><svrl:active-pattern><axsl:attribute name="id">atstesesecurityprivilege</axsl:attribute><axsl:attribute name="name">atstesesecurityprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M356"/><svrl:active-pattern><axsl:attribute name="id">atsteseshutdownprivilege</axsl:attribute><axsl:attribute name="name">atsteseshutdownprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M357"/><svrl:active-pattern><axsl:attribute name="id">atstesesyncagentprivilege</axsl:attribute><axsl:attribute name="name">atstesesyncagentprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M358"/><svrl:active-pattern><axsl:attribute name="id">atstesesystemenvironmentprivilege</axsl:attribute><axsl:attribute name="name">atstesesystemenvironmentprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M359"/><svrl:active-pattern><axsl:attribute name="id">atstesesystemprofileprivilege</axsl:attribute><axsl:attribute name="name">atstesesystemprofileprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M360"/><svrl:active-pattern><axsl:attribute name="id">atstesesystemtimeprivilege</axsl:attribute><axsl:attribute name="name">atstesesystemtimeprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M361"/><svrl:active-pattern><axsl:attribute name="id">atstesetakeownershipprivilege</axsl:attribute><axsl:attribute name="name">atstesetakeownershipprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M362"/><svrl:active-pattern><axsl:attribute name="id">atstesetcbprivilege</axsl:attribute><axsl:attribute name="name">atstesetcbprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M363"/><svrl:active-pattern><axsl:attribute name="id">atsteseundockprivilege</axsl:attribute><axsl:attribute name="name">atsteseundockprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M364"/><svrl:active-pattern><axsl:attribute name="id">atsteseunsolicitedinputprivilege</axsl:attribute><axsl:attribute name="name">atsteseunsolicitedinputprivilege</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M365"/><svrl:active-pattern><axsl:attribute name="id">atstesebatchlogonright</axsl:attribute><axsl:attribute name="name">atstesebatchlogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M366"/><svrl:active-pattern><axsl:attribute name="id">atsteseinteractivelogonright</axsl:attribute><axsl:attribute name="name">atsteseinteractivelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M367"/><svrl:active-pattern><axsl:attribute name="id">atstesenetworklogonright</axsl:attribute><axsl:attribute name="name">atstesenetworklogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M368"/><svrl:active-pattern><axsl:attribute name="id">atsteseremoteinteractivelogonright</axsl:attribute><axsl:attribute name="name">atsteseremoteinteractivelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M369"/><svrl:active-pattern><axsl:attribute name="id">atsteseservicelogonright</axsl:attribute><axsl:attribute name="name">atsteseservicelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M370"/><svrl:active-pattern><axsl:attribute name="id">atstesedenybatchLogonright</axsl:attribute><axsl:attribute name="name">atstesedenybatchLogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M371"/><svrl:active-pattern><axsl:attribute name="id">atstesedenyinteractivelogonright</axsl:attribute><axsl:attribute name="name">atstesedenyinteractivelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M372"/><svrl:active-pattern><axsl:attribute name="id">atstesedenynetworklogonright</axsl:attribute><axsl:attribute name="name">atstesedenynetworklogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M373"/><svrl:active-pattern><axsl:attribute name="id">atstesedenyremoteInteractivelogonright</axsl:attribute><axsl:attribute name="name">atstesedenyremoteInteractivelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M374"/><svrl:active-pattern><axsl:attribute name="id">atstesedenyservicelogonright</axsl:attribute><axsl:attribute name="name">atstesedenyservicelogonright</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M375"/><svrl:active-pattern><axsl:attribute name="id">adtst</axsl:attribute><axsl:attribute name="name">adtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M376"/><svrl:active-pattern><axsl:attribute name="id">adobjnaming_context</axsl:attribute><axsl:attribute name="name">adobjnaming_context</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M377"/><svrl:active-pattern><axsl:attribute name="id">adobjrelative_dn</axsl:attribute><axsl:attribute name="name">adobjrelative_dn</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M378"/><svrl:active-pattern><axsl:attribute name="id">adobjattribute</axsl:attribute><axsl:attribute name="name">adobjattribute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M379"/><svrl:active-pattern><axsl:attribute name="id">adstenaming_context</axsl:attribute><axsl:attribute name="name">adstenaming_context</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M380"/><svrl:active-pattern><axsl:attribute name="id">adsterelative_dn</axsl:attribute><axsl:attribute name="name">adsterelative_dn</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M381"/><svrl:active-pattern><axsl:attribute name="id">adsteattribute</axsl:attribute><axsl:attribute name="name">adsteattribute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M382"/><svrl:active-pattern><axsl:attribute name="id">adsteobject_class</axsl:attribute><axsl:attribute name="name">adsteobject_class</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M383"/><svrl:active-pattern><axsl:attribute name="id">adsteadstype</axsl:attribute><axsl:attribute name="name">adsteadstype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M384"/><svrl:active-pattern><axsl:attribute name="id">adstevalue</axsl:attribute><axsl:attribute name="name">adstevalue</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M385"/><svrl:active-pattern><axsl:attribute name="id">aeptst</axsl:attribute><axsl:attribute name="name">aeptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M386"/><svrl:active-pattern><axsl:attribute name="id">aepsteaccount_logon</axsl:attribute><axsl:attribute name="name">aepsteaccount_logon</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M387"/><svrl:active-pattern><axsl:attribute name="id">aepsteaccount_management</axsl:attribute><axsl:attribute name="name">aepsteaccount_management</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M388"/><svrl:active-pattern><axsl:attribute name="id">aepstedetailed_tracking</axsl:attribute><axsl:attribute name="name">aepstedetailed_tracking</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M389"/><svrl:active-pattern><axsl:attribute name="id">aepstedirectory_service_access</axsl:attribute><axsl:attribute name="name">aepstedirectory_service_access</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M390"/><svrl:active-pattern><axsl:attribute name="id">aepstelogon</axsl:attribute><axsl:attribute name="name">aepstelogon</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M391"/><svrl:active-pattern><axsl:attribute name="id">aepsteobject_access</axsl:attribute><axsl:attribute name="name">aepsteobject_access</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M392"/><svrl:active-pattern><axsl:attribute name="id">aepstepolicy_change</axsl:attribute><axsl:attribute name="name">aepstepolicy_change</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M393"/><svrl:active-pattern><axsl:attribute name="id">aepsteprivilege_use</axsl:attribute><axsl:attribute name="name">aepsteprivilege_use</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M394"/><svrl:active-pattern><axsl:attribute name="id">aepstesystem</axsl:attribute><axsl:attribute name="name">aepstesystem</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M395"/><svrl:active-pattern><axsl:attribute name="id">filetst</axsl:attribute><axsl:attribute name="name">filetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M396"/><svrl:active-pattern><axsl:attribute name="id">fileobjpath</axsl:attribute><axsl:attribute name="name">fileobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M397"/><svrl:active-pattern><axsl:attribute name="id">fileobjfilename</axsl:attribute><axsl:attribute name="name">fileobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M398"/><svrl:active-pattern><axsl:attribute name="id">filestepath</axsl:attribute><axsl:attribute name="name">filestepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M399"/><svrl:active-pattern><axsl:attribute name="id">filestefilename</axsl:attribute><axsl:attribute name="name">filestefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M400"/><svrl:active-pattern><axsl:attribute name="id">filesteowner</axsl:attribute><axsl:attribute name="name">filesteowner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M401"/><svrl:active-pattern><axsl:attribute name="id">filestesize</axsl:attribute><axsl:attribute name="name">filestesize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M402"/><svrl:active-pattern><axsl:attribute name="id">filestea_time</axsl:attribute><axsl:attribute name="name">filestea_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M403"/><svrl:active-pattern><axsl:attribute name="id">filestec_time</axsl:attribute><axsl:attribute name="name">filestec_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M404"/><svrl:active-pattern><axsl:attribute name="id">filestem_time</axsl:attribute><axsl:attribute name="name">filestem_time</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M405"/><svrl:active-pattern><axsl:attribute name="id">filestems_checksum</axsl:attribute><axsl:attribute name="name">filestems_checksum</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M406"/><svrl:active-pattern><axsl:attribute name="id">filesteversion</axsl:attribute><axsl:attribute name="name">filesteversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M407"/><svrl:active-pattern><axsl:attribute name="id">filestetype</axsl:attribute><axsl:attribute name="name">filestetype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M408"/><svrl:active-pattern><axsl:attribute name="id">filestedevelopment_class</axsl:attribute><axsl:attribute name="name">filestedevelopment_class</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M409"/><svrl:active-pattern><axsl:attribute name="id">filestecompany</axsl:attribute><axsl:attribute name="name">filestecompany</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M410"/><svrl:active-pattern><axsl:attribute name="id">filesteinternalname</axsl:attribute><axsl:attribute name="name">filesteinternalname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M411"/><svrl:active-pattern><axsl:attribute name="id">filestelanguage</axsl:attribute><axsl:attribute name="name">filestelanguage</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M412"/><svrl:active-pattern><axsl:attribute name="id">filesteoriginalfilename</axsl:attribute><axsl:attribute name="name">filesteoriginalfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M413"/><svrl:active-pattern><axsl:attribute name="id">filesteproductname</axsl:attribute><axsl:attribute name="name">filesteproductname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M414"/><svrl:active-pattern><axsl:attribute name="id">filesteproductversion</axsl:attribute><axsl:attribute name="name">filesteproductversion</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M415"/><svrl:active-pattern><axsl:attribute name="id">faptst</axsl:attribute><axsl:attribute name="name">faptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M416"/><svrl:active-pattern><axsl:attribute name="id">fapobjpath</axsl:attribute><axsl:attribute name="name">fapobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M417"/><svrl:active-pattern><axsl:attribute name="id">fapobjfilename</axsl:attribute><axsl:attribute name="name">fapobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M418"/><svrl:active-pattern><axsl:attribute name="id">fapobjtrustee_name</axsl:attribute><axsl:attribute name="name">fapobjtrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M419"/><svrl:active-pattern><axsl:attribute name="id">fapstepath</axsl:attribute><axsl:attribute name="name">fapstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M420"/><svrl:active-pattern><axsl:attribute name="id">fapstefilename</axsl:attribute><axsl:attribute name="name">fapstefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M421"/><svrl:active-pattern><axsl:attribute name="id">fapstetrustee_name</axsl:attribute><axsl:attribute name="name">fapstetrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M422"/><svrl:active-pattern><axsl:attribute name="id">fapstestandard_delete</axsl:attribute><axsl:attribute name="name">fapstestandard_delete</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M423"/><svrl:active-pattern><axsl:attribute name="id">fapstestandard_read_control</axsl:attribute><axsl:attribute name="name">fapstestandard_read_control</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M424"/><svrl:active-pattern><axsl:attribute name="id">fapstestandard_write_dac</axsl:attribute><axsl:attribute name="name">fapstestandard_write_dac</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M425"/><svrl:active-pattern><axsl:attribute name="id">fapstestandard_write_owner</axsl:attribute><axsl:attribute name="name">fapstestandard_write_owner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M426"/><svrl:active-pattern><axsl:attribute name="id">fapstestandard_synchronize</axsl:attribute><axsl:attribute name="name">fapstestandard_synchronize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M427"/><svrl:active-pattern><axsl:attribute name="id">fapsteaccess_system_security</axsl:attribute><axsl:attribute name="name">fapsteaccess_system_security</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M428"/><svrl:active-pattern><axsl:attribute name="id">fapstegeneric_read</axsl:attribute><axsl:attribute name="name">fapstegeneric_read</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M429"/><svrl:active-pattern><axsl:attribute name="id">fapstegeneric_write</axsl:attribute><axsl:attribute name="name">fapstegeneric_write</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M430"/><svrl:active-pattern><axsl:attribute name="id">fapstegeneric_execute</axsl:attribute><axsl:attribute name="name">fapstegeneric_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M431"/><svrl:active-pattern><axsl:attribute name="id">fapstegeneric_all</axsl:attribute><axsl:attribute name="name">fapstegeneric_all</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M432"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_read_data</axsl:attribute><axsl:attribute name="name">fapstefile_read_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M433"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_write_data</axsl:attribute><axsl:attribute name="name">fapstefile_write_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M434"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_append_data</axsl:attribute><axsl:attribute name="name">fapstefile_append_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M435"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_read_ea</axsl:attribute><axsl:attribute name="name">fapstefile_read_ea</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M436"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_write_ea</axsl:attribute><axsl:attribute name="name">fapstefile_write_ea</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M437"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_execute</axsl:attribute><axsl:attribute name="name">fapstefile_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M438"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_delete_child</axsl:attribute><axsl:attribute name="name">fapstefile_delete_child</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M439"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_read_attributes</axsl:attribute><axsl:attribute name="name">fapstefile_read_attributes</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M440"/><svrl:active-pattern><axsl:attribute name="id">fapstefile_write_attributes</axsl:attribute><axsl:attribute name="name">fapstefile_write_attributes</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M441"/><svrl:active-pattern><axsl:attribute name="id">fertst</axsl:attribute><axsl:attribute name="name">fertst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M442"/><svrl:active-pattern><axsl:attribute name="id">fefobjpath</axsl:attribute><axsl:attribute name="name">fefobjpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M443"/><svrl:active-pattern><axsl:attribute name="id">fefobjfilename</axsl:attribute><axsl:attribute name="name">fefobjfilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M444"/><svrl:active-pattern><axsl:attribute name="id">fefobjtrustee_name</axsl:attribute><axsl:attribute name="name">fefobjtrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M445"/><svrl:active-pattern><axsl:attribute name="id">ferstepath</axsl:attribute><axsl:attribute name="name">ferstepath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M446"/><svrl:active-pattern><axsl:attribute name="id">ferstefilename</axsl:attribute><axsl:attribute name="name">ferstefilename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M447"/><svrl:active-pattern><axsl:attribute name="id">ferstetrustee_name</axsl:attribute><axsl:attribute name="name">ferstetrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M448"/><svrl:active-pattern><axsl:attribute name="id">ferstestandard_delete</axsl:attribute><axsl:attribute name="name">ferstestandard_delete</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M449"/><svrl:active-pattern><axsl:attribute name="id">ferstestandard_read_control</axsl:attribute><axsl:attribute name="name">ferstestandard_read_control</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M450"/><svrl:active-pattern><axsl:attribute name="id">ferstestandard_write_dac</axsl:attribute><axsl:attribute name="name">ferstestandard_write_dac</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M451"/><svrl:active-pattern><axsl:attribute name="id">ferstestandard_write_owner</axsl:attribute><axsl:attribute name="name">ferstestandard_write_owner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M452"/><svrl:active-pattern><axsl:attribute name="id">ferstestandard_synchronize</axsl:attribute><axsl:attribute name="name">ferstestandard_synchronize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M453"/><svrl:active-pattern><axsl:attribute name="id">fersteaccess_system_security</axsl:attribute><axsl:attribute name="name">fersteaccess_system_security</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M454"/><svrl:active-pattern><axsl:attribute name="id">ferstegeneric_read</axsl:attribute><axsl:attribute name="name">ferstegeneric_read</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M455"/><svrl:active-pattern><axsl:attribute name="id">ferstegeneric_write</axsl:attribute><axsl:attribute name="name">ferstegeneric_write</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M456"/><svrl:active-pattern><axsl:attribute name="id">ferstegeneric_execute</axsl:attribute><axsl:attribute name="name">ferstegeneric_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M457"/><svrl:active-pattern><axsl:attribute name="id">ferstegeneric_all</axsl:attribute><axsl:attribute name="name">ferstegeneric_all</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M458"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_read_data</axsl:attribute><axsl:attribute name="name">ferstefile_read_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M459"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_write_data</axsl:attribute><axsl:attribute name="name">ferstefile_write_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M460"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_append_data</axsl:attribute><axsl:attribute name="name">ferstefile_append_data</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M461"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_read_ea</axsl:attribute><axsl:attribute name="name">ferstefile_read_ea</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M462"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_write_ea</axsl:attribute><axsl:attribute name="name">ferstefile_write_ea</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M463"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_execute</axsl:attribute><axsl:attribute name="name">ferstefile_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M464"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_delete_child</axsl:attribute><axsl:attribute name="name">ferstefile_delete_child</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M465"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_read_attributes</axsl:attribute><axsl:attribute name="name">ferstefile_read_attributes</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M466"/><svrl:active-pattern><axsl:attribute name="id">ferstefile_write_attributes</axsl:attribute><axsl:attribute name="name">ferstefile_write_attributes</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M467"/><svrl:active-pattern><axsl:attribute name="id">grouptst</axsl:attribute><axsl:attribute name="name">grouptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M468"/><svrl:active-pattern><axsl:attribute name="id">groupobjgroup</axsl:attribute><axsl:attribute name="name">groupobjgroup</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M469"/><svrl:active-pattern><axsl:attribute name="id">groupstegroup</axsl:attribute><axsl:attribute name="name">groupstegroup</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M470"/><svrl:active-pattern><axsl:attribute name="id">groupsteuser</axsl:attribute><axsl:attribute name="name">groupsteuser</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M471"/><svrl:active-pattern><axsl:attribute name="id">interfacetst</axsl:attribute><axsl:attribute name="name">interfacetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M472"/><svrl:active-pattern><axsl:attribute name="id">interfaceobjname</axsl:attribute><axsl:attribute name="name">interfaceobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M473"/><svrl:active-pattern><axsl:attribute name="id">interfacestename</axsl:attribute><axsl:attribute name="name">interfacestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M474"/><svrl:active-pattern><axsl:attribute name="id">interfacesteindex</axsl:attribute><axsl:attribute name="name">interfacesteindex</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M475"/><svrl:active-pattern><axsl:attribute name="id">interfacestetype</axsl:attribute><axsl:attribute name="name">interfacestetype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M476"/><svrl:active-pattern><axsl:attribute name="id">interfacestehardware_addr</axsl:attribute><axsl:attribute name="name">interfacestehardware_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M477"/><svrl:active-pattern><axsl:attribute name="id">interfacesteinet_addr</axsl:attribute><axsl:attribute name="name">interfacesteinet_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M478"/><svrl:active-pattern><axsl:attribute name="id">interfacestebroadcast_addr</axsl:attribute><axsl:attribute name="name">interfacestebroadcast_addr</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M479"/><svrl:active-pattern><axsl:attribute name="id">interfacestenetmask</axsl:attribute><axsl:attribute name="name">interfacestenetmask</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M480"/><svrl:active-pattern><axsl:attribute name="id">interfacesteaddr_type</axsl:attribute><axsl:attribute name="name">interfacesteaddr_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M481"/><svrl:active-pattern><axsl:attribute name="id">lptst</axsl:attribute><axsl:attribute name="name">lptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M482"/><svrl:active-pattern><axsl:attribute name="id">lpsteforce_logoff</axsl:attribute><axsl:attribute name="name">lpsteforce_logoff</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M483"/><svrl:active-pattern><axsl:attribute name="id">lpstelockout_duration</axsl:attribute><axsl:attribute name="name">lpstelockout_duration</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M484"/><svrl:active-pattern><axsl:attribute name="id">lpstelockout_observation_window</axsl:attribute><axsl:attribute name="name">lpstelockout_observation_window</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M485"/><svrl:active-pattern><axsl:attribute name="id">lpstelockout_threshold</axsl:attribute><axsl:attribute name="name">lpstelockout_threshold</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M486"/><svrl:active-pattern><axsl:attribute name="id">metabasetst</axsl:attribute><axsl:attribute name="name">metabasetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M487"/><svrl:active-pattern><axsl:attribute name="id">metabaseobjkey</axsl:attribute><axsl:attribute name="name">metabaseobjkey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M488"/><svrl:active-pattern><axsl:attribute name="id">metabaseobjid</axsl:attribute><axsl:attribute name="name">metabaseobjid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M489"/><svrl:active-pattern><axsl:attribute name="id">metabasestekey</axsl:attribute><axsl:attribute name="name">metabasestekey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M490"/><svrl:active-pattern><axsl:attribute name="id">metabasesteid</axsl:attribute><axsl:attribute name="name">metabasesteid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M491"/><svrl:active-pattern><axsl:attribute name="id">metabasestename</axsl:attribute><axsl:attribute name="name">metabasestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M492"/><svrl:active-pattern><axsl:attribute name="id">metabasesteuser_type</axsl:attribute><axsl:attribute name="name">metabasesteuser_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M493"/><svrl:active-pattern><axsl:attribute name="id">metabasestedata_type</axsl:attribute><axsl:attribute name="name">metabasestedata_type</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M494"/><svrl:active-pattern><axsl:attribute name="id">metabasestedata</axsl:attribute><axsl:attribute name="name">metabasestedata</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M495"/><svrl:active-pattern><axsl:attribute name="id">pptst</axsl:attribute><axsl:attribute name="name">pptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M496"/><svrl:active-pattern><axsl:attribute name="id">ppstemax_passwd_age</axsl:attribute><axsl:attribute name="name">ppstemax_passwd_age</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M497"/><svrl:active-pattern><axsl:attribute name="id">ppstemin_passwd_age</axsl:attribute><axsl:attribute name="name">ppstemin_passwd_age</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M498"/><svrl:active-pattern><axsl:attribute name="id">ppstemin_passwd_len</axsl:attribute><axsl:attribute name="name">ppstemin_passwd_len</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M499"/><svrl:active-pattern><axsl:attribute name="id">ppstepassword_hist_len</axsl:attribute><axsl:attribute name="name">ppstepassword_hist_len</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M500"/><svrl:active-pattern><axsl:attribute name="id">ppstepassword_complexity</axsl:attribute><axsl:attribute name="name">ppstepassword_complexity</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M501"/><svrl:active-pattern><axsl:attribute name="id">ppstereversible_encryption</axsl:attribute><axsl:attribute name="name">ppstereversible_encryption</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M502"/><svrl:active-pattern><axsl:attribute name="id">porttst</axsl:attribute><axsl:attribute name="name">porttst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M503"/><svrl:active-pattern><axsl:attribute name="id">portobj</axsl:attribute><axsl:attribute name="name">portobj</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M504"/><svrl:active-pattern><axsl:attribute name="id">portobjlocal_port</axsl:attribute><axsl:attribute name="name">portobjlocal_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M505"/><svrl:active-pattern><axsl:attribute name="id">portobj</axsl:attribute><axsl:attribute name="name">portobj</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M506"/><svrl:active-pattern><axsl:attribute name="id">portstelocal_address</axsl:attribute><axsl:attribute name="name">portstelocal_address</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M507"/><svrl:active-pattern><axsl:attribute name="id">portstelocal_port</axsl:attribute><axsl:attribute name="name">portstelocal_port</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M508"/><svrl:active-pattern><axsl:attribute name="id">portsteprotocol</axsl:attribute><axsl:attribute name="name">portsteprotocol</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M509"/><svrl:active-pattern><axsl:attribute name="id">portstepid</axsl:attribute><axsl:attribute name="name">portstepid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M510"/><svrl:active-pattern><axsl:attribute name="id">processtst</axsl:attribute><axsl:attribute name="name">processtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M511"/><svrl:active-pattern><axsl:attribute name="id">processobjcommand_line</axsl:attribute><axsl:attribute name="name">processobjcommand_line</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M512"/><svrl:active-pattern><axsl:attribute name="id">processstecommand_line</axsl:attribute><axsl:attribute name="name">processstecommand_line</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M513"/><svrl:active-pattern><axsl:attribute name="id">processstepid</axsl:attribute><axsl:attribute name="name">processstepid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M514"/><svrl:active-pattern><axsl:attribute name="id">processsteppid</axsl:attribute><axsl:attribute name="name">processsteppid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M515"/><svrl:active-pattern><axsl:attribute name="id">processstepriority</axsl:attribute><axsl:attribute name="name">processstepriority</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M516"/><svrl:active-pattern><axsl:attribute name="id">processsteimage_path</axsl:attribute><axsl:attribute name="name">processsteimage_path</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M517"/><svrl:active-pattern><axsl:attribute name="id">processstecurrent_dir</axsl:attribute><axsl:attribute name="name">processstecurrent_dir</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M518"/><svrl:active-pattern><axsl:attribute name="id">regtst</axsl:attribute><axsl:attribute name="name">regtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M519"/><svrl:active-pattern><axsl:attribute name="id">regobjhive</axsl:attribute><axsl:attribute name="name">regobjhive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M520"/><svrl:active-pattern><axsl:attribute name="id">regobjkey</axsl:attribute><axsl:attribute name="name">regobjkey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M521"/><svrl:active-pattern><axsl:attribute name="id">regobjname</axsl:attribute><axsl:attribute name="name">regobjname</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M522"/><svrl:active-pattern><axsl:attribute name="id">regstehive</axsl:attribute><axsl:attribute name="name">regstehive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M523"/><svrl:active-pattern><axsl:attribute name="id">regstekey</axsl:attribute><axsl:attribute name="name">regstekey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M524"/><svrl:active-pattern><axsl:attribute name="id">regstename</axsl:attribute><axsl:attribute name="name">regstename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M525"/><svrl:active-pattern><axsl:attribute name="id">regstetype</axsl:attribute><axsl:attribute name="name">regstetype</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M526"/><svrl:active-pattern><axsl:attribute name="id">regstevalue</axsl:attribute><axsl:attribute name="name">regstevalue</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M527"/><svrl:active-pattern><axsl:attribute name="id">raptst</axsl:attribute><axsl:attribute name="name">raptst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M528"/><svrl:active-pattern><axsl:attribute name="id">rapobjhive</axsl:attribute><axsl:attribute name="name">rapobjhive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M529"/><svrl:active-pattern><axsl:attribute name="id">rapobjkey</axsl:attribute><axsl:attribute name="name">rapobjkey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M530"/><svrl:active-pattern><axsl:attribute name="id">rapobjtrustee_name</axsl:attribute><axsl:attribute name="name">rapobjtrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M531"/><svrl:active-pattern><axsl:attribute name="id">rapstehive</axsl:attribute><axsl:attribute name="name">rapstehive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M532"/><svrl:active-pattern><axsl:attribute name="id">rapstekey</axsl:attribute><axsl:attribute name="name">rapstekey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M533"/><svrl:active-pattern><axsl:attribute name="id">rapstetrustee_name</axsl:attribute><axsl:attribute name="name">rapstetrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M534"/><svrl:active-pattern><axsl:attribute name="id">rapstestandard_delete</axsl:attribute><axsl:attribute name="name">rapstestandard_delete</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M535"/><svrl:active-pattern><axsl:attribute name="id">rapstestandard_read_control</axsl:attribute><axsl:attribute name="name">rapstestandard_read_control</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M536"/><svrl:active-pattern><axsl:attribute name="id">rapstestandard_write_dac</axsl:attribute><axsl:attribute name="name">rapstestandard_write_dac</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M537"/><svrl:active-pattern><axsl:attribute name="id">rapstestandard_write_owner</axsl:attribute><axsl:attribute name="name">rapstestandard_write_owner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M538"/><svrl:active-pattern><axsl:attribute name="id">rapstestandard_synchronize</axsl:attribute><axsl:attribute name="name">rapstestandard_synchronize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M539"/><svrl:active-pattern><axsl:attribute name="id">rapsteaccess_system_security</axsl:attribute><axsl:attribute name="name">rapsteaccess_system_security</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M540"/><svrl:active-pattern><axsl:attribute name="id">rapstegeneric_read</axsl:attribute><axsl:attribute name="name">rapstegeneric_read</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M541"/><svrl:active-pattern><axsl:attribute name="id">rapstegeneric_write</axsl:attribute><axsl:attribute name="name">rapstegeneric_write</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M542"/><svrl:active-pattern><axsl:attribute name="id">rapstegeneric_execute</axsl:attribute><axsl:attribute name="name">rapstegeneric_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M543"/><svrl:active-pattern><axsl:attribute name="id">rapstegeneric_all</axsl:attribute><axsl:attribute name="name">rapstegeneric_all</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M544"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_query_value</axsl:attribute><axsl:attribute name="name">rapstekey_query_value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M545"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_set_value</axsl:attribute><axsl:attribute name="name">rapstekey_set_value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M546"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_create_sub_key</axsl:attribute><axsl:attribute name="name">rapstekey_create_sub_key</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M547"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_enumerate_sub_keys</axsl:attribute><axsl:attribute name="name">rapstekey_enumerate_sub_keys</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M548"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_notify</axsl:attribute><axsl:attribute name="name">rapstekey_notify</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M549"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_create_link</axsl:attribute><axsl:attribute name="name">rapstekey_create_link</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M550"/><svrl:active-pattern><axsl:attribute name="id">rapstekey_wow64_64key</axsl:attribute><axsl:attribute name="name">rapstekey_wow64_64key</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M551"/><svrl:active-pattern><axsl:attribute name="id">rapste</axsl:attribute><axsl:attribute name="name">rapste</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M552"/><svrl:active-pattern><axsl:attribute name="id">rapste</axsl:attribute><axsl:attribute name="name">rapste</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M553"/><svrl:active-pattern><axsl:attribute name="id">rertst</axsl:attribute><axsl:attribute name="name">rertst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M554"/><svrl:active-pattern><axsl:attribute name="id">rerobjhive</axsl:attribute><axsl:attribute name="name">rerobjhive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M555"/><svrl:active-pattern><axsl:attribute name="id">rerobjkey</axsl:attribute><axsl:attribute name="name">rerobjkey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M556"/><svrl:active-pattern><axsl:attribute name="id">rerobjtrustee_name</axsl:attribute><axsl:attribute name="name">rerobjtrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M557"/><svrl:active-pattern><axsl:attribute name="id">rerstehive</axsl:attribute><axsl:attribute name="name">rerstehive</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M558"/><svrl:active-pattern><axsl:attribute name="id">rerstekey</axsl:attribute><axsl:attribute name="name">rerstekey</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M559"/><svrl:active-pattern><axsl:attribute name="id">rerstetrustee_name</axsl:attribute><axsl:attribute name="name">rerstetrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M560"/><svrl:active-pattern><axsl:attribute name="id">rerstestandard_delete</axsl:attribute><axsl:attribute name="name">rerstestandard_delete</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M561"/><svrl:active-pattern><axsl:attribute name="id">rerstestandard_read_control</axsl:attribute><axsl:attribute name="name">rerstestandard_read_control</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M562"/><svrl:active-pattern><axsl:attribute name="id">rerstestandard_write_dac</axsl:attribute><axsl:attribute name="name">rerstestandard_write_dac</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M563"/><svrl:active-pattern><axsl:attribute name="id">rerstestandard_write_owner</axsl:attribute><axsl:attribute name="name">rerstestandard_write_owner</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M564"/><svrl:active-pattern><axsl:attribute name="id">rerstestandard_synchronize</axsl:attribute><axsl:attribute name="name">rerstestandard_synchronize</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M565"/><svrl:active-pattern><axsl:attribute name="id">rersteaccess_system_security</axsl:attribute><axsl:attribute name="name">rersteaccess_system_security</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M566"/><svrl:active-pattern><axsl:attribute name="id">rerstegeneric_read</axsl:attribute><axsl:attribute name="name">rerstegeneric_read</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M567"/><svrl:active-pattern><axsl:attribute name="id">rerstegeneric_write</axsl:attribute><axsl:attribute name="name">rerstegeneric_write</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M568"/><svrl:active-pattern><axsl:attribute name="id">rerstegeneric_execute</axsl:attribute><axsl:attribute name="name">rerstegeneric_execute</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M569"/><svrl:active-pattern><axsl:attribute name="id">rerstegeneric_all</axsl:attribute><axsl:attribute name="name">rerstegeneric_all</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M570"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_query_value</axsl:attribute><axsl:attribute name="name">rerstekey_query_value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M571"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_set_value</axsl:attribute><axsl:attribute name="name">rerstekey_set_value</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M572"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_create_sub_key</axsl:attribute><axsl:attribute name="name">rerstekey_create_sub_key</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M573"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_enumerate_sub_keys</axsl:attribute><axsl:attribute name="name">rerstekey_enumerate_sub_keys</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M574"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_notify</axsl:attribute><axsl:attribute name="name">rerstekey_notify</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M575"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_create_link</axsl:attribute><axsl:attribute name="name">rerstekey_create_link</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M576"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_wow64_64key</axsl:attribute><axsl:attribute name="name">rerstekey_wow64_64key</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M577"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_wow64_32key</axsl:attribute><axsl:attribute name="name">rerstekey_wow64_32key</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M578"/><svrl:active-pattern><axsl:attribute name="id">rerstekey_wow64_res</axsl:attribute><axsl:attribute name="name">rerstekey_wow64_res</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M579"/><svrl:active-pattern><axsl:attribute name="id">sidtst</axsl:attribute><axsl:attribute name="name">sidtst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M580"/><svrl:active-pattern><axsl:attribute name="id">sidobjtrustee_name</axsl:attribute><axsl:attribute name="name">sidobjtrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M581"/><svrl:active-pattern><axsl:attribute name="id">sidstetrustee_name</axsl:attribute><axsl:attribute name="name">sidstetrustee_name</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M582"/><svrl:active-pattern><axsl:attribute name="id">sidstetrustee_sid</axsl:attribute><axsl:attribute name="name">sidstetrustee_sid</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M583"/><svrl:active-pattern><axsl:attribute name="id">sidstetrustee_domain</axsl:attribute><axsl:attribute name="name">sidstetrustee_domain</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M584"/><svrl:active-pattern><axsl:attribute name="id">usertst</axsl:attribute><axsl:attribute name="name">usertst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M585"/><svrl:active-pattern><axsl:attribute name="id">userobjuser</axsl:attribute><axsl:attribute name="name">userobjuser</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M586"/><svrl:active-pattern><axsl:attribute name="id">usersteuser</axsl:attribute><axsl:attribute name="name">usersteuser</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M587"/><svrl:active-pattern><axsl:attribute name="id">usersteenabled</axsl:attribute><axsl:attribute name="name">usersteenabled</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M588"/><svrl:active-pattern><axsl:attribute name="id">userstegroup</axsl:attribute><axsl:attribute name="name">userstegroup</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M589"/><svrl:active-pattern><axsl:attribute name="id">volumetst</axsl:attribute><axsl:attribute name="name">volumetst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M590"/><svrl:active-pattern><axsl:attribute name="id">volobjrootpath</axsl:attribute><axsl:attribute name="name">volobjrootpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M591"/><svrl:active-pattern><axsl:attribute name="id">volumesterootpath</axsl:attribute><axsl:attribute name="name">volumesterootpath</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M592"/><svrl:active-pattern><axsl:attribute name="id">volumestefile_system</axsl:attribute><axsl:attribute name="name">volumestefile_system</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M593"/><svrl:active-pattern><axsl:attribute name="id">volumestename</axsl:attribute><axsl:attribute name="name">volumestename</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M594"/><svrl:active-pattern><axsl:attribute name="id">volstevolume_max_component_length</axsl:attribute><axsl:attribute name="name">volstevolume_max_component_length</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M595"/><svrl:active-pattern><axsl:attribute name="id">volsteserial_number</axsl:attribute><axsl:attribute name="name">volsteserial_number</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M596"/><svrl:active-pattern><axsl:attribute name="id">volstefile_case_sensitive_search</axsl:attribute><axsl:attribute name="name">volstefile_case_sensitive_search</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M597"/><svrl:active-pattern><axsl:attribute name="id">volstefile_case_preserved_names</axsl:attribute><axsl:attribute name="name">volstefile_case_preserved_names</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M598"/><svrl:active-pattern><axsl:attribute name="id">volstefile_unicode_on_disk</axsl:attribute><axsl:attribute name="name">volstefile_unicode_on_disk</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M599"/><svrl:active-pattern><axsl:attribute name="id">volstefile_persistent_acls</axsl:attribute><axsl:attribute name="name">volstefile_persistent_acls</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M600"/><svrl:active-pattern><axsl:attribute name="id">volstefile_file_compression</axsl:attribute><axsl:attribute name="name">volstefile_file_compression</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M601"/><svrl:active-pattern><axsl:attribute name="id">volstefile_volume_quotas</axsl:attribute><axsl:attribute name="name">volstefile_volume_quotas</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M602"/><svrl:active-pattern><axsl:attribute name="id">volstefile_supports_sparse_files</axsl:attribute><axsl:attribute name="name">volstefile_supports_sparse_files</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M603"/><svrl:active-pattern><axsl:attribute name="id">volstefile_supports_reparse_points</axsl:attribute><axsl:attribute name="name">volstefile_supports_reparse_points</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M604"/><svrl:active-pattern><axsl:attribute name="id">volstefile_supports_remote_storage</axsl:attribute><axsl:attribute name="name">volstefile_supports_remote_storage</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M605"/><svrl:active-pattern><axsl:attribute name="id">volstefile_volume_is_compressed</axsl:attribute><axsl:attribute name="name">volstefile_volume_is_compressed</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M606"/><svrl:active-pattern><axsl:attribute name="id">volstefile_supports_object_ids</axsl:attribute><axsl:attribute name="name">volstefile_supports_object_ids</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M607"/><svrl:active-pattern><axsl:attribute name="id">volstefile_supports_encryption</axsl:attribute><axsl:attribute name="name">volstefile_supports_encryption</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M608"/><svrl:active-pattern><axsl:attribute name="id">volstefile_named_streams</axsl:attribute><axsl:attribute name="name">volstefile_named_streams</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M609"/><svrl:active-pattern><axsl:attribute name="id">volstefile_read_only_volume</axsl:attribute><axsl:attribute name="name">volstefile_read_only_volume</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M610"/><svrl:active-pattern><axsl:attribute name="id">wmitst</axsl:attribute><axsl:attribute name="name">wmitst</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M611"/><svrl:active-pattern><axsl:attribute name="id">wmiobjnamespace</axsl:attribute><axsl:attribute name="name">wmiobjnamespace</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M612"/><svrl:active-pattern><axsl:attribute name="id">wmiobj</axsl:attribute><axsl:attribute name="name">wmiobj</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M613"/><svrl:active-pattern><axsl:attribute name="id">wmistenamespace</axsl:attribute><axsl:attribute name="name">wmistenamespace</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M614"/><svrl:active-pattern><axsl:attribute name="id">wmistewql</axsl:attribute><axsl:attribute name="name">wmistewql</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M615"/><svrl:active-pattern><axsl:attribute name="id">wmisteresult</axsl:attribute><axsl:attribute name="name">wmisteresult</axsl:attribute><axsl:apply-templates/></svrl:active-pattern><axsl:apply-templates select="/" mode="M616"/></svrl:schematron-output></axsl:template>

<!--SCHEMATRON PATTERNS-->
<svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Core portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Apache portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the FreeBSD portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Red Hat portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Independent portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Cisco IOS portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Linux portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the MacOS portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Solaris portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the UNIX portion of an OVAL Definitions file</svrl:text><svrl:text xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron">schematron validation of the Windows portion of an OVAL Definitions file</svrl:text>

<!--PATTERN empty_def_doc-->


	<!--RULE -->
<axsl:template match="oval-def:oval_definitions" priority="1000" mode="M23"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:oval_definitions"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="oval-def:definitions or oval-def:tests or oval-def:objects or oval-def:states or oval-def:variables"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="oval-def:definitions or oval-def:tests or oval-def:objects or oval-def:states or oval-def:variables"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>A valid OVAL Definition document must contain at least one definitions, tests, objects, states, or variables element.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M23"/></axsl:template><axsl:template match="text()" priority="-1" mode="M23"/><axsl:template match="@*|node()" priority="-2" mode="M23"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M23"/></axsl:template>

<!--PATTERN value-->


	<!--RULE -->
<axsl:template match="oval-def:constant_variable/oval-def:value" priority="1000" mode="M24"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:constant_variable/oval-def:value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".!=''"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".!=''"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The value element of the constant_variable  can not be empty.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M24"/></axsl:template><axsl:template match="text()" priority="-1" mode="M24"/><axsl:template match="@*|node()" priority="-2" mode="M24"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M24"/></axsl:template>

<!--PATTERN literal_component-->


	<!--RULE -->
<axsl:template match="oval-def:literal_component" priority="1000" mode="M25"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:literal_component"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test=".!=''"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test=".!=''"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The literal_component of variable  can not be empty.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M25"/></axsl:template><axsl:template match="text()" priority="-1" mode="M25"/><axsl:template match="@*|node()" priority="-2" mode="M25"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M25"/></axsl:template>

<!--PATTERN item_field-->


	<!--RULE -->
<axsl:template match="oval-def:object_component" priority="1000" mode="M26"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:object_component"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@item_field!=''"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@item_field!=''"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>The item_field attribute of an object_component of variable  can not be empty.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M26"/></axsl:template><axsl:template match="text()" priority="-1" mode="M26"/><axsl:template match="@*|node()" priority="-2" mode="M26"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M26"/></axsl:template>

<!--PATTERN entityvarref-->


	<!--RULE -->
<axsl:template match="oval-def:objects/*/*|oval-def:states/*/*" priority="1000" mode="M27"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:objects/*/*|oval-def:states/*/*"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@var_ref) or .=''"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@var_ref) or .=''"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - a var-ref has been supplied for the  entity so no value should be provided</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M27"/></axsl:template><axsl:template match="text()" priority="-1" mode="M27"/><axsl:template match="@*|node()" priority="-2" mode="M27"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M27"/></axsl:template>

<!--PATTERN httpdtst-->


	<!--RULE -->
<axsl:template match="apache-def:httpd_test/apache-def:object" priority="1001" mode="M28"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:httpd_test/apache-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/apache-def:httpd_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/apache-def:httpd_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a httpd_test must reference a httpd_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M28"/></axsl:template>

	<!--RULE -->
<axsl:template match="apache-def:httpd_test/apache-def:state" priority="1000" mode="M28"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:httpd_test/apache-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/apache-def:httpd_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/apache-def:httpd_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a httpd_test must reference a httpd_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M28"/></axsl:template><axsl:template match="text()" priority="-1" mode="M28"/><axsl:template match="@*|node()" priority="-2" mode="M28"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M28"/></axsl:template>

<!--PATTERN httpdstepath-->


	<!--RULE -->
<axsl:template match="apache-def:httpd_state/apache-def:path" priority="1000" mode="M29"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:httpd_state/apache-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a httpd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a httpd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M29"/></axsl:template><axsl:template match="text()" priority="-1" mode="M29"/><axsl:template match="@*|node()" priority="-2" mode="M29"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M29"/></axsl:template>

<!--PATTERN httpdstebinaryname-->


	<!--RULE -->
<axsl:template match="apache-def:httpd_state/apache-def:binary_name" priority="1000" mode="M30"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:httpd_state/apache-def:binary_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the binary_name entity of a httpd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the binary_name entity of a httpd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M30"/></axsl:template><axsl:template match="text()" priority="-1" mode="M30"/><axsl:template match="@*|node()" priority="-2" mode="M30"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M30"/></axsl:template>

<!--PATTERN httpdsteversion-->


	<!--RULE -->
<axsl:template match="apache-def:httpd_state/apache-def:version" priority="1000" mode="M31"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:httpd_state/apache-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@datatype='version'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@datatype='version'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a httpd_state should be 'version'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a httpd_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M31"/></axsl:template><axsl:template match="text()" priority="-1" mode="M31"/><axsl:template match="@*|node()" priority="-2" mode="M31"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M31"/></axsl:template>

<!--PATTERN vertst-->


	<!--RULE -->
<axsl:template match="apache-def:version_test/apache-def:object" priority="1001" mode="M32"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:version_test/apache-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/apache-def:version_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/apache-def:version_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a version_test must reference a version_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M32"/></axsl:template>

	<!--RULE -->
<axsl:template match="apache-def:version_test/apache-def:state" priority="1000" mode="M32"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:version_test/apache-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/apache-def:version_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/apache-def:version_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a version_test must reference a version_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M32"/></axsl:template><axsl:template match="text()" priority="-1" mode="M32"/><axsl:template match="@*|node()" priority="-2" mode="M32"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M32"/></axsl:template>

<!--PATTERN apcheversteversion-->


	<!--RULE -->
<axsl:template match="apache-def:version_state/apache-def:version" priority="1000" mode="M33"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="apache-def:version_state/apache-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='version'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='version'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of an version_state should be 'version'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a version_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M33"/></axsl:template><axsl:template match="text()" priority="-1" mode="M33"/><axsl:template match="@*|node()" priority="-2" mode="M33"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M33"/></axsl:template>

<!--PATTERN portinfotst-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_test/freebsd-def:object" priority="1001" mode="M34"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_test/freebsd-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/freebsd-def:portinfo_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/freebsd-def:portinfo_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a portinfo_test must reference an portinfo_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M34"/></axsl:template>

	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_test/freebsd-def:state" priority="1000" mode="M34"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_test/freebsd-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/freebsd-def:portinfo_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/freebsd-def:portinfo_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a portinfo_test must reference an portinfo_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M34"/></axsl:template><axsl:template match="text()" priority="-1" mode="M34"/><axsl:template match="@*|node()" priority="-2" mode="M34"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M34"/></axsl:template>

<!--PATTERN portinfoobjpkginst-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_object/freebsd-def:pkginst" priority="1000" mode="M35"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_object/freebsd-def:pkginst"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the pkginst entity of a portinfo_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the pkginst entity of a portinfo_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M35"/></axsl:template><axsl:template match="text()" priority="-1" mode="M35"/><axsl:template match="@*|node()" priority="-2" mode="M35"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M35"/></axsl:template>

<!--PATTERN portinfostepkginst-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:pkginst" priority="1000" mode="M36"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:pkginst"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the pkginst entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the pkginst entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M36"/></axsl:template><axsl:template match="text()" priority="-1" mode="M36"/><axsl:template match="@*|node()" priority="-2" mode="M36"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M36"/></axsl:template>

<!--PATTERN portinfostename-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:name" priority="1000" mode="M37"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the name entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the name entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M37"/></axsl:template><axsl:template match="text()" priority="-1" mode="M37"/><axsl:template match="@*|node()" priority="-2" mode="M37"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M37"/></axsl:template>

<!--PATTERN portinfostecategory-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:category" priority="1000" mode="M38"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:category"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the category entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the category entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M38"/></axsl:template><axsl:template match="text()" priority="-1" mode="M38"/><axsl:template match="@*|node()" priority="-2" mode="M38"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M38"/></axsl:template>

<!--PATTERN portinfosteversion-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:version" priority="1000" mode="M39"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the version entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the version entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M39"/></axsl:template><axsl:template match="text()" priority="-1" mode="M39"/><axsl:template match="@*|node()" priority="-2" mode="M39"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M39"/></axsl:template>

<!--PATTERN portinfostevendor-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:vendor" priority="1000" mode="M40"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:vendor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the vendor entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the vendor entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M40"/></axsl:template><axsl:template match="text()" priority="-1" mode="M40"/><axsl:template match="@*|node()" priority="-2" mode="M40"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M40"/></axsl:template>

<!--PATTERN portinfostedescription-->


	<!--RULE -->
<axsl:template match="freebsd-def:portinfo_state/freebsd-def:description" priority="1000" mode="M41"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="freebsd-def:portinfo_state/freebsd-def:description"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the description entity of a portinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the description entity of a portinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M41"/></axsl:template><axsl:template match="text()" priority="-1" mode="M41"/><axsl:template match="@*|node()" priority="-2" mode="M41"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M41"/></axsl:template>

<!--PATTERN gcobjparameter_name-->


	<!--RULE -->
<axsl:template match="hpux-def:getconf_object/hpux-def:parameter_name" priority="1000" mode="M42"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:getconf_object/hpux-def:parameter_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the parameter_name entity of a getconf_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the parameter_name entity of a getconf_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M42"/></axsl:template><axsl:template match="text()" priority="-1" mode="M42"/><axsl:template match="@*|node()" priority="-2" mode="M42"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M42"/></axsl:template>

<!--PATTERN gcobjpathname-->


	<!--RULE -->
<axsl:template match="hpux-def:getconf_object/hpux-def:pathname" priority="1000" mode="M43"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:getconf_object/hpux-def:pathname"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pathname entity of a getconf_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pathname entity of a getconf_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M43"/></axsl:template><axsl:template match="text()" priority="-1" mode="M43"/><axsl:template match="@*|node()" priority="-2" mode="M43"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M43"/></axsl:template>

<!--PATTERN gcsteparameter_name-->


	<!--RULE -->
<axsl:template match="hpux-def:getconf_state/hpux-def:parameter_name" priority="1000" mode="M44"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:getconf_state/hpux-def:parameter_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the parameter_name entity of a getconf_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the parameter_name entity of a getconf_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M44"/></axsl:template><axsl:template match="text()" priority="-1" mode="M44"/><axsl:template match="@*|node()" priority="-2" mode="M44"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M44"/></axsl:template>

<!--PATTERN gcstepathname-->


	<!--RULE -->
<axsl:template match="hpux-def:getconf_state/hpux-def:pathname" priority="1000" mode="M45"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:getconf_state/hpux-def:pathname"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pathname entity of a getconf_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pathname entity of a getconf_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M45"/></axsl:template><axsl:template match="text()" priority="-1" mode="M45"/><axsl:template match="@*|node()" priority="-2" mode="M45"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M45"/></axsl:template>

<!--PATTERN gcsteoutput-->


	<!--RULE -->
<axsl:template match="hpux-def:getconf_state/hpux-def:output" priority="1000" mode="M46"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:getconf_state/hpux-def:output"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the output entity of a getconf_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the output entity of a getconf_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M46"/></axsl:template><axsl:template match="text()" priority="-1" mode="M46"/><axsl:template match="@*|node()" priority="-2" mode="M46"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M46"/></axsl:template>

<!--PATTERN patchobjpatch_name-->


	<!--RULE -->
<axsl:template match="hpux-def:patch_object/hpux-def:patch_name" priority="1000" mode="M47"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:patch_object/hpux-def:patch_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the patch_name entity of a patch_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the patch_name entity of a patch_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M47"/></axsl:template><axsl:template match="text()" priority="-1" mode="M47"/><axsl:template match="@*|node()" priority="-2" mode="M47"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M47"/></axsl:template>

<!--PATTERN patchstepatch_name-->


	<!--RULE -->
<axsl:template match="hpux-def:patch_state/hpux-def:patch_name" priority="1000" mode="M48"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:patch_state/hpux-def:patch_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the patch_name entity of a patch_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the patch_name entity of a patch_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M48"/></axsl:template><axsl:template match="text()" priority="-1" mode="M48"/><axsl:template match="@*|node()" priority="-2" mode="M48"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M48"/></axsl:template>

<!--PATTERN patchsteswtype-->


	<!--RULE -->
<axsl:template match="hpux-def:patch_state/hpux-def:swtype" priority="1000" mode="M49"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:patch_state/hpux-def:swtype"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the swtype entity of a patch_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the swtype entity of a patch_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M49"/></axsl:template><axsl:template match="text()" priority="-1" mode="M49"/><axsl:template match="@*|node()" priority="-2" mode="M49"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M49"/></axsl:template>

<!--PATTERN patchstearea_patched-->


	<!--RULE -->
<axsl:template match="hpux-def:patch_state/hpux-def:area_patched" priority="1000" mode="M50"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:patch_state/hpux-def:area_patched"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the area_patched entity of a patch_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the area_patched entity of a patch_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M50"/></axsl:template><axsl:template match="text()" priority="-1" mode="M50"/><axsl:template match="@*|node()" priority="-2" mode="M50"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M50"/></axsl:template>

<!--PATTERN patchstepatch_base-->


	<!--RULE -->
<axsl:template match="hpux-def:patch_state/hpux-def:patch_base" priority="1000" mode="M51"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:patch_state/hpux-def:patch_base"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the patch_base entity of a patch_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the patch_base entity of a patch_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M51"/></axsl:template><axsl:template match="text()" priority="-1" mode="M51"/><axsl:template match="@*|node()" priority="-2" mode="M51"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M51"/></axsl:template>

<!--PATTERN swlistobjswlist-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_object/hpux-def:swlist" priority="1000" mode="M52"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_object/hpux-def:swlist"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the swlist entity of a swlist_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the swlist entity of a swlist_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M52"/></axsl:template><axsl:template match="text()" priority="-1" mode="M52"/><axsl:template match="@*|node()" priority="-2" mode="M52"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M52"/></axsl:template>

<!--PATTERN swliststeswlist-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:swlist" priority="1000" mode="M53"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:swlist"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the swlist entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the swlist entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M53"/></axsl:template><axsl:template match="text()" priority="-1" mode="M53"/><axsl:template match="@*|node()" priority="-2" mode="M53"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M53"/></axsl:template>

<!--PATTERN swliststebundle-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:bundle" priority="1000" mode="M54"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:bundle"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the bundle entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the bundle entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M54"/></axsl:template><axsl:template match="text()" priority="-1" mode="M54"/><axsl:template match="@*|node()" priority="-2" mode="M54"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M54"/></axsl:template>

<!--PATTERN swliststefileset-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:fileset" priority="1000" mode="M55"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:fileset"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the fileset entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the fileset entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M55"/></axsl:template><axsl:template match="text()" priority="-1" mode="M55"/><axsl:template match="@*|node()" priority="-2" mode="M55"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M55"/></axsl:template>

<!--PATTERN swliststeversion-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:version" priority="1000" mode="M56"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M56"/></axsl:template><axsl:template match="text()" priority="-1" mode="M56"/><axsl:template match="@*|node()" priority="-2" mode="M56"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M56"/></axsl:template>

<!--PATTERN swliststetitle-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:title" priority="1000" mode="M57"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:title"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the title entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the title entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M57"/></axsl:template><axsl:template match="text()" priority="-1" mode="M57"/><axsl:template match="@*|node()" priority="-2" mode="M57"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M57"/></axsl:template>

<!--PATTERN swliststevendor-->


	<!--RULE -->
<axsl:template match="hpux-def:swlist_state/hpux-def:vendor" priority="1000" mode="M58"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:swlist_state/hpux-def:vendor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the vendor entity of a swlist_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the vendor entity of a swlist_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M58"/></axsl:template><axsl:template match="text()" priority="-1" mode="M58"/><axsl:template match="@*|node()" priority="-2" mode="M58"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M58"/></axsl:template>

<!--PATTERN trustobjusername-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_object/hpux-def:username" priority="1000" mode="M59"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_object/hpux-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a trusted_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a trusted_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M59"/></axsl:template><axsl:template match="text()" priority="-1" mode="M59"/><axsl:template match="@*|node()" priority="-2" mode="M59"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M59"/></axsl:template>

<!--PATTERN truststeusername-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:username" priority="1000" mode="M60"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M60"/></axsl:template><axsl:template match="text()" priority="-1" mode="M60"/><axsl:template match="@*|node()" priority="-2" mode="M60"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M60"/></axsl:template>

<!--PATTERN truststeuid-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:uid" priority="1000" mode="M61"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:uid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the uid entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the uid entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M61"/></axsl:template><axsl:template match="text()" priority="-1" mode="M61"/><axsl:template match="@*|node()" priority="-2" mode="M61"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M61"/></axsl:template>

<!--PATTERN truststepassword-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:password" priority="1000" mode="M62"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:password"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the password entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the password entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M62"/></axsl:template><axsl:template match="text()" priority="-1" mode="M62"/><axsl:template match="@*|node()" priority="-2" mode="M62"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M62"/></axsl:template>

<!--PATTERN truststeaccount_owner-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:account_owner" priority="1000" mode="M63"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:account_owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the account_owner entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the account_owner entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M63"/></axsl:template><axsl:template match="text()" priority="-1" mode="M63"/><axsl:template match="@*|node()" priority="-2" mode="M63"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M63"/></axsl:template>

<!--PATTERN truststeboot_auth-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:boot_auth" priority="1000" mode="M64"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:boot_auth"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the boot_auth entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the boot_auth entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M64"/></axsl:template><axsl:template match="text()" priority="-1" mode="M64"/><axsl:template match="@*|node()" priority="-2" mode="M64"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M64"/></axsl:template>

<!--PATTERN truststeaudit_id-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:audit_id" priority="1000" mode="M65"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:audit_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the audit_id entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the audit_id entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M65"/></axsl:template><axsl:template match="text()" priority="-1" mode="M65"/><axsl:template match="@*|node()" priority="-2" mode="M65"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M65"/></axsl:template>

<!--PATTERN truststeaudit_flag-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:audit_flag" priority="1000" mode="M66"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:audit_flag"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the audit_flag entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the audit_flag entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M66"/></axsl:template><axsl:template match="text()" priority="-1" mode="M66"/><axsl:template match="@*|node()" priority="-2" mode="M66"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M66"/></axsl:template>

<!--PATTERN truststepw_change_min-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_change_min" priority="1000" mode="M67"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_change_min"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_change_min entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_change_min entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M67"/></axsl:template><axsl:template match="text()" priority="-1" mode="M67"/><axsl:template match="@*|node()" priority="-2" mode="M67"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M67"/></axsl:template>

<!--PATTERN truststepw_max_size-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_max_size" priority="1000" mode="M68"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_max_size"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_max_size entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_max_size entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M68"/></axsl:template><axsl:template match="text()" priority="-1" mode="M68"/><axsl:template match="@*|node()" priority="-2" mode="M68"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M68"/></axsl:template>

<!--PATTERN truststepw_expiration-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_expiration" priority="1000" mode="M69"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_expiration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_expiration entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_expiration entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M69"/></axsl:template><axsl:template match="text()" priority="-1" mode="M69"/><axsl:template match="@*|node()" priority="-2" mode="M69"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M69"/></axsl:template>

<!--PATTERN truststepw_life-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_life" priority="1000" mode="M70"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_life"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_life entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_life entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M70"/></axsl:template><axsl:template match="text()" priority="-1" mode="M70"/><axsl:template match="@*|node()" priority="-2" mode="M70"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M70"/></axsl:template>

<!--PATTERN truststepw_change_s-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_change_s" priority="1000" mode="M71"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_change_s"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_change_s entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_change_s entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M71"/></axsl:template><axsl:template match="text()" priority="-1" mode="M71"/><axsl:template match="@*|node()" priority="-2" mode="M71"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M71"/></axsl:template>

<!--PATTERN truststepw_change_u-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_change_u" priority="1000" mode="M72"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_change_u"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_change_u entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_change_u entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M72"/></axsl:template><axsl:template match="text()" priority="-1" mode="M72"/><axsl:template match="@*|node()" priority="-2" mode="M72"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M72"/></axsl:template>

<!--PATTERN truststeacct_expire-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:acct_expire" priority="1000" mode="M73"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:acct_expire"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the acct_expire entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the acct_expire entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M73"/></axsl:template><axsl:template match="text()" priority="-1" mode="M73"/><axsl:template match="@*|node()" priority="-2" mode="M73"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M73"/></axsl:template>

<!--PATTERN truststemax_llogin-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:max_llogin" priority="1000" mode="M74"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:max_llogin"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the max_llogin entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the max_llogin entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M74"/></axsl:template><axsl:template match="text()" priority="-1" mode="M74"/><axsl:template match="@*|node()" priority="-2" mode="M74"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M74"/></axsl:template>

<!--PATTERN truststeexp_warning-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:exp_warning" priority="1000" mode="M75"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:exp_warning"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exp_warning entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exp_warning entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M75"/></axsl:template><axsl:template match="text()" priority="-1" mode="M75"/><axsl:template match="@*|node()" priority="-2" mode="M75"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M75"/></axsl:template>

<!--PATTERN truststeusr_chg_pw-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:usr_chg_pw" priority="1000" mode="M76"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:usr_chg_pw"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the usr_chg_pw entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the usr_chg_pw entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M76"/></axsl:template><axsl:template match="text()" priority="-1" mode="M76"/><axsl:template match="@*|node()" priority="-2" mode="M76"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M76"/></axsl:template>

<!--PATTERN truststegen_pw-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:gen_pw" priority="1000" mode="M77"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:gen_pw"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gen_pw entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gen_pw entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M77"/></axsl:template><axsl:template match="text()" priority="-1" mode="M77"/><axsl:template match="@*|node()" priority="-2" mode="M77"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M77"/></axsl:template>

<!--PATTERN truststepw_restrict-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_restrict" priority="1000" mode="M78"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_restrict"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_restrict entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_restrict entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M78"/></axsl:template><axsl:template match="text()" priority="-1" mode="M78"/><axsl:template match="@*|node()" priority="-2" mode="M78"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M78"/></axsl:template>

<!--PATTERN truststepw_null-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_null" priority="1000" mode="M79"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_null"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_null entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_null entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M79"/></axsl:template><axsl:template match="text()" priority="-1" mode="M79"/><axsl:template match="@*|node()" priority="-2" mode="M79"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M79"/></axsl:template>

<!--PATTERN truststepw_gen_char-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_gen_char" priority="1000" mode="M80"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_gen_char"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_gen_char entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_gen_char entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M80"/></axsl:template><axsl:template match="text()" priority="-1" mode="M80"/><axsl:template match="@*|node()" priority="-2" mode="M80"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M80"/></axsl:template>

<!--PATTERN truststepw_gen_let-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_gen_let" priority="1000" mode="M81"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_gen_let"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_gen_let entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_gen_let entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M81"/></axsl:template><axsl:template match="text()" priority="-1" mode="M81"/><axsl:template match="@*|node()" priority="-2" mode="M81"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M81"/></axsl:template>

<!--PATTERN truststelogin_time-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:login_time" priority="1000" mode="M82"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:login_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_time entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_time entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M82"/></axsl:template><axsl:template match="text()" priority="-1" mode="M82"/><axsl:template match="@*|node()" priority="-2" mode="M82"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M82"/></axsl:template>

<!--PATTERN truststepw_changer-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:pw_changer" priority="1000" mode="M83"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:pw_changer"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pw_changer entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pw_changer entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M83"/></axsl:template><axsl:template match="text()" priority="-1" mode="M83"/><axsl:template match="@*|node()" priority="-2" mode="M83"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M83"/></axsl:template>

<!--PATTERN truststelogin_time_s-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:login_time_s" priority="1000" mode="M84"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:login_time_s"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_time_s entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_time_s entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M84"/></axsl:template><axsl:template match="text()" priority="-1" mode="M84"/><axsl:template match="@*|node()" priority="-2" mode="M84"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M84"/></axsl:template>

<!--PATTERN truststelogin_time_u-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:login_time_u" priority="1000" mode="M85"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:login_time_u"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_time_u entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_time_u entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M85"/></axsl:template><axsl:template match="text()" priority="-1" mode="M85"/><axsl:template match="@*|node()" priority="-2" mode="M85"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M85"/></axsl:template>

<!--PATTERN truststelogin_tty_s-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:login_tty_s" priority="1000" mode="M86"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:login_tty_s"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_tty_s entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_tty_s entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M86"/></axsl:template><axsl:template match="text()" priority="-1" mode="M86"/><axsl:template match="@*|node()" priority="-2" mode="M86"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M86"/></axsl:template>

<!--PATTERN truststelogin_tty_u-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:login_tty_u" priority="1000" mode="M87"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:login_tty_u"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_tty_u entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_tty_u entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M87"/></axsl:template><axsl:template match="text()" priority="-1" mode="M87"/><axsl:template match="@*|node()" priority="-2" mode="M87"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M87"/></axsl:template>

<!--PATTERN truststenum_u_logins-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:num_u_logins" priority="1000" mode="M88"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:num_u_logins"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the num_u_logins entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the num_u_logins entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M88"/></axsl:template><axsl:template match="text()" priority="-1" mode="M88"/><axsl:template match="@*|node()" priority="-2" mode="M88"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M88"/></axsl:template>

<!--PATTERN truststemax_u_logins-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:max_u_logins" priority="1000" mode="M89"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:max_u_logins"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the max_u_logins entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the max_u_logins entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M89"/></axsl:template><axsl:template match="text()" priority="-1" mode="M89"/><axsl:template match="@*|node()" priority="-2" mode="M89"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M89"/></axsl:template>

<!--PATTERN truststelock_flag-->


	<!--RULE -->
<axsl:template match="hpux-def:trusted_state/hpux-def:lock_flag" priority="1000" mode="M90"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="hpux-def:trusted_state/hpux-def:lock_flag"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the lock_flag entity of a trusted_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the lock_flag entity of a trusted_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M90"/></axsl:template><axsl:template match="text()" priority="-1" mode="M90"/><axsl:template match="@*|node()" priority="-2" mode="M90"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M90"/></axsl:template>

<!--PATTERN famtst-->


	<!--RULE -->
<axsl:template match="ind-def:family_test/ind-def:object" priority="1001" mode="M91"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:family_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:family_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:family_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a family_test must reference a family_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M91"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:family_test/ind-def:state" priority="1000" mode="M91"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:family_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:family_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:family_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a family_test must reference a family_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M91"/></axsl:template><axsl:template match="text()" priority="-1" mode="M91"/><axsl:template match="@*|node()" priority="-2" mode="M91"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M91"/></axsl:template>

<!--PATTERN famstefamily-->


	<!--RULE -->
<axsl:template match="ind-def:family_state/ind-def:family" priority="1000" mode="M92"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:family_state/ind-def:family"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the family entity of a family_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the family entity of a family_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M92"/></axsl:template><axsl:template match="text()" priority="-1" mode="M92"/><axsl:template match="@*|node()" priority="-2" mode="M92"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M92"/></axsl:template>

<!--PATTERN md5tst-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_test/ind-def:object" priority="1001" mode="M93"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:filemd5_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:filemd5_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a filemd5_test must reference a filemd5_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M93"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:filemd5_test/ind-def:state" priority="1000" mode="M93"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:filemd5_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:filemd5_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a filemd5_test must reference a filemd5_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M93"/></axsl:template><axsl:template match="text()" priority="-1" mode="M93"/><axsl:template match="@*|node()" priority="-2" mode="M93"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M93"/></axsl:template>

<!--PATTERN md5objpath-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_object/ind-def:path" priority="1000" mode="M94"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_object/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a filemd5_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a filemd5_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M94"/></axsl:template><axsl:template match="text()" priority="-1" mode="M94"/><axsl:template match="@*|node()" priority="-2" mode="M94"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M94"/></axsl:template>

<!--PATTERN md5objfilename-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_object/ind-def:filename" priority="1000" mode="M95"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_object/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a filemd5_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a filemd5_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M95"/></axsl:template><axsl:template match="text()" priority="-1" mode="M95"/><axsl:template match="@*|node()" priority="-2" mode="M95"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M95"/></axsl:template>

<!--PATTERN md5stepath-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_state/ind-def:path" priority="1000" mode="M96"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_state/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a filemd5_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a filemd5_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M96"/></axsl:template><axsl:template match="text()" priority="-1" mode="M96"/><axsl:template match="@*|node()" priority="-2" mode="M96"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M96"/></axsl:template>

<!--PATTERN md5stefilename-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_state/ind-def:filename" priority="1000" mode="M97"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_state/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a filemd5_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a filemd5_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M97"/></axsl:template><axsl:template match="text()" priority="-1" mode="M97"/><axsl:template match="@*|node()" priority="-2" mode="M97"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M97"/></axsl:template>

<!--PATTERN md5stemd5-->


	<!--RULE -->
<axsl:template match="ind-def:filemd5_state/ind-def:md5" priority="1000" mode="M98"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:filemd5_state/ind-def:md5"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the md5 entity of a filemd5_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the md5 entity of a filemd5_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M98"/></axsl:template><axsl:template match="text()" priority="-1" mode="M98"/><axsl:template match="@*|node()" priority="-2" mode="M98"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M98"/></axsl:template>

<!--PATTERN envtst-->


	<!--RULE -->
<axsl:template match="ind-def:environmentvariable_test/ind-def:object" priority="1001" mode="M99"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:environmentvariable_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:environmentvariable_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:environmentvariable_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of an environmentvariable_test must reference a environmentvariable_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M99"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:environmentvariable_test/ind-def:state" priority="1000" mode="M99"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:environmentvariable_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:environmentvariable_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:environmentvariable_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of an environmentvariable_test must reference a environmentvariable_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M99"/></axsl:template><axsl:template match="text()" priority="-1" mode="M99"/><axsl:template match="@*|node()" priority="-2" mode="M99"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M99"/></axsl:template>

<!--PATTERN envobjname-->


	<!--RULE -->
<axsl:template match="ind-def:environmentvariable_object/ind-def:name" priority="1000" mode="M100"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:environmentvariable_object/ind-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an environmentvariable_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an environmentvariable_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M100"/></axsl:template><axsl:template match="text()" priority="-1" mode="M100"/><axsl:template match="@*|node()" priority="-2" mode="M100"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M100"/></axsl:template>

<!--PATTERN envstename-->


	<!--RULE -->
<axsl:template match="ind-def:environmentvariable_state/ind-def:name" priority="1000" mode="M101"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:environmentvariable_state/ind-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an environmentvariable_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an environmentvariable_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M101"/></axsl:template><axsl:template match="text()" priority="-1" mode="M101"/><axsl:template match="@*|node()" priority="-2" mode="M101"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M101"/></axsl:template>

<!--PATTERN envstevalue-->


	<!--RULE -->
<axsl:template match="ind-def:environmentvariable_state/ind-def:value" priority="1000" mode="M102"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:environmentvariable_state/ind-def:value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the supplied operation attribute for the value entity of an environmentvariable_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M102"/></axsl:template><axsl:template match="text()" priority="-1" mode="M102"/><axsl:template match="@*|node()" priority="-2" mode="M102"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M102"/></axsl:template>

<!--PATTERN txttst-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_test/ind-def:object" priority="1001" mode="M103"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:textfilecontent_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:textfilecontent_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a textfilecontent_test must reference a textfilecontent_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M103"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_test/ind-def:state" priority="1000" mode="M103"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:textfilecontent_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:textfilecontent_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a textfilecontent_test must reference a textfilecontent_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M103"/></axsl:template><axsl:template match="text()" priority="-1" mode="M103"/><axsl:template match="@*|node()" priority="-2" mode="M103"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M103"/></axsl:template>

<!--PATTERN txtobjpath-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_object/ind-def:path" priority="1000" mode="M104"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_object/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a textfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a textfilecontent_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M104"/></axsl:template><axsl:template match="text()" priority="-1" mode="M104"/><axsl:template match="@*|node()" priority="-2" mode="M104"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M104"/></axsl:template>

<!--PATTERN txtobjfilename-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_object/ind-def:filename" priority="1000" mode="M105"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_object/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a textfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a textfilecontent_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M105"/></axsl:template><axsl:template match="text()" priority="-1" mode="M105"/><axsl:template match="@*|node()" priority="-2" mode="M105"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M105"/></axsl:template>

<!--PATTERN txtobjline-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_object/ind-def:line" priority="1000" mode="M106"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_object/ind-def:line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the line entity of a textfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the line entity of a textfilecontent_object should be 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M106"/></axsl:template><axsl:template match="text()" priority="-1" mode="M106"/><axsl:template match="@*|node()" priority="-2" mode="M106"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M106"/></axsl:template>

<!--PATTERN txtstepath-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_state/ind-def:path" priority="1000" mode="M107"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_state/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a textfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a textfilecontent_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M107"/></axsl:template><axsl:template match="text()" priority="-1" mode="M107"/><axsl:template match="@*|node()" priority="-2" mode="M107"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M107"/></axsl:template>

<!--PATTERN txtstefilename-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_state/ind-def:filename" priority="1000" mode="M108"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_state/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a textfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a textfilecontent_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M108"/></axsl:template><axsl:template match="text()" priority="-1" mode="M108"/><axsl:template match="@*|node()" priority="-2" mode="M108"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M108"/></axsl:template>

<!--PATTERN txtsteline-->


	<!--RULE -->
<axsl:template match="ind-def:textfilecontent_state/ind-def:line" priority="1000" mode="M109"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:textfilecontent_state/ind-def:line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the line entity of a textfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the line entity of a textfilecontent_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M109"/></axsl:template><axsl:template match="text()" priority="-1" mode="M109"/><axsl:template match="@*|node()" priority="-2" mode="M109"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M109"/></axsl:template>

<!--PATTERN txtstesubexpression-->


	<!--RULE -->
<axsl:template match="ind-def:registry_state/ind-def:subexpression" priority="1000" mode="M110"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:registry_state/ind-def:subexpression"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the supplied operation attribute for the subexpression entity of a textfilecontent_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M110"/></axsl:template><axsl:template match="text()" priority="-1" mode="M110"/><axsl:template match="@*|node()" priority="-2" mode="M110"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M110"/></axsl:template>

<!--PATTERN vattst-->


	<!--RULE -->
<axsl:template match="ind-def:variable_test/ind-def:object" priority="1001" mode="M111"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:variable_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:variable_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:variable_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a variable_test must reference a variable_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M111"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:variable_test/ind-def:state" priority="1000" mode="M111"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:variable_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:variable_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:variable_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a variable_test must reference a variable_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M111"/></axsl:template><axsl:template match="text()" priority="-1" mode="M111"/><axsl:template match="@*|node()" priority="-2" mode="M111"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M111"/></axsl:template>

<!--PATTERN varobjvar_ref-->


	<!--RULE -->
<axsl:template match="ind-def:variable_object/ind-def:var_ref" priority="1000" mode="M112"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:variable_object/ind-def:var_ref"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the var_ref entity of a variable_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the var_ref entity of a variable_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M112"/></axsl:template><axsl:template match="text()" priority="-1" mode="M112"/><axsl:template match="@*|node()" priority="-2" mode="M112"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M112"/></axsl:template>

<!--PATTERN varstevar_ref-->


	<!--RULE -->
<axsl:template match="ind-def:variable_state/ind-def:var_ref" priority="1000" mode="M113"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:variable_state/ind-def:var_ref"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the var_ref entity of a variable_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the var_ref entity of a variable_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M113"/></axsl:template><axsl:template match="text()" priority="-1" mode="M113"/><axsl:template match="@*|node()" priority="-2" mode="M113"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M113"/></axsl:template>

<!--PATTERN varstevalue-->


	<!--RULE -->
<axsl:template match="ind-def:variable_state/ind-def:value" priority="1000" mode="M114"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:variable_state/ind-def:value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='evr_string' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or'))or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='ios_version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='bool' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='evr_string' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or'))or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='ios_version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the supplied operation attribute for the value entity of a variable_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M114"/></axsl:template><axsl:template match="text()" priority="-1" mode="M114"/><axsl:template match="@*|node()" priority="-2" mode="M114"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M114"/></axsl:template>

<!--PATTERN xmltst-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_test/ind-def:object" priority="1001" mode="M115"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_test/ind-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:xmlfilecontent_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ind-def:xmlfilecontent_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a xmlfilecontent_test must reference a xmlfilecontent_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M115"/></axsl:template>

	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_test/ind-def:state" priority="1000" mode="M115"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_test/ind-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:xmlfilecontent_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ind-def:xmlfilecontent_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a xmlfilecontent_test must reference a xmlfilecontent_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M115"/></axsl:template><axsl:template match="text()" priority="-1" mode="M115"/><axsl:template match="@*|node()" priority="-2" mode="M115"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M115"/></axsl:template>

<!--PATTERN xmlobjpath-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_object/ind-def:path" priority="1000" mode="M116"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_object/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a xmlfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a xmlfilecontent_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M116"/></axsl:template><axsl:template match="text()" priority="-1" mode="M116"/><axsl:template match="@*|node()" priority="-2" mode="M116"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M116"/></axsl:template>

<!--PATTERN xmlobjfilename-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_object/ind-def:filename" priority="1000" mode="M117"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_object/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a xmlfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a xmlfilecontent_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M117"/></axsl:template><axsl:template match="text()" priority="-1" mode="M117"/><axsl:template match="@*|node()" priority="-2" mode="M117"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M117"/></axsl:template>

<!--PATTERN xmlobjxpath-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_object/ind-def:xpath" priority="1000" mode="M118"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_object/ind-def:xpath"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the xpath entity of a xmlfilecontent_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the xpath entity of a xmlfilecontent_object should be 'equals'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M118"/></axsl:template><axsl:template match="text()" priority="-1" mode="M118"/><axsl:template match="@*|node()" priority="-2" mode="M118"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M118"/></axsl:template>

<!--PATTERN xmlstepath-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_state/ind-def:path" priority="1000" mode="M119"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_state/ind-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a xmlfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a xmlfilecontent_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M119"/></axsl:template><axsl:template match="text()" priority="-1" mode="M119"/><axsl:template match="@*|node()" priority="-2" mode="M119"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M119"/></axsl:template>

<!--PATTERN xmlstefilename-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_state/ind-def:filename" priority="1000" mode="M120"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_state/ind-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a xmlfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a xmlfilecontent_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M120"/></axsl:template><axsl:template match="text()" priority="-1" mode="M120"/><axsl:template match="@*|node()" priority="-2" mode="M120"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M120"/></axsl:template>

<!--PATTERN xmlstexpath-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_state/ind-def:xpath" priority="1000" mode="M121"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_state/ind-def:xpath"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the xpath entity of a xmlfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the xpath entity of a xmlfilecontent_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M121"/></axsl:template><axsl:template match="text()" priority="-1" mode="M121"/><axsl:template match="@*|node()" priority="-2" mode="M121"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M121"/></axsl:template>

<!--PATTERN xmlstevalue_of-->


	<!--RULE -->
<axsl:template match="ind-def:xmlfilecontent_state/ind-def:value_of" priority="1000" mode="M122"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ind-def:xmlfilecontent_state/ind-def:value_of"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the value_of entity of a xmlfilecontent_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the value_of entity of a xmlfilecontent_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M122"/></axsl:template><axsl:template match="text()" priority="-1" mode="M122"/><axsl:template match="@*|node()" priority="-2" mode="M122"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M122"/></axsl:template>

<!--PATTERN globaltst-->


	<!--RULE -->
<axsl:template match="ios-def:global_test/ios-def:object" priority="1001" mode="M123"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:global_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:global_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:global_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a global_test must reference a global_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M123"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:global_test/ios-def:state" priority="1000" mode="M123"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:global_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:global_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:global_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a global_test must reference a global_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M123"/></axsl:template><axsl:template match="text()" priority="-1" mode="M123"/><axsl:template match="@*|node()" priority="-2" mode="M123"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M123"/></axsl:template>

<!--PATTERN globalobjglobal_command-->


	<!--RULE -->
<axsl:template match="ios-def:global_object/ios-def:global_command" priority="1000" mode="M124"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:global_object/ios-def:global_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the global_command entity of a global_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the global_command entity of a global_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M124"/></axsl:template><axsl:template match="text()" priority="-1" mode="M124"/><axsl:template match="@*|node()" priority="-2" mode="M124"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M124"/></axsl:template>

<!--PATTERN globalsteglobal_command-->


	<!--RULE -->
<axsl:template match="ios-def:global_state/ios-def:global_command" priority="1000" mode="M125"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:global_state/ios-def:global_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the global_command entity of a global_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the global_command entity of a global_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M125"/></axsl:template><axsl:template match="text()" priority="-1" mode="M125"/><axsl:template match="@*|node()" priority="-2" mode="M125"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M125"/></axsl:template>

<!--PATTERN interfacetst-->


	<!--RULE -->
<axsl:template match="ios-def:interface_test/ios-def:object" priority="1001" mode="M126"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:interface_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:interface_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of an interface_test must reference an interface_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M126"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:interface_test/ios-def:state" priority="1000" mode="M126"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:interface_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:interface_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of an interface_test must reference an interface_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M126"/></axsl:template><axsl:template match="text()" priority="-1" mode="M126"/><axsl:template match="@*|node()" priority="-2" mode="M126"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M126"/></axsl:template>

<!--PATTERN interfaceobjname-->


	<!--RULE -->
<axsl:template match="ios-def:interface_object/ios-def:name" priority="1000" mode="M127"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_object/ios-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an interface_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an interface_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M127"/></axsl:template><axsl:template match="text()" priority="-1" mode="M127"/><axsl:template match="@*|node()" priority="-2" mode="M127"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M127"/></axsl:template>

<!--PATTERN interfacestename-->


	<!--RULE -->
<axsl:template match="ios-def:interface_state/ios-def:name" priority="1000" mode="M128"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_state/ios-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M128"/></axsl:template><axsl:template match="text()" priority="-1" mode="M128"/><axsl:template match="@*|node()" priority="-2" mode="M128"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M128"/></axsl:template>

<!--PATTERN interfacesteip_directed_broadcast_command-->


	<!--RULE -->
<axsl:template match="ios-def:interface_state/ios-def:ip_directed_broadcast_command" priority="1000" mode="M129"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_state/ios-def:ip_directed_broadcast_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the ip_directed_broadcast_command entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the ip_directed_broadcast_command entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M129"/></axsl:template><axsl:template match="text()" priority="-1" mode="M129"/><axsl:template match="@*|node()" priority="-2" mode="M129"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M129"/></axsl:template>

<!--PATTERN interfacesteno_ip_directed_broadcast_command-->


	<!--RULE -->
<axsl:template match="ios-def:interface_state/ios-def:no_ip_directed_broadcast_command" priority="1000" mode="M130"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_state/ios-def:no_ip_directed_broadcast_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the no_ip_directed_broadcast_command entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the no_ip_directed_broadcast_command entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M130"/></axsl:template><axsl:template match="text()" priority="-1" mode="M130"/><axsl:template match="@*|node()" priority="-2" mode="M130"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M130"/></axsl:template>

<!--PATTERN interfacesteproxy_arp_command-->


	<!--RULE -->
<axsl:template match="ios-def:interface_state/ios-def:proxy_arp_command" priority="1000" mode="M131"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_state/ios-def:proxy_arp_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the proxy_arp_command entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the proxy_arp_command entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M131"/></axsl:template><axsl:template match="text()" priority="-1" mode="M131"/><axsl:template match="@*|node()" priority="-2" mode="M131"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M131"/></axsl:template>

<!--PATTERN interfacesteshutdown_command-->


	<!--RULE -->
<axsl:template match="ios-def:interface_state/ios-def:shutdown_command" priority="1000" mode="M132"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:interface_state/ios-def:shutdown_command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the shutdown_command entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the shutdown_command entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M132"/></axsl:template><axsl:template match="text()" priority="-1" mode="M132"/><axsl:template match="@*|node()" priority="-2" mode="M132"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M132"/></axsl:template>

<!--PATTERN linetst-->


	<!--RULE -->
<axsl:template match="ios-def:line_test/ios-def:object" priority="1001" mode="M133"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:line_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:line_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:line_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a line_test must reference a line_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M133"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:line_test/ios-def:state" priority="1000" mode="M133"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:line_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:line_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:line_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a line_test must reference a line_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M133"/></axsl:template><axsl:template match="text()" priority="-1" mode="M133"/><axsl:template match="@*|node()" priority="-2" mode="M133"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M133"/></axsl:template>

<!--PATTERN lineobjshow_subcommand-->


	<!--RULE -->
<axsl:template match="ios-def:line_object/ios-def:show_subcommand" priority="1000" mode="M134"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:line_object/ios-def:show_subcommand"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the show_subcommand entity of a line_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the show_subcommand entity of a line_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M134"/></axsl:template><axsl:template match="text()" priority="-1" mode="M134"/><axsl:template match="@*|node()" priority="-2" mode="M134"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M134"/></axsl:template>

<!--PATTERN linesteshow_subcommand-->


	<!--RULE -->
<axsl:template match="ios-def:line_state/ios-def:show_subcommand" priority="1000" mode="M135"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:line_state/ios-def:show_subcommand"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the show_subcommand entity of a line_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the show_subcommand entity of a line_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M135"/></axsl:template><axsl:template match="text()" priority="-1" mode="M135"/><axsl:template match="@*|node()" priority="-2" mode="M135"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M135"/></axsl:template>

<!--PATTERN linesteconfig_line-->


	<!--RULE -->
<axsl:template match="ios-def:line_state/ios-def:config_line" priority="1000" mode="M136"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:line_state/ios-def:config_line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the config_line entity of a line_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the config_line entity of a line_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M136"/></axsl:template><axsl:template match="text()" priority="-1" mode="M136"/><axsl:template match="@*|node()" priority="-2" mode="M136"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M136"/></axsl:template>

<!--PATTERN snmptst-->


	<!--RULE -->
<axsl:template match="ios-def:snmp_test/ios-def:object" priority="1001" mode="M137"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:snmp_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:snmp_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:snmp_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a snmp_test must reference a snmp_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M137"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:snmp_test/ios-def:state" priority="1000" mode="M137"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:snmp_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:snmp_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:snmp_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a snmp_test must reference a snmp_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M137"/></axsl:template><axsl:template match="text()" priority="-1" mode="M137"/><axsl:template match="@*|node()" priority="-2" mode="M137"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M137"/></axsl:template>

<!--PATTERN snmpsteaccess_list-->


	<!--RULE -->
<axsl:template match="ios-def:snmp_state/ios-def:access_list" priority="1000" mode="M138"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:snmp_state/ios-def:access_list"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the access_list entity of a snmp_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the access_list entity of a snmp_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M138"/></axsl:template><axsl:template match="text()" priority="-1" mode="M138"/><axsl:template match="@*|node()" priority="-2" mode="M138"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M138"/></axsl:template>

<!--PATTERN snmpstecommunity_name-->


	<!--RULE -->
<axsl:template match="ios-def:snmp_state/ios-def:community_name" priority="1000" mode="M139"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:snmp_state/ios-def:community_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the community_name entity of a snmp_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the community_name entity of a snmp_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M139"/></axsl:template><axsl:template match="text()" priority="-1" mode="M139"/><axsl:template match="@*|node()" priority="-2" mode="M139"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M139"/></axsl:template>

<!--PATTERN tclshtst-->


	<!--RULE -->
<axsl:template match="ios-def:tclsh_test/ios-def:object" priority="1001" mode="M140"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:tclsh_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:tclsh_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:tclsh_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a tclsh_test must reference a tclsh_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M140"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:tclsh_test/ios-def:state" priority="1000" mode="M140"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:tclsh_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:tclsh_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:tclsh_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a tclsh_test must reference a tclsh_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M140"/></axsl:template><axsl:template match="text()" priority="-1" mode="M140"/><axsl:template match="@*|node()" priority="-2" mode="M140"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M140"/></axsl:template>

<!--PATTERN tclshsteavailable-->


	<!--RULE -->
<axsl:template match="ios-def:tclsh_state/ios-def:available" priority="1000" mode="M141"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:tclsh_state/ios-def:available"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the available entity of a tclsh_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the available entity of a tclsh_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M141"/></axsl:template><axsl:template match="text()" priority="-1" mode="M141"/><axsl:template match="@*|node()" priority="-2" mode="M141"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M141"/></axsl:template>

<!--PATTERN vertst-->


	<!--RULE -->
<axsl:template match="ios-def:version_test/ios-def:object" priority="1001" mode="M142"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_test/ios-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:version_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/ios-def:version_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the object child element of a version_test must reference a version_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M142"/></axsl:template>

	<!--RULE -->
<axsl:template match="ios-def:version_test/ios-def:state" priority="1000" mode="M142"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_test/ios-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:version_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/ios-def:version_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - the state child element of a version_test must reference a version_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M142"/></axsl:template><axsl:template match="text()" priority="-1" mode="M142"/><axsl:template match="@*|node()" priority="-2" mode="M142"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M142"/></axsl:template>

<!--PATTERN verstemajor_release-->


	<!--RULE -->
<axsl:template match="ios-def:version_state/ios-def:major_release" priority="1000" mode="M143"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_state/ios-def:major_release"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the major_release entity of a version_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the major_release entity of a version_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M143"/></axsl:template><axsl:template match="text()" priority="-1" mode="M143"/><axsl:template match="@*|node()" priority="-2" mode="M143"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M143"/></axsl:template>

<!--PATTERN verstetrain_number-->


	<!--RULE -->
<axsl:template match="ios-def:version_state/ios-def:train_number" priority="1000" mode="M144"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_state/ios-def:train_number"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the train_number entity of a version_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the train_number entity of a version_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M144"/></axsl:template><axsl:template match="text()" priority="-1" mode="M144"/><axsl:template match="@*|node()" priority="-2" mode="M144"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M144"/></axsl:template>

<!--PATTERN verstetrain_identifier-->


	<!--RULE -->
<axsl:template match="ios-def:version_state/ios-def:train_identifier" priority="1000" mode="M145"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_state/ios-def:train_identifier"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the train_identifier entity of a version_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the train_identifier entity of a version_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M145"/></axsl:template><axsl:template match="text()" priority="-1" mode="M145"/><axsl:template match="@*|node()" priority="-2" mode="M145"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M145"/></axsl:template>

<!--PATTERN versteversion_string-->


	<!--RULE -->
<axsl:template match="ios-def:version_state/ios-def:version_string" priority="1000" mode="M146"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="ios-def:version_state/ios-def:version_string"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='ios_version'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='ios_version'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version_string entity of a version_state should be 'ios_version'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version_string entity of a version_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M146"/></axsl:template><axsl:template match="text()" priority="-1" mode="M146"/><axsl:template match="@*|node()" priority="-2" mode="M146"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M146"/></axsl:template>

<!--PATTERN dpkgobjname-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_object/linux-def:name" priority="1000" mode="M147"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_object/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a dpkginfo_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a dpkginfo_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M147"/></axsl:template><axsl:template match="text()" priority="-1" mode="M147"/><axsl:template match="@*|node()" priority="-2" mode="M147"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M147"/></axsl:template>

<!--PATTERN dpkgstename-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:name" priority="1000" mode="M148"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a dpkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a dpkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M148"/></axsl:template><axsl:template match="text()" priority="-1" mode="M148"/><axsl:template match="@*|node()" priority="-2" mode="M148"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M148"/></axsl:template>

<!--PATTERN dpkgstearch-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:arch" priority="1000" mode="M149"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:arch"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the arch entity of a dpkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the arch entity of a dpkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M149"/></axsl:template><axsl:template match="text()" priority="-1" mode="M149"/><axsl:template match="@*|node()" priority="-2" mode="M149"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M149"/></axsl:template>

<!--PATTERN dpkgsteepoch-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:epoch" priority="1000" mode="M150"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:epoch"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the epoch entity of a dpkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the epoch entity of a dpkginfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M150"/></axsl:template><axsl:template match="text()" priority="-1" mode="M150"/><axsl:template match="@*|node()" priority="-2" mode="M150"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M150"/></axsl:template>

<!--PATTERN dpkgsterelease-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:release" priority="1000" mode="M151"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:release"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the release entity of a dpkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the release entity of a dpkginfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M151"/></axsl:template><axsl:template match="text()" priority="-1" mode="M151"/><axsl:template match="@*|node()" priority="-2" mode="M151"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M151"/></axsl:template>

<!--PATTERN dpkgsteversion-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:version" priority="1000" mode="M152"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a dpkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a dpkginfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M152"/></axsl:template><axsl:template match="text()" priority="-1" mode="M152"/><axsl:template match="@*|node()" priority="-2" mode="M152"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M152"/></axsl:template>

<!--PATTERN dpkgsteevr-->


	<!--RULE -->
<axsl:template match="linux-def:dpkginfo_state/linux-def:evr" priority="1000" mode="M153"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:dpkginfo_state/linux-def:evr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='evr_string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='evr_string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the evr entity of a dpkginfo_state should be 'evr_string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or 'pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the evr entity of a dpkginfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M153"/></axsl:template><axsl:template match="text()" priority="-1" mode="M153"/><axsl:template match="@*|node()" priority="-2" mode="M153"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M153"/></axsl:template>

<!--PATTERN ilsobjprotocol-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_object/linux-def:protocol" priority="1000" mode="M154"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_object/linux-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an inetlisteningservers_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an inetlisteningservers_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M154"/></axsl:template><axsl:template match="text()" priority="-1" mode="M154"/><axsl:template match="@*|node()" priority="-2" mode="M154"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M154"/></axsl:template>

<!--PATTERN ilsobjlocal_address-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_object/linux-def:local_address" priority="1000" mode="M155"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_object/linux-def:local_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_address entity of an inetlisteningservers_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_address entity of an inetlisteningservers_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M155"/></axsl:template><axsl:template match="text()" priority="-1" mode="M155"/><axsl:template match="@*|node()" priority="-2" mode="M155"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M155"/></axsl:template>

<!--PATTERN ilsobjlocal_port-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_object/linux-def:local_port" priority="1000" mode="M156"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_object/linux-def:local_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_port entity of an inetlisteningservers_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_port entity of an inetlisteningservers_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M156"/></axsl:template><axsl:template match="text()" priority="-1" mode="M156"/><axsl:template match="@*|node()" priority="-2" mode="M156"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M156"/></axsl:template>

<!--PATTERN ilssteprotocol-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:protocol" priority="1000" mode="M157"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M157"/></axsl:template><axsl:template match="text()" priority="-1" mode="M157"/><axsl:template match="@*|node()" priority="-2" mode="M157"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M157"/></axsl:template>

<!--PATTERN ilsstelocal_address-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:local_address" priority="1000" mode="M158"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:local_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M158"/></axsl:template><axsl:template match="text()" priority="-1" mode="M158"/><axsl:template match="@*|node()" priority="-2" mode="M158"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M158"/></axsl:template>

<!--PATTERN ilsstelocal_port-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:local_port" priority="1000" mode="M159"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:local_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_port entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_port entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M159"/></axsl:template><axsl:template match="text()" priority="-1" mode="M159"/><axsl:template match="@*|node()" priority="-2" mode="M159"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M159"/></axsl:template>

<!--PATTERN ilsstelocal_full_address-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:local_full_address" priority="1000" mode="M160"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:local_full_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_full_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_full_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M160"/></axsl:template><axsl:template match="text()" priority="-1" mode="M160"/><axsl:template match="@*|node()" priority="-2" mode="M160"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M160"/></axsl:template>

<!--PATTERN ilssteprogram_name-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:program_name" priority="1000" mode="M161"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:program_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the program_name entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the program_name entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M161"/></axsl:template><axsl:template match="text()" priority="-1" mode="M161"/><axsl:template match="@*|node()" priority="-2" mode="M161"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M161"/></axsl:template>

<!--PATTERN ilssteforeign_address-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:foreign_address" priority="1000" mode="M162"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:foreign_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M162"/></axsl:template><axsl:template match="text()" priority="-1" mode="M162"/><axsl:template match="@*|node()" priority="-2" mode="M162"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M162"/></axsl:template>

<!--PATTERN ilssteforeign_port-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:foreign_port" priority="1000" mode="M163"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:foreign_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_port entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_port entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M163"/></axsl:template><axsl:template match="text()" priority="-1" mode="M163"/><axsl:template match="@*|node()" priority="-2" mode="M163"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M163"/></axsl:template>

<!--PATTERN ilssteforeign_full_address-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:foreign_full_address" priority="1000" mode="M164"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:foreign_full_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_full_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_full_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M164"/></axsl:template><axsl:template match="text()" priority="-1" mode="M164"/><axsl:template match="@*|node()" priority="-2" mode="M164"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M164"/></axsl:template>

<!--PATTERN ilsstepid-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:pid" priority="1000" mode="M165"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:pid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pid entity of an inetlisteningservers_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pid entity of an inetlisteningservers_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M165"/></axsl:template><axsl:template match="text()" priority="-1" mode="M165"/><axsl:template match="@*|node()" priority="-2" mode="M165"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M165"/></axsl:template>

<!--PATTERN ilssteuser_id-->


	<!--RULE -->
<axsl:template match="linux-def:inetlisteningservers_state/linux-def:user_id" priority="1000" mode="M166"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:inetlisteningservers_state/linux-def:user_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user_id entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user_id entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M166"/></axsl:template><axsl:template match="text()" priority="-1" mode="M166"/><axsl:template match="@*|node()" priority="-2" mode="M166"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M166"/></axsl:template>

<!--PATTERN rpmobjname-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_object/linux-def:name" priority="1000" mode="M167"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_object/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a rpminfo_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a rpminfo_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M167"/></axsl:template><axsl:template match="text()" priority="-1" mode="M167"/><axsl:template match="@*|node()" priority="-2" mode="M167"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M167"/></axsl:template>

<!--PATTERN rpmstename-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:name" priority="1000" mode="M168"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a rpminfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M168"/></axsl:template><axsl:template match="text()" priority="-1" mode="M168"/><axsl:template match="@*|node()" priority="-2" mode="M168"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M168"/></axsl:template>

<!--PATTERN rpmstearch-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:arch" priority="1000" mode="M169"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:arch"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the arch entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the arch entity of a rpminfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M169"/></axsl:template><axsl:template match="text()" priority="-1" mode="M169"/><axsl:template match="@*|node()" priority="-2" mode="M169"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M169"/></axsl:template>

<!--PATTERN rpmsteepoch-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:epoch" priority="1000" mode="M170"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:epoch"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the epoch entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the epoch entity of a rpminfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M170"/></axsl:template><axsl:template match="text()" priority="-1" mode="M170"/><axsl:template match="@*|node()" priority="-2" mode="M170"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M170"/></axsl:template>

<!--PATTERN rpmsterelease-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:release" priority="1000" mode="M171"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:release"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the release entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the release entity of a rpminfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M171"/></axsl:template><axsl:template match="text()" priority="-1" mode="M171"/><axsl:template match="@*|node()" priority="-2" mode="M171"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M171"/></axsl:template>

<!--PATTERN rpmsteversion-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:version" priority="1000" mode="M172"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a rpminfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M172"/></axsl:template><axsl:template match="text()" priority="-1" mode="M172"/><axsl:template match="@*|node()" priority="-2" mode="M172"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M172"/></axsl:template>

<!--PATTERN rpmsteevr-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:evr" priority="1000" mode="M173"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:evr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='evr_string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='evr_string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the evr entity of a rpminfo_state should be 'evr_string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the evr entity of a rpminfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M173"/></axsl:template><axsl:template match="text()" priority="-1" mode="M173"/><axsl:template match="@*|node()" priority="-2" mode="M173"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M173"/></axsl:template>

<!--PATTERN rpmstesignaturekeyid-->


	<!--RULE -->
<axsl:template match="linux-def:rpminfo_state/linux-def:signature_keyid" priority="1000" mode="M174"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:rpminfo_state/linux-def:signature_keyid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the signature_keyid entity of a rpminfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the signature_keyid entity of a rpminfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M174"/></axsl:template><axsl:template match="text()" priority="-1" mode="M174"/><axsl:template match="@*|node()" priority="-2" mode="M174"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M174"/></axsl:template>

<!--PATTERN spkginfoobjname-->


	<!--RULE -->
<axsl:template match="linux-def:slackwarepkginfo_object/linux-def:name" priority="1000" mode="M175"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:slackwarepkginfo_object/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a slackwarepkginfo_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a slackwarepkginfo_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M175"/></axsl:template><axsl:template match="text()" priority="-1" mode="M175"/><axsl:template match="@*|node()" priority="-2" mode="M175"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M175"/></axsl:template>

<!--PATTERN spkginfostename-->


	<!--RULE -->
<axsl:template match="linux-def:slackwarepkginfo_state/linux-def:name" priority="1000" mode="M176"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:slackwarepkginfo_state/linux-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a slackwarepkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a slackwarepkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M176"/></axsl:template><axsl:template match="text()" priority="-1" mode="M176"/><axsl:template match="@*|node()" priority="-2" mode="M176"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M176"/></axsl:template>

<!--PATTERN spkginfosteversion-->


	<!--RULE -->
<axsl:template match="linux-def:slackwarepkginfo_state/linux-def:version" priority="1000" mode="M177"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:slackwarepkginfo_state/linux-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a slackwarepkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a slackwarepkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M177"/></axsl:template><axsl:template match="text()" priority="-1" mode="M177"/><axsl:template match="@*|node()" priority="-2" mode="M177"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M177"/></axsl:template>

<!--PATTERN spkginfostearch-->


	<!--RULE -->
<axsl:template match="linux-def:slackwarepkginfo_state/linux-def:architecture" priority="1000" mode="M178"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:slackwarepkginfo_state/linux-def:architecture"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the architecture entity of a slackwarepkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the architecture entity of a slackwarepkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M178"/></axsl:template><axsl:template match="text()" priority="-1" mode="M178"/><axsl:template match="@*|node()" priority="-2" mode="M178"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M178"/></axsl:template>

<!--PATTERN spkginfosterevision-->


	<!--RULE -->
<axsl:template match="linux-def:slackwarepkginfo_state/linux-def:revision" priority="1000" mode="M179"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="linux-def:slackwarepkginfo_state/linux-def:revision"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the revision entity of a slackwarepkginfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the revision entity of a slackwarepkginfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M179"/></axsl:template><axsl:template match="text()" priority="-1" mode="M179"/><axsl:template match="@*|node()" priority="-2" mode="M179"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M179"/></axsl:template>

<!--PATTERN accountobjusername-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_object/macos-def:username" priority="1000" mode="M180"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_object/macos-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of an accountinfo_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of an accountinfo_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M180"/></axsl:template><axsl:template match="text()" priority="-1" mode="M180"/><axsl:template match="@*|node()" priority="-2" mode="M180"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M180"/></axsl:template>

<!--PATTERN accountsteusername-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:username" priority="1000" mode="M181"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of an accountinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of an accountinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M181"/></axsl:template><axsl:template match="text()" priority="-1" mode="M181"/><axsl:template match="@*|node()" priority="-2" mode="M181"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M181"/></axsl:template>

<!--PATTERN accountstepassword-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:password" priority="1000" mode="M182"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:password"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the password entity of an accountinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the password entity of an accountinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M182"/></axsl:template><axsl:template match="text()" priority="-1" mode="M182"/><axsl:template match="@*|node()" priority="-2" mode="M182"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M182"/></axsl:template>

<!--PATTERN accountsteuid-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:uid" priority="1000" mode="M183"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:uid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the uid entity of an accountinfo_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the uid entity of an accountinfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M183"/></axsl:template><axsl:template match="text()" priority="-1" mode="M183"/><axsl:template match="@*|node()" priority="-2" mode="M183"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M183"/></axsl:template>

<!--PATTERN accountstegid-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:gid" priority="1000" mode="M184"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:gid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gid entity of an accountinfo_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gid entity of an accountinfo_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M184"/></axsl:template><axsl:template match="text()" priority="-1" mode="M184"/><axsl:template match="@*|node()" priority="-2" mode="M184"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M184"/></axsl:template>

<!--PATTERN accountsterealname-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:realname" priority="1000" mode="M185"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:realname"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the realname entity of an accountinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the realname entity of an accountinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M185"/></axsl:template><axsl:template match="text()" priority="-1" mode="M185"/><axsl:template match="@*|node()" priority="-2" mode="M185"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M185"/></axsl:template>

<!--PATTERN accountstehome_dir-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:home_dir" priority="1000" mode="M186"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:home_dir"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the home_dir entity of an accountinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the home_dir entity of an accountinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M186"/></axsl:template><axsl:template match="text()" priority="-1" mode="M186"/><axsl:template match="@*|node()" priority="-2" mode="M186"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M186"/></axsl:template>

<!--PATTERN accountstelogin_shell-->


	<!--RULE -->
<axsl:template match="macos-def:accountinfo_state/macos-def:login_shell" priority="1000" mode="M187"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:accountinfo_state/macos-def:login_shell"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_shell entity of an accountinfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_shell entity of an accountinfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M187"/></axsl:template><axsl:template match="text()" priority="-1" mode="M187"/><axsl:template match="@*|node()" priority="-2" mode="M187"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M187"/></axsl:template>

<!--PATTERN ilsobjprogram_name-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_object/macos-def:program_name" priority="1000" mode="M188"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_object/macos-def:program_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the program_name entity of an inetlisteningservers_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the program_name entity of an inetlisteningservers_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M188"/></axsl:template><axsl:template match="text()" priority="-1" mode="M188"/><axsl:template match="@*|node()" priority="-2" mode="M188"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M188"/></axsl:template>

<!--PATTERN ilssteprogram_name-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:program_name" priority="1000" mode="M189"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:program_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the program_name entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the program_name entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M189"/></axsl:template><axsl:template match="text()" priority="-1" mode="M189"/><axsl:template match="@*|node()" priority="-2" mode="M189"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M189"/></axsl:template>

<!--PATTERN ilsstelocal_address-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:local_address" priority="1000" mode="M190"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:local_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M190"/></axsl:template><axsl:template match="text()" priority="-1" mode="M190"/><axsl:template match="@*|node()" priority="-2" mode="M190"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M190"/></axsl:template>

<!--PATTERN ilsstelocal_full_address-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:local_full_address" priority="1000" mode="M191"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:local_full_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_full_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_full_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M191"/></axsl:template><axsl:template match="text()" priority="-1" mode="M191"/><axsl:template match="@*|node()" priority="-2" mode="M191"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M191"/></axsl:template>

<!--PATTERN ilsstelocal_port-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:local_port" priority="1000" mode="M192"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:local_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the local_port entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the local_port entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M192"/></axsl:template><axsl:template match="text()" priority="-1" mode="M192"/><axsl:template match="@*|node()" priority="-2" mode="M192"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M192"/></axsl:template>

<!--PATTERN ilssteforeign_address-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:foreign_address" priority="1000" mode="M193"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:foreign_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M193"/></axsl:template><axsl:template match="text()" priority="-1" mode="M193"/><axsl:template match="@*|node()" priority="-2" mode="M193"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M193"/></axsl:template>

<!--PATTERN ilssteforeign_full_address-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:foreign_full_address" priority="1000" mode="M194"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:foreign_full_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_full_address entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_full_address entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M194"/></axsl:template><axsl:template match="text()" priority="-1" mode="M194"/><axsl:template match="@*|node()" priority="-2" mode="M194"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M194"/></axsl:template>

<!--PATTERN ilssteforeign_port-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:foreign_port" priority="1000" mode="M195"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:foreign_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the foreign_port entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the foreign_port entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M195"/></axsl:template><axsl:template match="text()" priority="-1" mode="M195"/><axsl:template match="@*|node()" priority="-2" mode="M195"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M195"/></axsl:template>

<!--PATTERN ilsstepid-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:pid" priority="1000" mode="M196"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:pid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pid entity of an inetlisteningservers_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pid entity of an inetlisteningservers_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M196"/></axsl:template><axsl:template match="text()" priority="-1" mode="M196"/><axsl:template match="@*|node()" priority="-2" mode="M196"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M196"/></axsl:template>

<!--PATTERN ilssteprotocol-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:protocol" priority="1000" mode="M197"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M197"/></axsl:template><axsl:template match="text()" priority="-1" mode="M197"/><axsl:template match="@*|node()" priority="-2" mode="M197"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M197"/></axsl:template>

<!--PATTERN ilssteuser_id-->


	<!--RULE -->
<axsl:template match="macos-def:inetlisteningservers_state/macos-def:user_id" priority="1000" mode="M198"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:inetlisteningservers_state/macos-def:user_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user_id entity of an inetlisteningservers_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user_id entity of an inetlisteningservers_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M198"/></axsl:template><axsl:template match="text()" priority="-1" mode="M198"/><axsl:template match="@*|node()" priority="-2" mode="M198"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M198"/></axsl:template>

<!--PATTERN nvramobjnvram_var-->


	<!--RULE -->
<axsl:template match="macos-def:nvram_object/macos-def:nvram_var" priority="1000" mode="M199"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:nvram_object/macos-def:nvram_var"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the nvram_var entity of a nvram_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the nvram_var entity of a nvram_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M199"/></axsl:template><axsl:template match="text()" priority="-1" mode="M199"/><axsl:template match="@*|node()" priority="-2" mode="M199"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M199"/></axsl:template>

<!--PATTERN nvramstenvram_var-->


	<!--RULE -->
<axsl:template match="macos-def:nvram_state/macos-def:nvram_var" priority="1000" mode="M200"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:nvram_state/macos-def:nvram_var"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the nvram_var entity of a nvram_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the nvram_var entity of a nvram_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M200"/></axsl:template><axsl:template match="text()" priority="-1" mode="M200"/><axsl:template match="@*|node()" priority="-2" mode="M200"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M200"/></axsl:template>

<!--PATTERN nvramstenvram_value-->


	<!--RULE -->
<axsl:template match="macos-def:nvram_state/macos-def:nvram_value" priority="1000" mode="M201"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:nvram_state/macos-def:nvram_value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the nvram_value entity of a nvram_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the nvram_value entity of a nvram_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M201"/></axsl:template><axsl:template match="text()" priority="-1" mode="M201"/><axsl:template match="@*|node()" priority="-2" mode="M201"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M201"/></axsl:template>

<!--PATTERN pwpobjusername-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_object/macos-def:username" priority="1000" mode="M202"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_object/macos-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a pwpolicy_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a pwpolicy_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M202"/></axsl:template><axsl:template match="text()" priority="-1" mode="M202"/><axsl:template match="@*|node()" priority="-2" mode="M202"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M202"/></axsl:template>

<!--PATTERN pwpobjuserpass-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_object/macos-def:userpass" priority="1000" mode="M203"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_object/macos-def:userpass"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the userpass entity of a pwpolicy_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the userpass entity of a pwpolicy_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M203"/></axsl:template><axsl:template match="text()" priority="-1" mode="M203"/><axsl:template match="@*|node()" priority="-2" mode="M203"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M203"/></axsl:template>

<!--PATTERN pwpobjdirectory_node-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_object/macos-def:directory_node" priority="1000" mode="M204"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_object/macos-def:directory_node"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the directory_node entity of a pwpolicy_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the directory_node entity of a pwpolicy_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M204"/></axsl:template><axsl:template match="text()" priority="-1" mode="M204"/><axsl:template match="@*|node()" priority="-2" mode="M204"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M204"/></axsl:template>

<!--PATTERN pwpsteusername-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:username" priority="1000" mode="M205"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a pwpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a pwpolicy_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M205"/></axsl:template><axsl:template match="text()" priority="-1" mode="M205"/><axsl:template match="@*|node()" priority="-2" mode="M205"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M205"/></axsl:template>

<!--PATTERN pwpsteuserpass-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:userpass" priority="1000" mode="M206"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:userpass"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the userpass entity of a pwpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the userpass entity of a pwpolicy_state should be 'equals'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M206"/></axsl:template><axsl:template match="text()" priority="-1" mode="M206"/><axsl:template match="@*|node()" priority="-2" mode="M206"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M206"/></axsl:template>

<!--PATTERN pwpstedirectory_node-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:directory_node" priority="1000" mode="M207"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:directory_node"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the directory_node entity of a pwpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the directory_node entity of a pwpolicy_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M207"/></axsl:template><axsl:template match="text()" priority="-1" mode="M207"/><axsl:template match="@*|node()" priority="-2" mode="M207"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M207"/></axsl:template>

<!--PATTERN pwpstemaxChars-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:maxChars" priority="1000" mode="M208"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:maxChars"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the maxChars entity of a pwpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the maxChars entity of a pwpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M208"/></axsl:template><axsl:template match="text()" priority="-1" mode="M208"/><axsl:template match="@*|node()" priority="-2" mode="M208"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M208"/></axsl:template>

<!--PATTERN pwpstemaxFailedLoginAttempts-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:maxFailedLoginAttempts" priority="1000" mode="M209"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:maxFailedLoginAttempts"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the maxFailedLoginAttempts entity of a pwpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the maxFailedLoginAttempts entity of a pwpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M209"/></axsl:template><axsl:template match="text()" priority="-1" mode="M209"/><axsl:template match="@*|node()" priority="-2" mode="M209"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M209"/></axsl:template>

<!--PATTERN pwpsteminChars-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:minChars" priority="1000" mode="M210"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:minChars"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the minChars entity of a pwpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the minChars entity of a pwpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M210"/></axsl:template><axsl:template match="text()" priority="-1" mode="M210"/><axsl:template match="@*|node()" priority="-2" mode="M210"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M210"/></axsl:template>

<!--PATTERN pwpstepasswordCannotBeName-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:passwordCannotBeName" priority="1000" mode="M211"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:passwordCannotBeName"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the passwordCannotBeName entity of a pwpolicy_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the passwordCannotBeName entity of a pwpolicy_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M211"/></axsl:template><axsl:template match="text()" priority="-1" mode="M211"/><axsl:template match="@*|node()" priority="-2" mode="M211"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M211"/></axsl:template>

<!--PATTERN pwpsterequiresAlpha-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:requiresAlpha" priority="1000" mode="M212"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:requiresAlpha"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the requiresAlpha entity of a pwpolicy_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the requiresAlpha entity of a pwpolicy_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M212"/></axsl:template><axsl:template match="text()" priority="-1" mode="M212"/><axsl:template match="@*|node()" priority="-2" mode="M212"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M212"/></axsl:template>

<!--PATTERN pwpsterequiresNumeric-->


	<!--RULE -->
<axsl:template match="macos-def:pwpolicy_state/macos-def:requiresNumeric" priority="1000" mode="M213"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="macos-def:pwpolicy_state/macos-def:requiresNumeric"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the requiresNumeric entity of a pwpolicy_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the requiresNumeric entity of a pwpolicy_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M213"/></axsl:template><axsl:template match="text()" priority="-1" mode="M213"/><axsl:template match="@*|node()" priority="-2" mode="M213"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M213"/></axsl:template>

<!--PATTERN isastebits-->


	<!--RULE -->
<axsl:template match="sol-def:isainfo_state/sol-def:bits" priority="1000" mode="M214"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:isainfo_state/sol-def:bits"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the bits entity of an isainfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the bits entity of an isainfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M214"/></axsl:template><axsl:template match="text()" priority="-1" mode="M214"/><axsl:template match="@*|node()" priority="-2" mode="M214"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M214"/></axsl:template>

<!--PATTERN isastekernel_isa-->


	<!--RULE -->
<axsl:template match="sol-def:isainfo_state/sol-def:kernel_isa" priority="1000" mode="M215"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:isainfo_state/sol-def:kernel_isa"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the kernel_isa entity of an isainfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the kernel_isa entity of an isainfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M215"/></axsl:template><axsl:template match="text()" priority="-1" mode="M215"/><axsl:template match="@*|node()" priority="-2" mode="M215"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M215"/></axsl:template>

<!--PATTERN isasteapplication_isa-->


	<!--RULE -->
<axsl:template match="sol-def:isainfo_state/sol-def:application_isa" priority="1000" mode="M216"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:isainfo_state/sol-def:application_isa"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the application_isa entity of an isainfo_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the application_isa entity of an isainfo_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M216"/></axsl:template><axsl:template match="text()" priority="-1" mode="M216"/><axsl:template match="@*|node()" priority="-2" mode="M216"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M216"/></axsl:template>

<!--PATTERN packageobjpkginst-->


	<!--RULE -->
<axsl:template match="sol-def:package_object/sol-def:pkginst" priority="1000" mode="M217"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_object/sol-def:pkginst"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pkginst entity of a package_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pkginst entity of a package_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M217"/></axsl:template><axsl:template match="text()" priority="-1" mode="M217"/><axsl:template match="@*|node()" priority="-2" mode="M217"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M217"/></axsl:template>

<!--PATTERN packagestepkginst-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:pkginst" priority="1000" mode="M218"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:pkginst"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pkginst entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pkginst entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M218"/></axsl:template><axsl:template match="text()" priority="-1" mode="M218"/><axsl:template match="@*|node()" priority="-2" mode="M218"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M218"/></axsl:template>

<!--PATTERN packagestename-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:name" priority="1000" mode="M219"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M219"/></axsl:template><axsl:template match="text()" priority="-1" mode="M219"/><axsl:template match="@*|node()" priority="-2" mode="M219"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M219"/></axsl:template>

<!--PATTERN packagestecategory-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:category" priority="1000" mode="M220"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:category"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the category entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the category entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M220"/></axsl:template><axsl:template match="text()" priority="-1" mode="M220"/><axsl:template match="@*|node()" priority="-2" mode="M220"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M220"/></axsl:template>

<!--PATTERN packagesteversion-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:version" priority="1000" mode="M221"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M221"/></axsl:template><axsl:template match="text()" priority="-1" mode="M221"/><axsl:template match="@*|node()" priority="-2" mode="M221"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M221"/></axsl:template>

<!--PATTERN packagestevendor-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:vendor" priority="1000" mode="M222"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:vendor"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the vendor entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the vendor entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M222"/></axsl:template><axsl:template match="text()" priority="-1" mode="M222"/><axsl:template match="@*|node()" priority="-2" mode="M222"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M222"/></axsl:template>

<!--PATTERN packagestedescription-->


	<!--RULE -->
<axsl:template match="sol-def:package_state/sol-def:description" priority="1000" mode="M223"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:package_state/sol-def:description"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the description entity of a package_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the description entity of a package_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M223"/></axsl:template><axsl:template match="text()" priority="-1" mode="M223"/><axsl:template match="@*|node()" priority="-2" mode="M223"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M223"/></axsl:template>

<!--PATTERN patchobjbase-->


	<!--RULE -->
<axsl:template match="sol-def:patch_object/sol-def:base" priority="1000" mode="M224"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:patch_object/sol-def:base"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the base entity of a patch_object should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the base entity of a patch_object should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M224"/></axsl:template><axsl:template match="text()" priority="-1" mode="M224"/><axsl:template match="@*|node()" priority="-2" mode="M224"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M224"/></axsl:template>

<!--PATTERN patchstebase-->


	<!--RULE -->
<axsl:template match="sol-def:patch_state/sol-def:base" priority="1000" mode="M225"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:patch_state/sol-def:base"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the base entity of a patch_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the base entity of a patch_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M225"/></axsl:template><axsl:template match="text()" priority="-1" mode="M225"/><axsl:template match="@*|node()" priority="-2" mode="M225"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M225"/></axsl:template>

<!--PATTERN patchsteversion-->


	<!--RULE -->
<axsl:template match="sol-def:patch_state/sol-def:version" priority="1000" mode="M226"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="sol-def:patch_state/sol-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the version entity of a patch_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the version entity of a patch_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M226"/></axsl:template><axsl:template match="text()" priority="-1" mode="M226"/><axsl:template match="@*|node()" priority="-2" mode="M226"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M226"/></axsl:template>

<!--PATTERN unixfileobjpath-->


	<!--RULE -->
<axsl:template match="unix-def:file_object/unix-def:path" priority="1000" mode="M227"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_object/unix-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a file_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a file_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M227"/></axsl:template><axsl:template match="text()" priority="-1" mode="M227"/><axsl:template match="@*|node()" priority="-2" mode="M227"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M227"/></axsl:template>

<!--PATTERN unixfileobjfilename-->


	<!--RULE -->
<axsl:template match="unix-def:file_object/unix-def:filename" priority="1000" mode="M228"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_object/unix-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a file_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a file_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M228"/></axsl:template><axsl:template match="text()" priority="-1" mode="M228"/><axsl:template match="@*|node()" priority="-2" mode="M228"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M228"/></axsl:template>

<!--PATTERN unixfilestepath-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:path" priority="1000" mode="M229"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M229"/></axsl:template><axsl:template match="text()" priority="-1" mode="M229"/><axsl:template match="@*|node()" priority="-2" mode="M229"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M229"/></axsl:template>

<!--PATTERN unixfilestefilename-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:filename" priority="1000" mode="M230"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M230"/></axsl:template><axsl:template match="text()" priority="-1" mode="M230"/><axsl:template match="@*|node()" priority="-2" mode="M230"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M230"/></axsl:template>

<!--PATTERN unixfilestetype-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:type" priority="1000" mode="M231"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the type entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the type entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M231"/></axsl:template><axsl:template match="text()" priority="-1" mode="M231"/><axsl:template match="@*|node()" priority="-2" mode="M231"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M231"/></axsl:template>

<!--PATTERN unixfilestegroup_id-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:group_id" priority="1000" mode="M232"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:group_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the group_id entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the group_id entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M232"/></axsl:template><axsl:template match="text()" priority="-1" mode="M232"/><axsl:template match="@*|node()" priority="-2" mode="M232"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M232"/></axsl:template>

<!--PATTERN unixfilesteuser_id-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:user_id" priority="1000" mode="M233"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:user_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user_id entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user_id entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M233"/></axsl:template><axsl:template match="text()" priority="-1" mode="M233"/><axsl:template match="@*|node()" priority="-2" mode="M233"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M233"/></axsl:template>

<!--PATTERN unixfilestea_time-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:a_time" priority="1000" mode="M234"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:a_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the a_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the a_time entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M234"/></axsl:template><axsl:template match="text()" priority="-1" mode="M234"/><axsl:template match="@*|node()" priority="-2" mode="M234"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M234"/></axsl:template>

<!--PATTERN unixfilestec_time-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:c_time" priority="1000" mode="M235"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:c_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the c_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the c_time entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M235"/></axsl:template><axsl:template match="text()" priority="-1" mode="M235"/><axsl:template match="@*|node()" priority="-2" mode="M235"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M235"/></axsl:template>

<!--PATTERN unixfilestem_time-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:m_time" priority="1000" mode="M236"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:m_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the m_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the m_time entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M236"/></axsl:template><axsl:template match="text()" priority="-1" mode="M236"/><axsl:template match="@*|node()" priority="-2" mode="M236"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M236"/></axsl:template>

<!--PATTERN unixfilestesize-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:size" priority="1000" mode="M237"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:size"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the size entity of a file_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the size entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M237"/></axsl:template><axsl:template match="text()" priority="-1" mode="M237"/><axsl:template match="@*|node()" priority="-2" mode="M237"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M237"/></axsl:template>

<!--PATTERN unixfilestesuid-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:suid" priority="1000" mode="M238"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:suid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the suid entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the suid entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M238"/></axsl:template><axsl:template match="text()" priority="-1" mode="M238"/><axsl:template match="@*|node()" priority="-2" mode="M238"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M238"/></axsl:template>

<!--PATTERN unixfilestesgid-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:sgid" priority="1000" mode="M239"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:sgid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the sgid entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the sgid entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M239"/></axsl:template><axsl:template match="text()" priority="-1" mode="M239"/><axsl:template match="@*|node()" priority="-2" mode="M239"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M239"/></axsl:template>

<!--PATTERN unixfilestesticky-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:sticky" priority="1000" mode="M240"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:sticky"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the sticky entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the sticky entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M240"/></axsl:template><axsl:template match="text()" priority="-1" mode="M240"/><axsl:template match="@*|node()" priority="-2" mode="M240"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M240"/></axsl:template>

<!--PATTERN unixfilesteuread-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:uread" priority="1000" mode="M241"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:uread"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the uread entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the uread entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M241"/></axsl:template><axsl:template match="text()" priority="-1" mode="M241"/><axsl:template match="@*|node()" priority="-2" mode="M241"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M241"/></axsl:template>

<!--PATTERN unixfilesteuwrite-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:uwrite" priority="1000" mode="M242"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:uwrite"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the uwrite entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the uwrite entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M242"/></axsl:template><axsl:template match="text()" priority="-1" mode="M242"/><axsl:template match="@*|node()" priority="-2" mode="M242"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M242"/></axsl:template>

<!--PATTERN unixfilesteuexec-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:uexec" priority="1000" mode="M243"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:uexec"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the uexec entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the uexec entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M243"/></axsl:template><axsl:template match="text()" priority="-1" mode="M243"/><axsl:template match="@*|node()" priority="-2" mode="M243"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M243"/></axsl:template>

<!--PATTERN unixfilestegread-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:gread" priority="1000" mode="M244"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:gread"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gread entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gread entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M244"/></axsl:template><axsl:template match="text()" priority="-1" mode="M244"/><axsl:template match="@*|node()" priority="-2" mode="M244"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M244"/></axsl:template>

<!--PATTERN unixfilestegwrite-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:gwrite" priority="1000" mode="M245"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:gwrite"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gwrite entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gwrite entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M245"/></axsl:template><axsl:template match="text()" priority="-1" mode="M245"/><axsl:template match="@*|node()" priority="-2" mode="M245"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M245"/></axsl:template>

<!--PATTERN unixfilestegexec-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:gexec" priority="1000" mode="M246"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:gexec"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gexec entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gexec entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M246"/></axsl:template><axsl:template match="text()" priority="-1" mode="M246"/><axsl:template match="@*|node()" priority="-2" mode="M246"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M246"/></axsl:template>

<!--PATTERN unixfilesteoread-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:oread" priority="1000" mode="M247"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:oread"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the oread entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the oread entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M247"/></axsl:template><axsl:template match="text()" priority="-1" mode="M247"/><axsl:template match="@*|node()" priority="-2" mode="M247"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M247"/></axsl:template>

<!--PATTERN unixfilesteowrite-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:owrite" priority="1000" mode="M248"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:owrite"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the owrite entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the owrite entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M248"/></axsl:template><axsl:template match="text()" priority="-1" mode="M248"/><axsl:template match="@*|node()" priority="-2" mode="M248"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M248"/></axsl:template>

<!--PATTERN unixfilesteoexec-->


	<!--RULE -->
<axsl:template match="unix-def:file_state/unix-def:oexec" priority="1000" mode="M249"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_state/unix-def:oexec"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the oexec entity of a file_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the oexec entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M249"/></axsl:template><axsl:template match="text()" priority="-1" mode="M249"/><axsl:template match="@*|node()" priority="-2" mode="M249"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M249"/></axsl:template>

<!--PATTERN inetdobjprotocol-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_object/unix-def:protocol" priority="1000" mode="M250"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_object/unix-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an inetd_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an inetd_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M250"/></axsl:template><axsl:template match="text()" priority="-1" mode="M250"/><axsl:template match="@*|node()" priority="-2" mode="M250"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M250"/></axsl:template>

<!--PATTERN inetdobjservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_object/unix-def:service_name" priority="1000" mode="M251"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_object/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of an inetd_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of an inetd_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M251"/></axsl:template><axsl:template match="text()" priority="-1" mode="M251"/><axsl:template match="@*|node()" priority="-2" mode="M251"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M251"/></axsl:template>

<!--PATTERN inetdsteprotocol-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:protocol" priority="1000" mode="M252"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an inetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M252"/></axsl:template><axsl:template match="text()" priority="-1" mode="M252"/><axsl:template match="@*|node()" priority="-2" mode="M252"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M252"/></axsl:template>

<!--PATTERN inetdsteservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:service_name" priority="1000" mode="M253"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of an inetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M253"/></axsl:template><axsl:template match="text()" priority="-1" mode="M253"/><axsl:template match="@*|node()" priority="-2" mode="M253"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M253"/></axsl:template>

<!--PATTERN inetdsteserver_program-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:server_program" priority="1000" mode="M254"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:server_program"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the server_program entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the server_program entity of an inetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M254"/></axsl:template><axsl:template match="text()" priority="-1" mode="M254"/><axsl:template match="@*|node()" priority="-2" mode="M254"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M254"/></axsl:template>

<!--PATTERN inetdsteserver_arguments-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:server_arguments" priority="1000" mode="M255"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:server_arguments"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the server_arguments entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the server_arguments entity of an inetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M255"/></axsl:template><axsl:template match="text()" priority="-1" mode="M255"/><axsl:template match="@*|node()" priority="-2" mode="M255"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M255"/></axsl:template>

<!--PATTERN inetdsteendpoint_type-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:endpoint_type" priority="1000" mode="M256"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:endpoint_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the endpoint_type entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the endpoint_type entity of an inetd_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M256"/></axsl:template><axsl:template match="text()" priority="-1" mode="M256"/><axsl:template match="@*|node()" priority="-2" mode="M256"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M256"/></axsl:template>

<!--PATTERN inetdsteexec_as_user-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:exec_as_user" priority="1000" mode="M257"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:exec_as_user"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exec_as_user entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exec_as_user entity of an inetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M257"/></axsl:template><axsl:template match="text()" priority="-1" mode="M257"/><axsl:template match="@*|node()" priority="-2" mode="M257"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M257"/></axsl:template>

<!--PATTERN inetdstewait_status-->


	<!--RULE -->
<axsl:template match="unix-def:inetd_state/unix-def:wait_status" priority="1000" mode="M258"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:inetd_state/unix-def:wait_status"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the wait_status entity of an inetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the wait_status entity of an inetd_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M258"/></axsl:template><axsl:template match="text()" priority="-1" mode="M258"/><axsl:template match="@*|node()" priority="-2" mode="M258"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M258"/></axsl:template>

<!--PATTERN unixinterfaceobjname-->


	<!--RULE -->
<axsl:template match="unix-def:interface_object/unix-def:name" priority="1000" mode="M259"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_object/unix-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an interface_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an interface_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M259"/></axsl:template><axsl:template match="text()" priority="-1" mode="M259"/><axsl:template match="@*|node()" priority="-2" mode="M259"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M259"/></axsl:template>

<!--PATTERN unixinterfacestename-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:name" priority="1000" mode="M260"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the name entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the name entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M260"/></axsl:template><axsl:template match="text()" priority="-1" mode="M260"/><axsl:template match="@*|node()" priority="-2" mode="M260"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M260"/></axsl:template>

<!--PATTERN unixinterfacestehardware_addr-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:hardware_addr" priority="1000" mode="M261"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:hardware_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the hardware_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the hardware_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M261"/></axsl:template><axsl:template match="text()" priority="-1" mode="M261"/><axsl:template match="@*|node()" priority="-2" mode="M261"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M261"/></axsl:template>

<!--PATTERN unixinterfacesteinet_addr-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:inet_addr" priority="1000" mode="M262"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:inet_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the inet_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the inet_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M262"/></axsl:template><axsl:template match="text()" priority="-1" mode="M262"/><axsl:template match="@*|node()" priority="-2" mode="M262"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M262"/></axsl:template>

<!--PATTERN unixinterfacestebroadcast_addr-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:broadcast_addr" priority="1000" mode="M263"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:broadcast_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the broadcast_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the broadcast_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M263"/></axsl:template><axsl:template match="text()" priority="-1" mode="M263"/><axsl:template match="@*|node()" priority="-2" mode="M263"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M263"/></axsl:template>

<!--PATTERN unixinterfacestenetmask-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:netmask" priority="1000" mode="M264"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:netmask"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the netmask entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the netmask entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M264"/></axsl:template><axsl:template match="text()" priority="-1" mode="M264"/><axsl:template match="@*|node()" priority="-2" mode="M264"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M264"/></axsl:template>

<!--PATTERN unixinterfacesteflag-->


	<!--RULE -->
<axsl:template match="unix-def:interface_state/unix-def:flag" priority="1000" mode="M265"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:interface_state/unix-def:flag"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for a flag entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the flag entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M265"/></axsl:template><axsl:template match="text()" priority="-1" mode="M265"/><axsl:template match="@*|node()" priority="-2" mode="M265"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M265"/></axsl:template>

<!--PATTERN passwordobjusername-->


	<!--RULE -->
<axsl:template match="unix-def:password_object/unix-def:username" priority="1000" mode="M266"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:password_object/unix-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a password_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a password_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M266"/></axsl:template><axsl:template match="text()" priority="-1" mode="M266"/><axsl:template match="@*|node()" priority="-2" mode="M266"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M266"/></axsl:template>

<!--PATTERN passwordsteusername-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:username" priority="1000" mode="M267"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M267"/></axsl:template><axsl:template match="text()" priority="-1" mode="M267"/><axsl:template match="@*|node()" priority="-2" mode="M267"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M267"/></axsl:template>

<!--PATTERN passwordstepassword-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:password" priority="1000" mode="M268"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:password"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the password entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the password entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M268"/></axsl:template><axsl:template match="text()" priority="-1" mode="M268"/><axsl:template match="@*|node()" priority="-2" mode="M268"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M268"/></axsl:template>

<!--PATTERN passwordsteuser_id-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:user_id" priority="1000" mode="M269"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:user_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user_id entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user_id entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M269"/></axsl:template><axsl:template match="text()" priority="-1" mode="M269"/><axsl:template match="@*|node()" priority="-2" mode="M269"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M269"/></axsl:template>

<!--PATTERN passwordstegroup_id-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:group_id" priority="1000" mode="M270"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:group_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the group_id entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the group_id entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M270"/></axsl:template><axsl:template match="text()" priority="-1" mode="M270"/><axsl:template match="@*|node()" priority="-2" mode="M270"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M270"/></axsl:template>

<!--PATTERN passwordstegcos-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:gcos" priority="1000" mode="M271"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:gcos"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the gcos entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the gcos entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M271"/></axsl:template><axsl:template match="text()" priority="-1" mode="M271"/><axsl:template match="@*|node()" priority="-2" mode="M271"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M271"/></axsl:template>

<!--PATTERN passwordstehome_dir-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:home_dir" priority="1000" mode="M272"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:home_dir"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the home_dir entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the home_dir entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M272"/></axsl:template><axsl:template match="text()" priority="-1" mode="M272"/><axsl:template match="@*|node()" priority="-2" mode="M272"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M272"/></axsl:template>

<!--PATTERN passwordstelogin_shell-->


	<!--RULE -->
<axsl:template match="unix-def:package_state/unix-def:login_shell" priority="1000" mode="M273"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:package_state/unix-def:login_shell"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the login_shell entity of a password_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the login_shell entity of a password_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M273"/></axsl:template><axsl:template match="text()" priority="-1" mode="M273"/><axsl:template match="@*|node()" priority="-2" mode="M273"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M273"/></axsl:template>

<!--PATTERN unixprocessobjcommand-->


	<!--RULE -->
<axsl:template match="unix-def:process_object/unix-def:command" priority="1000" mode="M274"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_object/unix-def:command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the command entity of a process_object be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the command entity of a process_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M274"/></axsl:template><axsl:template match="text()" priority="-1" mode="M274"/><axsl:template match="@*|node()" priority="-2" mode="M274"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M274"/></axsl:template>

<!--PATTERN unixprocessstecommand-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:command" priority="1000" mode="M275"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:command"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the command entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the command entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M275"/></axsl:template><axsl:template match="text()" priority="-1" mode="M275"/><axsl:template match="@*|node()" priority="-2" mode="M275"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M275"/></axsl:template>

<!--PATTERN unixprocesssteexec_time-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:exec_time" priority="1000" mode="M276"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:exec_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exec_time entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exec_time entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M276"/></axsl:template><axsl:template match="text()" priority="-1" mode="M276"/><axsl:template match="@*|node()" priority="-2" mode="M276"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M276"/></axsl:template>

<!--PATTERN unixprocessstepid-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:pid" priority="1000" mode="M277"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:pid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the pid entity of a process_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the pid entity of a process_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M277"/></axsl:template><axsl:template match="text()" priority="-1" mode="M277"/><axsl:template match="@*|node()" priority="-2" mode="M277"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M277"/></axsl:template>

<!--PATTERN unixprocesssteppid-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:ppid" priority="1000" mode="M278"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:ppid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the ppid entity of a process_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the ppid entity of a process_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M278"/></axsl:template><axsl:template match="text()" priority="-1" mode="M278"/><axsl:template match="@*|node()" priority="-2" mode="M278"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M278"/></axsl:template>

<!--PATTERN unixprocessstepriority-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:priority" priority="1000" mode="M279"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:priority"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the priority entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the priority entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M279"/></axsl:template><axsl:template match="text()" priority="-1" mode="M279"/><axsl:template match="@*|node()" priority="-2" mode="M279"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M279"/></axsl:template>

<!--PATTERN unixprocessstescheduling_class-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:scheduling_class" priority="1000" mode="M280"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:scheduling_class"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the scheduling_class entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the scheduling_class entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M280"/></axsl:template><axsl:template match="text()" priority="-1" mode="M280"/><axsl:template match="@*|node()" priority="-2" mode="M280"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M280"/></axsl:template>

<!--PATTERN unixprocessstestart_time-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:start_time" priority="1000" mode="M281"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:start_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the start_time entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the start_time entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M281"/></axsl:template><axsl:template match="text()" priority="-1" mode="M281"/><axsl:template match="@*|node()" priority="-2" mode="M281"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M281"/></axsl:template>

<!--PATTERN unixprocessstetty-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:tty" priority="1000" mode="M282"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:tty"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the tty entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the tty entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M282"/></axsl:template><axsl:template match="text()" priority="-1" mode="M282"/><axsl:template match="@*|node()" priority="-2" mode="M282"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M282"/></axsl:template>

<!--PATTERN unixprocesssteuser_id-->


	<!--RULE -->
<axsl:template match="unix-def:process_state/unix-def:user_id" priority="1000" mode="M283"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:process_state/unix-def:user_id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user_id entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user_id entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M283"/></axsl:template><axsl:template match="text()" priority="-1" mode="M283"/><axsl:template match="@*|node()" priority="-2" mode="M283"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M283"/></axsl:template>

<!--PATTERN unixrlobjservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_object/unix-def:service_name" priority="1000" mode="M284"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_object/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of a runlevel_object be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of a runlevel_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M284"/></axsl:template><axsl:template match="text()" priority="-1" mode="M284"/><axsl:template match="@*|node()" priority="-2" mode="M284"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M284"/></axsl:template>

<!--PATTERN unixrlobjrunlevel-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_object/unix-def:runlevel" priority="1000" mode="M285"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_object/unix-def:runlevel"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the runlevel entity of a runlevel_object be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the runlevel entity of a runlevel_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M285"/></axsl:template><axsl:template match="text()" priority="-1" mode="M285"/><axsl:template match="@*|node()" priority="-2" mode="M285"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M285"/></axsl:template>

<!--PATTERN unixrlsteservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_state/unix-def:service_name" priority="1000" mode="M286"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_state/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of a runlevel_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of a runlevel_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M286"/></axsl:template><axsl:template match="text()" priority="-1" mode="M286"/><axsl:template match="@*|node()" priority="-2" mode="M286"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M286"/></axsl:template>

<!--PATTERN unixrlsterunlevel-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_state/unix-def:runlevel" priority="1000" mode="M287"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_state/unix-def:runlevel"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the runlevel entity of a runlevel_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the runlevel entity of a runlevel_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M287"/></axsl:template><axsl:template match="text()" priority="-1" mode="M287"/><axsl:template match="@*|node()" priority="-2" mode="M287"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M287"/></axsl:template>

<!--PATTERN unixrlstestart-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_state/unix-def:start" priority="1000" mode="M288"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_state/unix-def:start"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the start entity of a runlevel_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the start entity of a runlevel_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M288"/></axsl:template><axsl:template match="text()" priority="-1" mode="M288"/><axsl:template match="@*|node()" priority="-2" mode="M288"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M288"/></axsl:template>

<!--PATTERN unixrlstekill-->


	<!--RULE -->
<axsl:template match="unix-def:runlevel_state/unix-def:kill" priority="1000" mode="M289"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:runlevel_state/unix-def:kill"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the kill entity of a runlevel_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the kill entity of a runlevel_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M289"/></axsl:template><axsl:template match="text()" priority="-1" mode="M289"/><axsl:template match="@*|node()" priority="-2" mode="M289"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M289"/></axsl:template>

<!--PATTERN sccsobjpath-->


	<!--RULE -->
<axsl:template match="unix-def:file_object/unix-def:path" priority="1000" mode="M290"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_object/unix-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a sccs_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a sccs_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M290"/></axsl:template><axsl:template match="text()" priority="-1" mode="M290"/><axsl:template match="@*|node()" priority="-2" mode="M290"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M290"/></axsl:template>

<!--PATTERN sccsobjfilename-->


	<!--RULE -->
<axsl:template match="unix-def:file_object/unix-def:filename" priority="1000" mode="M291"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:file_object/unix-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a sccs_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a sccs_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M291"/></axsl:template><axsl:template match="text()" priority="-1" mode="M291"/><axsl:template match="@*|node()" priority="-2" mode="M291"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M291"/></axsl:template>

<!--PATTERN sccsstepath-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:path" priority="1000" mode="M292"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the path entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the path entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M292"/></axsl:template><axsl:template match="text()" priority="-1" mode="M292"/><axsl:template match="@*|node()" priority="-2" mode="M292"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M292"/></axsl:template>

<!--PATTERN sccsstefilename-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:filename" priority="1000" mode="M293"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the filename entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the filename entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M293"/></axsl:template><axsl:template match="text()" priority="-1" mode="M293"/><axsl:template match="@*|node()" priority="-2" mode="M293"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M293"/></axsl:template>

<!--PATTERN sccsstemodule_name-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:module_name" priority="1000" mode="M294"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:module_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the module_name entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the module_name entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M294"/></axsl:template><axsl:template match="text()" priority="-1" mode="M294"/><axsl:template match="@*|node()" priority="-2" mode="M294"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M294"/></axsl:template>

<!--PATTERN sccsstemodule_type-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:module_type" priority="1000" mode="M295"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:module_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the module_type entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the module_type entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M295"/></axsl:template><axsl:template match="text()" priority="-1" mode="M295"/><axsl:template match="@*|node()" priority="-2" mode="M295"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M295"/></axsl:template>

<!--PATTERN sccssterelease-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:release" priority="1000" mode="M296"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:release"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the release entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the release entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M296"/></axsl:template><axsl:template match="text()" priority="-1" mode="M296"/><axsl:template match="@*|node()" priority="-2" mode="M296"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M296"/></axsl:template>

<!--PATTERN sccsstelevel-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:level" priority="1000" mode="M297"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:level"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the level entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the level entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M297"/></axsl:template><axsl:template match="text()" priority="-1" mode="M297"/><axsl:template match="@*|node()" priority="-2" mode="M297"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M297"/></axsl:template>

<!--PATTERN sccsstebranch-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:branch" priority="1000" mode="M298"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:branch"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the branch entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the branch entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M298"/></axsl:template><axsl:template match="text()" priority="-1" mode="M298"/><axsl:template match="@*|node()" priority="-2" mode="M298"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M298"/></axsl:template>

<!--PATTERN sccsstesequence-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:sequence" priority="1000" mode="M299"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:sequence"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the sequence entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the sequence entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M299"/></axsl:template><axsl:template match="text()" priority="-1" mode="M299"/><axsl:template match="@*|node()" priority="-2" mode="M299"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M299"/></axsl:template>

<!--PATTERN sccsstewhat_string-->


	<!--RULE -->
<axsl:template match="unix-def:sccs_state/unix-def:what_string" priority="1000" mode="M300"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:sccs_state/unix-def:what_string"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the what_string entity of a sccs_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the what_string entity of a sccs_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M300"/></axsl:template><axsl:template match="text()" priority="-1" mode="M300"/><axsl:template match="@*|node()" priority="-2" mode="M300"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M300"/></axsl:template>

<!--PATTERN shadowobjusername-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_object/unix-def:username" priority="1000" mode="M301"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_object/unix-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a shadow_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a shadow_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M301"/></axsl:template><axsl:template match="text()" priority="-1" mode="M301"/><axsl:template match="@*|node()" priority="-2" mode="M301"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M301"/></axsl:template>

<!--PATTERN shadowsteusername-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:username" priority="1000" mode="M302"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:username"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the username entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the username entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M302"/></axsl:template><axsl:template match="text()" priority="-1" mode="M302"/><axsl:template match="@*|node()" priority="-2" mode="M302"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M302"/></axsl:template>

<!--PATTERN shadowstepassword-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:password" priority="1000" mode="M303"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:password"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the password entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the password entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M303"/></axsl:template><axsl:template match="text()" priority="-1" mode="M303"/><axsl:template match="@*|node()" priority="-2" mode="M303"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M303"/></axsl:template>

<!--PATTERN shadowstechg_lst-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:chg_lst" priority="1000" mode="M304"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:chg_lst"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the chg_lst entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the chg_lst entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M304"/></axsl:template><axsl:template match="text()" priority="-1" mode="M304"/><axsl:template match="@*|node()" priority="-2" mode="M304"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M304"/></axsl:template>

<!--PATTERN shadowstechg_allow-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:chg_allow" priority="1000" mode="M305"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:chg_allow"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the chg_allow entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the chg_allow entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M305"/></axsl:template><axsl:template match="text()" priority="-1" mode="M305"/><axsl:template match="@*|node()" priority="-2" mode="M305"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M305"/></axsl:template>

<!--PATTERN shadowstechg_req-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:chg_req" priority="1000" mode="M306"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:chg_req"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the chg_req entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the chg_req entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M306"/></axsl:template><axsl:template match="text()" priority="-1" mode="M306"/><axsl:template match="@*|node()" priority="-2" mode="M306"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M306"/></axsl:template>

<!--PATTERN shadowsteexp_warn-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:exp_warn" priority="1000" mode="M307"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:exp_warn"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exp_warn entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exp_warn entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M307"/></axsl:template><axsl:template match="text()" priority="-1" mode="M307"/><axsl:template match="@*|node()" priority="-2" mode="M307"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M307"/></axsl:template>

<!--PATTERN shadowsteexp_inact-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:exp_inact" priority="1000" mode="M308"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:exp_inact"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exp_inact entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exp_inact entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M308"/></axsl:template><axsl:template match="text()" priority="-1" mode="M308"/><axsl:template match="@*|node()" priority="-2" mode="M308"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M308"/></axsl:template>

<!--PATTERN shadowsteexp_date-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:exp_date" priority="1000" mode="M309"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:exp_date"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the exp_date entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the exp_date entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M309"/></axsl:template><axsl:template match="text()" priority="-1" mode="M309"/><axsl:template match="@*|node()" priority="-2" mode="M309"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M309"/></axsl:template>

<!--PATTERN shadowsteflag-->


	<!--RULE -->
<axsl:template match="unix-def:shadow_state/unix-def:flag" priority="1000" mode="M310"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:shadow_state/unix-def:flag"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the flag entity of a shadow_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the flag entity of a shadow_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M310"/></axsl:template><axsl:template match="text()" priority="-1" mode="M310"/><axsl:template match="@*|node()" priority="-2" mode="M310"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M310"/></axsl:template>

<!--PATTERN unamestemachine_class-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:machine_class" priority="1000" mode="M311"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:machine_class"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the machine_class entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the machine_class entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M311"/></axsl:template><axsl:template match="text()" priority="-1" mode="M311"/><axsl:template match="@*|node()" priority="-2" mode="M311"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M311"/></axsl:template>

<!--PATTERN unamestenode_name-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:node_name" priority="1000" mode="M312"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:node_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the node_name entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the node_name entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M312"/></axsl:template><axsl:template match="text()" priority="-1" mode="M312"/><axsl:template match="@*|node()" priority="-2" mode="M312"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M312"/></axsl:template>

<!--PATTERN unamesteos_name-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:os_name" priority="1000" mode="M313"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:os_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the os_name entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the os_name entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M313"/></axsl:template><axsl:template match="text()" priority="-1" mode="M313"/><axsl:template match="@*|node()" priority="-2" mode="M313"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M313"/></axsl:template>

<!--PATTERN unamesteos_release-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:os_release" priority="1000" mode="M314"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:os_release"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the os_release entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the os_release entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M314"/></axsl:template><axsl:template match="text()" priority="-1" mode="M314"/><axsl:template match="@*|node()" priority="-2" mode="M314"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M314"/></axsl:template>

<!--PATTERN unamesteos_version-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:os_version" priority="1000" mode="M315"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:os_version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the os_version entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the os_version entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M315"/></axsl:template><axsl:template match="text()" priority="-1" mode="M315"/><axsl:template match="@*|node()" priority="-2" mode="M315"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M315"/></axsl:template>

<!--PATTERN unamesteprocessor_type-->


	<!--RULE -->
<axsl:template match="unix-def:uname_state/unix-def:processor_type" priority="1000" mode="M316"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:uname_state/unix-def:processor_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the processor_type entity of a uname_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the processor_type entity of a uname_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M316"/></axsl:template><axsl:template match="text()" priority="-1" mode="M316"/><axsl:template match="@*|node()" priority="-2" mode="M316"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M316"/></axsl:template>

<!--PATTERN xinetdobjprotocol-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_object/unix-def:protocol" priority="1000" mode="M317"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_object/unix-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an xinetd_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an xinetd_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M317"/></axsl:template><axsl:template match="text()" priority="-1" mode="M317"/><axsl:template match="@*|node()" priority="-2" mode="M317"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M317"/></axsl:template>

<!--PATTERN xinetdobjservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_object/unix-def:service_name" priority="1000" mode="M318"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_object/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of an xinetd_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of an xinetd_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M318"/></axsl:template><axsl:template match="text()" priority="-1" mode="M318"/><axsl:template match="@*|node()" priority="-2" mode="M318"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M318"/></axsl:template>

<!--PATTERN xinetdsteprotocol-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:protocol" priority="1000" mode="M319"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the protocol entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the protocol entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M319"/></axsl:template><axsl:template match="text()" priority="-1" mode="M319"/><axsl:template match="@*|node()" priority="-2" mode="M319"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M319"/></axsl:template>

<!--PATTERN xinetdsteservice_name-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:service_name" priority="1000" mode="M320"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:service_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the service_name entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the service_name entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M320"/></axsl:template><axsl:template match="text()" priority="-1" mode="M320"/><axsl:template match="@*|node()" priority="-2" mode="M320"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M320"/></axsl:template>

<!--PATTERN xinetdsteflags-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:flags" priority="1000" mode="M321"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:flags"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the flags entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the flags entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M321"/></axsl:template><axsl:template match="text()" priority="-1" mode="M321"/><axsl:template match="@*|node()" priority="-2" mode="M321"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M321"/></axsl:template>

<!--PATTERN xinetdstenoaccess-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:no_access" priority="1000" mode="M322"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:no_access"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the no_access entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the no_access entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M322"/></axsl:template><axsl:template match="text()" priority="-1" mode="M322"/><axsl:template match="@*|node()" priority="-2" mode="M322"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M322"/></axsl:template>

<!--PATTERN xinetdsteonlyfrom-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:only_from" priority="1000" mode="M323"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:only_from"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the only_from entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the only_from entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M323"/></axsl:template><axsl:template match="text()" priority="-1" mode="M323"/><axsl:template match="@*|node()" priority="-2" mode="M323"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M323"/></axsl:template>

<!--PATTERN xinetdsteport-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:port" priority="1000" mode="M324"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the port entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the port entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M324"/></axsl:template><axsl:template match="text()" priority="-1" mode="M324"/><axsl:template match="@*|node()" priority="-2" mode="M324"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M324"/></axsl:template>

<!--PATTERN xinetdsteserver-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:server" priority="1000" mode="M325"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:server"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the server entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the server entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M325"/></axsl:template><axsl:template match="text()" priority="-1" mode="M325"/><axsl:template match="@*|node()" priority="-2" mode="M325"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M325"/></axsl:template>

<!--PATTERN xinetdsteserverarguments-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:server_arguments" priority="1000" mode="M326"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:server_arguments"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the server_arguments entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the server_arguments entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M326"/></axsl:template><axsl:template match="text()" priority="-1" mode="M326"/><axsl:template match="@*|node()" priority="-2" mode="M326"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M326"/></axsl:template>

<!--PATTERN xinetdstesockettype-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:socket_type" priority="1000" mode="M327"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:socket_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the socket_type entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the socket_type entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M327"/></axsl:template><axsl:template match="text()" priority="-1" mode="M327"/><axsl:template match="@*|node()" priority="-2" mode="M327"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M327"/></axsl:template>

<!--PATTERN xinetdstetype-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:type" priority="1000" mode="M328"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the type entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the type entity of an xinetd_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M328"/></axsl:template><axsl:template match="text()" priority="-1" mode="M328"/><axsl:template match="@*|node()" priority="-2" mode="M328"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M328"/></axsl:template>

<!--PATTERN xinetdsteuser-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:user" priority="1000" mode="M329"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:user"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the user entity of an xinetd_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the user entity of an xinetd_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M329"/></axsl:template><axsl:template match="text()" priority="-1" mode="M329"/><axsl:template match="@*|node()" priority="-2" mode="M329"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M329"/></axsl:template>

<!--PATTERN xinetdstewait-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:wait" priority="1000" mode="M330"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:wait"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the wait entity of an xinetd_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the wait entity of an xinetd should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M330"/></axsl:template><axsl:template match="text()" priority="-1" mode="M330"/><axsl:template match="@*|node()" priority="-2" mode="M330"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M330"/></axsl:template>

<!--PATTERN xinetdstedisabled-->


	<!--RULE -->
<axsl:template match="unix-def:xinetd_state/unix-def:disabled" priority="1000" mode="M331"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="unix-def:xinetd_state/unix-def:disabled"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - datatype attribute for the disabled entity of an xinetd_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text> - operation attribute for the disabled entity of an xinetd should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M331"/></axsl:template><axsl:template match="text()" priority="-1" mode="M331"/><axsl:template match="@*|node()" priority="-2" mode="M331"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M331"/></axsl:template>

<!--PATTERN affected_platform-->


	<!--RULE -->
<axsl:template match="oval-def:affected[@family='windows']" priority="1000" mode="M332"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="oval-def:affected[@family='windows']"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="oval-def:platform='Microsoft Windows 95' or oval-def:platform='Microsoft Windows 98' or oval-def:platform='Microsoft Windows ME' or oval-def:platform='Microsoft Windows NT' or oval-def:platform='Microsoft Windows 2000' or oval-def:platform='Microsoft Windows XP' or oval-def:platform='Microsoft Windows Server 2003'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="oval-def:platform='Microsoft Windows 95' or oval-def:platform='Microsoft Windows 98' or oval-def:platform='Microsoft Windows ME' or oval-def:platform='Microsoft Windows NT' or oval-def:platform='Microsoft Windows 2000' or oval-def:platform='Microsoft Windows XP' or oval-def:platform='Microsoft Windows Server 2003'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
						 - the value "" found in platform element as part of the affected element is not a valid windows platform.</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M332"/></axsl:template><axsl:template match="text()" priority="-1" mode="M332"/><axsl:template match="@*|node()" priority="-2" mode="M332"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M332"/></axsl:template>

<!--PATTERN attst-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_test/win-def:object" priority="1001" mode="M333"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:accesstoken_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:accesstoken_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of an accesstoken_test must reference an accesstoken_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M333"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:accesstoken_test/win-def:state" priority="1000" mode="M333"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:accesstoken_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:accesstoken_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of an accesstoken_test must reference an accesstoken_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M333"/></axsl:template><axsl:template match="text()" priority="-1" mode="M333"/><axsl:template match="@*|node()" priority="-2" mode="M333"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M333"/></axsl:template>

<!--PATTERN atobjsecurity_principle-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_object/win-def:security_principle" priority="1000" mode="M334"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_object/win-def:security_principle"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the security_principle entity of an accesstoken_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the security_principle entity of an accesstoken_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M334"/></axsl:template><axsl:template match="text()" priority="-1" mode="M334"/><axsl:template match="@*|node()" priority="-2" mode="M334"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M334"/></axsl:template>

<!--PATTERN atstesecurity_principle-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:security_principle" priority="1000" mode="M335"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:security_principle"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the security_principle entity of an accesstoken_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the security_principle entity of an accesstoken_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M335"/></axsl:template><axsl:template match="text()" priority="-1" mode="M335"/><axsl:template match="@*|node()" priority="-2" mode="M335"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M335"/></axsl:template>

<!--PATTERN atsteseassignprimarytokenprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seassignprimarytokenprivilege" priority="1000" mode="M336"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seassignprimarytokenprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seassignprimarytokenprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seassignprimarytokenprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M336"/></axsl:template><axsl:template match="text()" priority="-1" mode="M336"/><axsl:template match="@*|node()" priority="-2" mode="M336"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M336"/></axsl:template>

<!--PATTERN atsteseauditprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seauditprivilege" priority="1000" mode="M337"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seauditprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seauditprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seauditprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M337"/></axsl:template><axsl:template match="text()" priority="-1" mode="M337"/><axsl:template match="@*|node()" priority="-2" mode="M337"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M337"/></axsl:template>

<!--PATTERN atstesebackupprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sebackupprivilege" priority="1000" mode="M338"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sebackupprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sebackupprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sebackupprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M338"/></axsl:template><axsl:template match="text()" priority="-1" mode="M338"/><axsl:template match="@*|node()" priority="-2" mode="M338"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M338"/></axsl:template>

<!--PATTERN atstesechangenotifyprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sechangenotifyprivilege" priority="1000" mode="M339"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sechangenotifyprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sechangenotifyprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sechangenotifyprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M339"/></axsl:template><axsl:template match="text()" priority="-1" mode="M339"/><axsl:template match="@*|node()" priority="-2" mode="M339"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M339"/></axsl:template>

<!--PATTERN atstesecreateglobalprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:secreateglobalprivilege" priority="1000" mode="M340"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:secreateglobalprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the secreateglobalprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the secreateglobalprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M340"/></axsl:template><axsl:template match="text()" priority="-1" mode="M340"/><axsl:template match="@*|node()" priority="-2" mode="M340"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M340"/></axsl:template>

<!--PATTERN atstesecreatepagefileprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:secreatepagefileprivilege" priority="1000" mode="M341"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:secreatepagefileprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the secreatepagefileprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the secreatepagefileprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M341"/></axsl:template><axsl:template match="text()" priority="-1" mode="M341"/><axsl:template match="@*|node()" priority="-2" mode="M341"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M341"/></axsl:template>

<!--PATTERN atstesecreatepermanentprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:secreatepermanentprivilege" priority="1000" mode="M342"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:secreatepermanentprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the secreatepermanentprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for thesecreatepermanentprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M342"/></axsl:template><axsl:template match="text()" priority="-1" mode="M342"/><axsl:template match="@*|node()" priority="-2" mode="M342"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M342"/></axsl:template>

<!--PATTERN atstesecreatetokenprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:secreatetokenprivilege" priority="1000" mode="M343"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:secreatetokenprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the secreatetokenprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the secreatetokenprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M343"/></axsl:template><axsl:template match="text()" priority="-1" mode="M343"/><axsl:template match="@*|node()" priority="-2" mode="M343"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M343"/></axsl:template>

<!--PATTERN atstesedebugprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedebugprivilege" priority="1000" mode="M344"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedebugprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedebugprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedebugprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M344"/></axsl:template><axsl:template match="text()" priority="-1" mode="M344"/><axsl:template match="@*|node()" priority="-2" mode="M344"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M344"/></axsl:template>

<!--PATTERN atsteseenabledelegationprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seenabledelegationprivilege" priority="1000" mode="M345"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seenabledelegationprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seenabledelegationprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seenabledelegationprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M345"/></axsl:template><axsl:template match="text()" priority="-1" mode="M345"/><axsl:template match="@*|node()" priority="-2" mode="M345"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M345"/></axsl:template>

<!--PATTERN atsteseimpersonateprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seimpersonateprivilege" priority="1000" mode="M346"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seimpersonateprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seimpersonateprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seimpersonateprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M346"/></axsl:template><axsl:template match="text()" priority="-1" mode="M346"/><axsl:template match="@*|node()" priority="-2" mode="M346"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M346"/></axsl:template>

<!--PATTERN atsteseincreasebasepriorityprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seincreasebasepriorityprivilege" priority="1000" mode="M347"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seincreasebasepriorityprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seincreasebasepriorityprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seincreasebasepriorityprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M347"/></axsl:template><axsl:template match="text()" priority="-1" mode="M347"/><axsl:template match="@*|node()" priority="-2" mode="M347"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M347"/></axsl:template>

<!--PATTERN atsteseincreasequotaprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seincreasequotaprivilege" priority="1000" mode="M348"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seincreasequotaprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seincreasequotaprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seincreasequotaprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M348"/></axsl:template><axsl:template match="text()" priority="-1" mode="M348"/><axsl:template match="@*|node()" priority="-2" mode="M348"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M348"/></axsl:template>

<!--PATTERN atsteseloaddriverprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seloaddriverprivilege" priority="1000" mode="M349"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seloaddriverprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seloaddriverprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seloaddriverprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M349"/></axsl:template><axsl:template match="text()" priority="-1" mode="M349"/><axsl:template match="@*|node()" priority="-2" mode="M349"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M349"/></axsl:template>

<!--PATTERN atsteselockmemoryprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:selockmemoryprivilege" priority="1000" mode="M350"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:selockmemoryprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the selockmemoryprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the selockmemoryprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M350"/></axsl:template><axsl:template match="text()" priority="-1" mode="M350"/><axsl:template match="@*|node()" priority="-2" mode="M350"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M350"/></axsl:template>

<!--PATTERN atstesemachineaccountprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:semachineaccountprivilege" priority="1000" mode="M351"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:semachineaccountprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the semachineaccountprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the semachineaccountprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M351"/></axsl:template><axsl:template match="text()" priority="-1" mode="M351"/><axsl:template match="@*|node()" priority="-2" mode="M351"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M351"/></axsl:template>

<!--PATTERN atstesemanagevolumeprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:semanagevolumeprivilege" priority="1000" mode="M352"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:semanagevolumeprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the semanagevolumeprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the semanagevolumeprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M352"/></axsl:template><axsl:template match="text()" priority="-1" mode="M352"/><axsl:template match="@*|node()" priority="-2" mode="M352"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M352"/></axsl:template>

<!--PATTERN atsteseprofilesingleprocessprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seprofilesingleprocessprivilege" priority="1000" mode="M353"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seprofilesingleprocessprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seprofilesingleprocessprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seprofilesingleprocessprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M353"/></axsl:template><axsl:template match="text()" priority="-1" mode="M353"/><axsl:template match="@*|node()" priority="-2" mode="M353"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M353"/></axsl:template>

<!--PATTERN atsteseremoteshutdownprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seremoteshutdownprivilege" priority="1000" mode="M354"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seremoteshutdownprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seremoteshutdownprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seremoteshutdownprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M354"/></axsl:template><axsl:template match="text()" priority="-1" mode="M354"/><axsl:template match="@*|node()" priority="-2" mode="M354"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M354"/></axsl:template>

<!--PATTERN atsteserestoreprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:serestoreprivilege" priority="1000" mode="M355"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:serestoreprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the serestoreprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the serestoreprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M355"/></axsl:template><axsl:template match="text()" priority="-1" mode="M355"/><axsl:template match="@*|node()" priority="-2" mode="M355"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M355"/></axsl:template>

<!--PATTERN atstesesecurityprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sesecurityprivilege" priority="1000" mode="M356"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sesecurityprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sesecurityprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sesecurityprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M356"/></axsl:template><axsl:template match="text()" priority="-1" mode="M356"/><axsl:template match="@*|node()" priority="-2" mode="M356"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M356"/></axsl:template>

<!--PATTERN atsteseshutdownprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seshutdownprivilege" priority="1000" mode="M357"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seshutdownprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seshutdownprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seshutdownprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M357"/></axsl:template><axsl:template match="text()" priority="-1" mode="M357"/><axsl:template match="@*|node()" priority="-2" mode="M357"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M357"/></axsl:template>

<!--PATTERN atstesesyncagentprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sesyncagentprivilege" priority="1000" mode="M358"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sesyncagentprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sesyncagentprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sesyncagentprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M358"/></axsl:template><axsl:template match="text()" priority="-1" mode="M358"/><axsl:template match="@*|node()" priority="-2" mode="M358"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M358"/></axsl:template>

<!--PATTERN atstesesystemenvironmentprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sesystemenvironmentprivilege" priority="1000" mode="M359"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sesystemenvironmentprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sesystemenvironmentprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sesystemenvironmentprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M359"/></axsl:template><axsl:template match="text()" priority="-1" mode="M359"/><axsl:template match="@*|node()" priority="-2" mode="M359"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M359"/></axsl:template>

<!--PATTERN atstesesystemprofileprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sesystemprofileprivilege" priority="1000" mode="M360"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sesystemprofileprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sesystemprofileprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sesystemprofileprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M360"/></axsl:template><axsl:template match="text()" priority="-1" mode="M360"/><axsl:template match="@*|node()" priority="-2" mode="M360"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M360"/></axsl:template>

<!--PATTERN atstesesystemtimeprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sesystemtimeprivilege" priority="1000" mode="M361"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sesystemtimeprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sesystemtimeprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sesystemtimeprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M361"/></axsl:template><axsl:template match="text()" priority="-1" mode="M361"/><axsl:template match="@*|node()" priority="-2" mode="M361"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M361"/></axsl:template>

<!--PATTERN atstesetakeownershipprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:setakeownershipprivilege" priority="1000" mode="M362"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:setakeownershipprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the setakeownershipprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the setakeownershipprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M362"/></axsl:template><axsl:template match="text()" priority="-1" mode="M362"/><axsl:template match="@*|node()" priority="-2" mode="M362"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M362"/></axsl:template>

<!--PATTERN atstesetcbprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:setcbprivilege" priority="1000" mode="M363"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:setcbprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the setcbprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the setcbprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M363"/></axsl:template><axsl:template match="text()" priority="-1" mode="M363"/><axsl:template match="@*|node()" priority="-2" mode="M363"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M363"/></axsl:template>

<!--PATTERN atsteseundockprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seundockprivilege" priority="1000" mode="M364"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seundockprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seundockprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seundockprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M364"/></axsl:template><axsl:template match="text()" priority="-1" mode="M364"/><axsl:template match="@*|node()" priority="-2" mode="M364"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M364"/></axsl:template>

<!--PATTERN atsteseunsolicitedinputprivilege-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seunsolicitedinputprivilege" priority="1000" mode="M365"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seunsolicitedinputprivilege"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seunsolicitedinputprivilege entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seunsolicitedinputprivilege entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M365"/></axsl:template><axsl:template match="text()" priority="-1" mode="M365"/><axsl:template match="@*|node()" priority="-2" mode="M365"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M365"/></axsl:template>

<!--PATTERN atstesebatchlogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sebatchlogonright" priority="1000" mode="M366"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sebatchlogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sebatchlogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sebatchlogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M366"/></axsl:template><axsl:template match="text()" priority="-1" mode="M366"/><axsl:template match="@*|node()" priority="-2" mode="M366"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M366"/></axsl:template>

<!--PATTERN atsteseinteractivelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seinteractivelogonright" priority="1000" mode="M367"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seinteractivelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seinteractivelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seinteractivelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M367"/></axsl:template><axsl:template match="text()" priority="-1" mode="M367"/><axsl:template match="@*|node()" priority="-2" mode="M367"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M367"/></axsl:template>

<!--PATTERN atstesenetworklogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:senetworklogonright" priority="1000" mode="M368"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:senetworklogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the senetworklogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the senetworklogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M368"/></axsl:template><axsl:template match="text()" priority="-1" mode="M368"/><axsl:template match="@*|node()" priority="-2" mode="M368"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M368"/></axsl:template>

<!--PATTERN atsteseremoteinteractivelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seremoteinteractivelogonright" priority="1000" mode="M369"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seremoteinteractivelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seremoteinteractivelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seremoteinteractivelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M369"/></axsl:template><axsl:template match="text()" priority="-1" mode="M369"/><axsl:template match="@*|node()" priority="-2" mode="M369"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M369"/></axsl:template>

<!--PATTERN atsteseservicelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:seservicelogonright" priority="1000" mode="M370"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:seservicelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the seservicelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the seservicelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M370"/></axsl:template><axsl:template match="text()" priority="-1" mode="M370"/><axsl:template match="@*|node()" priority="-2" mode="M370"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M370"/></axsl:template>

<!--PATTERN atstesedenybatchLogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedenybatchLogonright" priority="1000" mode="M371"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedenybatchLogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedenybatchLogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedenybatchLogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M371"/></axsl:template><axsl:template match="text()" priority="-1" mode="M371"/><axsl:template match="@*|node()" priority="-2" mode="M371"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M371"/></axsl:template>

<!--PATTERN atstesedenyinteractivelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedenyinteractivelogonright" priority="1000" mode="M372"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedenyinteractivelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedenyinteractivelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedenyinteractivelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M372"/></axsl:template><axsl:template match="text()" priority="-1" mode="M372"/><axsl:template match="@*|node()" priority="-2" mode="M372"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M372"/></axsl:template>

<!--PATTERN atstesedenynetworklogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedenynetworklogonright" priority="1000" mode="M373"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedenynetworklogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedenynetworklogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedenynetworklogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M373"/></axsl:template><axsl:template match="text()" priority="-1" mode="M373"/><axsl:template match="@*|node()" priority="-2" mode="M373"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M373"/></axsl:template>

<!--PATTERN atstesedenyremoteInteractivelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedenyremoteInteractivelogonright" priority="1000" mode="M374"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedenyremoteInteractivelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedenyremoteInteractivelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedenyremoteInteractivelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M374"/></axsl:template><axsl:template match="text()" priority="-1" mode="M374"/><axsl:template match="@*|node()" priority="-2" mode="M374"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M374"/></axsl:template>

<!--PATTERN atstesedenyservicelogonright-->


	<!--RULE -->
<axsl:template match="win-def:accesstoken_state/win-def:sedenyservicelogonright" priority="1000" mode="M375"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:accesstoken_state/win-def:sedenyservicelogonright"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the sedenyservicelogonright entity of an accesstoken_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the sedenyservicelogonright entity of an accesstoken_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M375"/></axsl:template><axsl:template match="text()" priority="-1" mode="M375"/><axsl:template match="@*|node()" priority="-2" mode="M375"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M375"/></axsl:template>

<!--PATTERN adtst-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_test/win-def:object" priority="1001" mode="M376"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:activedirectory_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:activedirectory_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of an activedirectory_test must reference an activedirectory_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M376"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:activedirectory_test/win-def:state" priority="1000" mode="M376"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:activedirectory_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:activedirectory_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of an activedirectory_test must reference an activedirectory_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M376"/></axsl:template><axsl:template match="text()" priority="-1" mode="M376"/><axsl:template match="@*|node()" priority="-2" mode="M376"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M376"/></axsl:template>

<!--PATTERN adobjnaming_context-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_object/win-def:naming_context" priority="1000" mode="M377"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_object/win-def:naming_context"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the naming_context entity of an activedirectory_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the naming_context entity of an activedirectory_object should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M377"/></axsl:template><axsl:template match="text()" priority="-1" mode="M377"/><axsl:template match="@*|node()" priority="-2" mode="M377"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M377"/></axsl:template>

<!--PATTERN adobjrelative_dn-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_object/win-def:relative_dn" priority="1000" mode="M378"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_object/win-def:relative_dn"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the relative_dn entity of an activedirectory_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the relative_dn entity of an activedirectory_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@xsi:nil='true') or ../win-def:attribute/@xsi:nil='true'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@xsi:nil='true') or ../win-def:attribute/@xsi:nil='true'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - attribute entity must be nil when relative_dn is nil</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M378"/></axsl:template><axsl:template match="text()" priority="-1" mode="M378"/><axsl:template match="@*|node()" priority="-2" mode="M378"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M378"/></axsl:template>

<!--PATTERN adobjattribute-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_object/win-def:attribute" priority="1000" mode="M379"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_object/win-def:attribute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the attribute entity of an activedirectory_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the attribute entity of an activedirectory_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M379"/></axsl:template><axsl:template match="text()" priority="-1" mode="M379"/><axsl:template match="@*|node()" priority="-2" mode="M379"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M379"/></axsl:template>

<!--PATTERN adstenaming_context-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:naming_context" priority="1000" mode="M380"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:naming_context"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the naming_context entity of an activedirectory_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the naming_context entity of an activedirectory_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M380"/></axsl:template><axsl:template match="text()" priority="-1" mode="M380"/><axsl:template match="@*|node()" priority="-2" mode="M380"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M380"/></axsl:template>

<!--PATTERN adsterelative_dn-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:relative_dn" priority="1000" mode="M381"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:relative_dn"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the relative_dn entity of an activedirectory_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the relative_dn entity of an activedirectory_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M381"/></axsl:template><axsl:template match="text()" priority="-1" mode="M381"/><axsl:template match="@*|node()" priority="-2" mode="M381"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M381"/></axsl:template>

<!--PATTERN adsteattribute-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:attribute" priority="1000" mode="M382"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:attribute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the attribute entity of an activedirectory_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the attribute entity of an activedirectory_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M382"/></axsl:template><axsl:template match="text()" priority="-1" mode="M382"/><axsl:template match="@*|node()" priority="-2" mode="M382"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M382"/></axsl:template>

<!--PATTERN adsteobject_class-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:object_class" priority="1000" mode="M383"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:object_class"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the object_class entity of an activedirectory_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the object_class entity of an activedirectory_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M383"/></axsl:template><axsl:template match="text()" priority="-1" mode="M383"/><axsl:template match="@*|node()" priority="-2" mode="M383"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M383"/></axsl:template>

<!--PATTERN adsteadstype-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:adstype" priority="1000" mode="M384"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:adstype"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the adstype entity of an activedirectory_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the adstype entity of an activedirectory_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M384"/></axsl:template><axsl:template match="text()" priority="-1" mode="M384"/><axsl:template match="@*|node()" priority="-2" mode="M384"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M384"/></axsl:template>

<!--PATTERN adstevalue-->


	<!--RULE -->
<axsl:template match="win-def:activedirectory_state/win-def:value" priority="1000" mode="M385"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:activedirectory_state/win-def:value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - the supplied operation attribute for the value entity of an activedirectory_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M385"/></axsl:template><axsl:template match="text()" priority="-1" mode="M385"/><axsl:template match="@*|node()" priority="-2" mode="M385"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M385"/></axsl:template>

<!--PATTERN aeptst-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_test/win-def:object" priority="1001" mode="M386"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:auditeventpolicy_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:auditeventpolicy_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of an auditeventpolicy_test must reference an auditeventpolicy_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M386"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_test/win-def:state" priority="1000" mode="M386"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:auditeventpolicy_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:auditeventpolicy_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of an auditeventpolicy_test must reference an auditeventpolicy_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M386"/></axsl:template><axsl:template match="text()" priority="-1" mode="M386"/><axsl:template match="@*|node()" priority="-2" mode="M386"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M386"/></axsl:template>

<!--PATTERN aepsteaccount_logon-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:account_logon" priority="1000" mode="M387"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:account_logon"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the account_logon entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the account_logon entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M387"/></axsl:template><axsl:template match="text()" priority="-1" mode="M387"/><axsl:template match="@*|node()" priority="-2" mode="M387"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M387"/></axsl:template>

<!--PATTERN aepsteaccount_management-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:account_management" priority="1000" mode="M388"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:account_management"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the account_management entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the account_management entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M388"/></axsl:template><axsl:template match="text()" priority="-1" mode="M388"/><axsl:template match="@*|node()" priority="-2" mode="M388"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M388"/></axsl:template>

<!--PATTERN aepstedetailed_tracking-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:detailed_tracking" priority="1000" mode="M389"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:detailed_tracking"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the detailed_tracking entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the detailed_tracking entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M389"/></axsl:template><axsl:template match="text()" priority="-1" mode="M389"/><axsl:template match="@*|node()" priority="-2" mode="M389"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M389"/></axsl:template>

<!--PATTERN aepstedirectory_service_access-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:directory_service_access" priority="1000" mode="M390"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:directory_service_access"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the directory_service_access entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the directory_service_access entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M390"/></axsl:template><axsl:template match="text()" priority="-1" mode="M390"/><axsl:template match="@*|node()" priority="-2" mode="M390"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M390"/></axsl:template>

<!--PATTERN aepstelogon-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:logon" priority="1000" mode="M391"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:logon"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the logon entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the logon entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M391"/></axsl:template><axsl:template match="text()" priority="-1" mode="M391"/><axsl:template match="@*|node()" priority="-2" mode="M391"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M391"/></axsl:template>

<!--PATTERN aepsteobject_access-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:object_access" priority="1000" mode="M392"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:object_access"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the object_access entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the object_access entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M392"/></axsl:template><axsl:template match="text()" priority="-1" mode="M392"/><axsl:template match="@*|node()" priority="-2" mode="M392"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M392"/></axsl:template>

<!--PATTERN aepstepolicy_change-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:policy_change" priority="1000" mode="M393"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:policy_change"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the policy_change entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the policy_change entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M393"/></axsl:template><axsl:template match="text()" priority="-1" mode="M393"/><axsl:template match="@*|node()" priority="-2" mode="M393"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M393"/></axsl:template>

<!--PATTERN aepsteprivilege_use-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:privilege_use" priority="1000" mode="M394"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:privilege_use"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the privilege_use entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the privilege_use entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M394"/></axsl:template><axsl:template match="text()" priority="-1" mode="M394"/><axsl:template match="@*|node()" priority="-2" mode="M394"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M394"/></axsl:template>

<!--PATTERN aepstesystem-->


	<!--RULE -->
<axsl:template match="win-def:auditeventpolicy_state/win-def:system" priority="1000" mode="M395"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:auditeventpolicy_state/win-def:system"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the system entity of an auditeventpolicy_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the system entity of an auditeventpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M395"/></axsl:template><axsl:template match="text()" priority="-1" mode="M395"/><axsl:template match="@*|node()" priority="-2" mode="M395"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M395"/></axsl:template>

<!--PATTERN filetst-->


	<!--RULE -->
<axsl:template match="win-def:file_test/win-def:object" priority="1001" mode="M396"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:file_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:file_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a file_test must reference a file_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M396"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:file_test/win-def:state" priority="1000" mode="M396"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:file_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:file_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a file_test must reference a file_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M396"/></axsl:template><axsl:template match="text()" priority="-1" mode="M396"/><axsl:template match="@*|node()" priority="-2" mode="M396"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M396"/></axsl:template>

<!--PATTERN fileobjpath-->


	<!--RULE -->
<axsl:template match="win-def:file_object/win-def:path" priority="1000" mode="M397"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_object/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the path entity of a file_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the path entity of a file_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M397"/></axsl:template><axsl:template match="text()" priority="-1" mode="M397"/><axsl:template match="@*|node()" priority="-2" mode="M397"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M397"/></axsl:template>

<!--PATTERN fileobjfilename-->


	<!--RULE -->
<axsl:template match="win-def:file_object/win-def:filename" priority="1000" mode="M398"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_object/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the filename entity of a file_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the filename entity of a file_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="(not(@operation) or @operation='equals' or @operation='not equal') and not(contains(.,'\') or contains(.,'/') or contains(.,':') or contains(.,'*') or contains(.,'?')) or contains(.,'&gt;') or contains(.,'|')"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="(not(@operation) or @operation='equals' or @operation='not equal') and not(contains(.,'\') or contains(.,'/') or contains(.,':') or contains(.,'*') or contains(.,'?')) or contains(.,'&gt;') or contains(.,'|')"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - filename entity can not contain the characters / \ : * ? &gt; | </svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M398"/></axsl:template><axsl:template match="text()" priority="-1" mode="M398"/><axsl:template match="@*|node()" priority="-2" mode="M398"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M398"/></axsl:template>

<!--PATTERN filestepath-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:path" priority="1000" mode="M399"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the path entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the path entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M399"/></axsl:template><axsl:template match="text()" priority="-1" mode="M399"/><axsl:template match="@*|node()" priority="-2" mode="M399"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M399"/></axsl:template>

<!--PATTERN filestefilename-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:filename" priority="1000" mode="M400"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the filename entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the filename entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M400"/></axsl:template><axsl:template match="text()" priority="-1" mode="M400"/><axsl:template match="@*|node()" priority="-2" mode="M400"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M400"/></axsl:template>

<!--PATTERN filesteowner-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:owner" priority="1000" mode="M401"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the owner entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the owner entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M401"/></axsl:template><axsl:template match="text()" priority="-1" mode="M401"/><axsl:template match="@*|node()" priority="-2" mode="M401"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M401"/></axsl:template>

<!--PATTERN filestesize-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:size" priority="1000" mode="M402"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:size"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the size entity of a file_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the size entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M402"/></axsl:template><axsl:template match="text()" priority="-1" mode="M402"/><axsl:template match="@*|node()" priority="-2" mode="M402"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M402"/></axsl:template>

<!--PATTERN filestea_time-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:a_time" priority="1000" mode="M403"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:a_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the a_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the a_time entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M403"/></axsl:template><axsl:template match="text()" priority="-1" mode="M403"/><axsl:template match="@*|node()" priority="-2" mode="M403"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M403"/></axsl:template>

<!--PATTERN filestec_time-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:c_time" priority="1000" mode="M404"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:c_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the c_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the c_time entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M404"/></axsl:template><axsl:template match="text()" priority="-1" mode="M404"/><axsl:template match="@*|node()" priority="-2" mode="M404"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M404"/></axsl:template>

<!--PATTERN filestem_time-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:m_time" priority="1000" mode="M405"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:m_time"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the m_time entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the m_time entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', 'less than or equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M405"/></axsl:template><axsl:template match="text()" priority="-1" mode="M405"/><axsl:template match="@*|node()" priority="-2" mode="M405"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M405"/></axsl:template>

<!--PATTERN filestems_checksum-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:ms_checksum" priority="1000" mode="M406"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:ms_checksum"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the ms_checksum entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the ms_checksum entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M406"/></axsl:template><axsl:template match="text()" priority="-1" mode="M406"/><axsl:template match="@*|node()" priority="-2" mode="M406"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M406"/></axsl:template>

<!--PATTERN filesteversion-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:version" priority="1000" mode="M407"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='version'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='version'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the version entity of a file_state should be 'version'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the version entity of a file_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M407"/></axsl:template><axsl:template match="text()" priority="-1" mode="M407"/><axsl:template match="@*|node()" priority="-2" mode="M407"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M407"/></axsl:template>

<!--PATTERN filestetype-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:type" priority="1000" mode="M408"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the type entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the type entity of a file_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M408"/></axsl:template><axsl:template match="text()" priority="-1" mode="M408"/><axsl:template match="@*|node()" priority="-2" mode="M408"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M408"/></axsl:template>

<!--PATTERN filestedevelopment_class-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:development_class" priority="1000" mode="M409"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:development_class"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the development_class entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the development_class entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M409"/></axsl:template><axsl:template match="text()" priority="-1" mode="M409"/><axsl:template match="@*|node()" priority="-2" mode="M409"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M409"/></axsl:template>

<!--PATTERN filestecompany-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:company" priority="1000" mode="M410"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:company"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the company entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the company entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M410"/></axsl:template><axsl:template match="text()" priority="-1" mode="M410"/><axsl:template match="@*|node()" priority="-2" mode="M410"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M410"/></axsl:template>

<!--PATTERN filesteinternalname-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:internal_name" priority="1000" mode="M411"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:internal_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the internal_name entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the internal_name entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M411"/></axsl:template><axsl:template match="text()" priority="-1" mode="M411"/><axsl:template match="@*|node()" priority="-2" mode="M411"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M411"/></axsl:template>

<!--PATTERN filestelanguage-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:language" priority="1000" mode="M412"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:language"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the language entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the language entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M412"/></axsl:template><axsl:template match="text()" priority="-1" mode="M412"/><axsl:template match="@*|node()" priority="-2" mode="M412"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M412"/></axsl:template>

<!--PATTERN filesteoriginalfilename-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:original_filename" priority="1000" mode="M413"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:original_filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the original_filename entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the original_filename entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M413"/></axsl:template><axsl:template match="text()" priority="-1" mode="M413"/><axsl:template match="@*|node()" priority="-2" mode="M413"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M413"/></axsl:template>

<!--PATTERN filesteproductname-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:product_name" priority="1000" mode="M414"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:product_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the product_name entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the product_name entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M414"/></axsl:template><axsl:template match="text()" priority="-1" mode="M414"/><axsl:template match="@*|node()" priority="-2" mode="M414"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M414"/></axsl:template>

<!--PATTERN filesteproductversion-->


	<!--RULE -->
<axsl:template match="win-def:file_state/win-def:product_version" priority="1000" mode="M415"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:file_state/win-def:product_version"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the product_version entity of a file_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the product_version entity of a file_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M415"/></axsl:template><axsl:template match="text()" priority="-1" mode="M415"/><axsl:template match="@*|node()" priority="-2" mode="M415"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M415"/></axsl:template>

<!--PATTERN faptst-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_test/win-def:object" priority="1001" mode="M416"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:fileauditedpermissions_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:fileauditedpermissions_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a fileauditedpermissions_test must reference a fileauditedpermissions_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M416"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_test/win-def:state" priority="1000" mode="M416"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:fileauditedpermissions_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:fileauditedpermissions_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a fileauditedpermissions_test must reference a fileauditedpermissions_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M416"/></axsl:template><axsl:template match="text()" priority="-1" mode="M416"/><axsl:template match="@*|node()" priority="-2" mode="M416"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M416"/></axsl:template>

<!--PATTERN fapobjpath-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_object/win-def:path" priority="1000" mode="M417"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_object/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the path entity of a fileauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the path entity of a fileauditedpermissions_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M417"/></axsl:template><axsl:template match="text()" priority="-1" mode="M417"/><axsl:template match="@*|node()" priority="-2" mode="M417"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M417"/></axsl:template>

<!--PATTERN fapobjfilename-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_object/win-def:filename" priority="1000" mode="M418"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_object/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the filename entity of a fileauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the filename entity of a fileauditedpermissions_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M418"/></axsl:template><axsl:template match="text()" priority="-1" mode="M418"/><axsl:template match="@*|node()" priority="-2" mode="M418"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M418"/></axsl:template>

<!--PATTERN fapobjtrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_object/win-def:trustee_name" priority="1000" mode="M419"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_object/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the trustee_name entity of a fileauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the trustee_name entity of a fileauditedpermissions_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M419"/></axsl:template><axsl:template match="text()" priority="-1" mode="M419"/><axsl:template match="@*|node()" priority="-2" mode="M419"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M419"/></axsl:template>

<!--PATTERN fapstepath-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:path" priority="1000" mode="M420"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the path entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the path entity of a fileauditedpermissions_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M420"/></axsl:template><axsl:template match="text()" priority="-1" mode="M420"/><axsl:template match="@*|node()" priority="-2" mode="M420"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M420"/></axsl:template>

<!--PATTERN fapstefilename-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:filename" priority="1000" mode="M421"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the filename entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the filename entity of a fileauditedpermissions_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M421"/></axsl:template><axsl:template match="text()" priority="-1" mode="M421"/><axsl:template match="@*|node()" priority="-2" mode="M421"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M421"/></axsl:template>

<!--PATTERN fapstetrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:trustee_name" priority="1000" mode="M422"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_name entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_name entity of a fileauditedpermissions_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M422"/></axsl:template><axsl:template match="text()" priority="-1" mode="M422"/><axsl:template match="@*|node()" priority="-2" mode="M422"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M422"/></axsl:template>

<!--PATTERN fapstestandard_delete-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:standard_delete" priority="1000" mode="M423"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:standard_delete"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_delete entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_delete entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M423"/></axsl:template><axsl:template match="text()" priority="-1" mode="M423"/><axsl:template match="@*|node()" priority="-2" mode="M423"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M423"/></axsl:template>

<!--PATTERN fapstestandard_read_control-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:standard_read_control" priority="1000" mode="M424"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:standard_read_control"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_read_control entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_read_control entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M424"/></axsl:template><axsl:template match="text()" priority="-1" mode="M424"/><axsl:template match="@*|node()" priority="-2" mode="M424"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M424"/></axsl:template>

<!--PATTERN fapstestandard_write_dac-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:standard_write_dac" priority="1000" mode="M425"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:standard_write_dac"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_dac entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_dac entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M425"/></axsl:template><axsl:template match="text()" priority="-1" mode="M425"/><axsl:template match="@*|node()" priority="-2" mode="M425"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M425"/></axsl:template>

<!--PATTERN fapstestandard_write_owner-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:standard_write_owner" priority="1000" mode="M426"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:standard_write_owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_owner entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_owner entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M426"/></axsl:template><axsl:template match="text()" priority="-1" mode="M426"/><axsl:template match="@*|node()" priority="-2" mode="M426"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M426"/></axsl:template>

<!--PATTERN fapstestandard_synchronize-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:standard_synchronize" priority="1000" mode="M427"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:standard_synchronize"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_synchronize entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_synchronize entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M427"/></axsl:template><axsl:template match="text()" priority="-1" mode="M427"/><axsl:template match="@*|node()" priority="-2" mode="M427"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M427"/></axsl:template>

<!--PATTERN fapsteaccess_system_security-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:access_system_security" priority="1000" mode="M428"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:access_system_security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the access_system_security entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the access_system_security entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M428"/></axsl:template><axsl:template match="text()" priority="-1" mode="M428"/><axsl:template match="@*|node()" priority="-2" mode="M428"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M428"/></axsl:template>

<!--PATTERN fapstegeneric_read-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:generic_read" priority="1000" mode="M429"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:generic_read"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_read entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_read entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M429"/></axsl:template><axsl:template match="text()" priority="-1" mode="M429"/><axsl:template match="@*|node()" priority="-2" mode="M429"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M429"/></axsl:template>

<!--PATTERN fapstegeneric_write-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:generic_write" priority="1000" mode="M430"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:generic_write"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_write entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_write entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M430"/></axsl:template><axsl:template match="text()" priority="-1" mode="M430"/><axsl:template match="@*|node()" priority="-2" mode="M430"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M430"/></axsl:template>

<!--PATTERN fapstegeneric_execute-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:generic_execute" priority="1000" mode="M431"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:generic_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_execute entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_execute entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M431"/></axsl:template><axsl:template match="text()" priority="-1" mode="M431"/><axsl:template match="@*|node()" priority="-2" mode="M431"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M431"/></axsl:template>

<!--PATTERN fapstegeneric_all-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:generic_all" priority="1000" mode="M432"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:generic_all"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_all entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_all entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M432"/></axsl:template><axsl:template match="text()" priority="-1" mode="M432"/><axsl:template match="@*|node()" priority="-2" mode="M432"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M432"/></axsl:template>

<!--PATTERN fapstefile_read_data-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_read_data" priority="1000" mode="M433"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_read_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_data entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_data entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M433"/></axsl:template><axsl:template match="text()" priority="-1" mode="M433"/><axsl:template match="@*|node()" priority="-2" mode="M433"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M433"/></axsl:template>

<!--PATTERN fapstefile_write_data-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_write_data" priority="1000" mode="M434"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_write_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_data entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_data entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M434"/></axsl:template><axsl:template match="text()" priority="-1" mode="M434"/><axsl:template match="@*|node()" priority="-2" mode="M434"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M434"/></axsl:template>

<!--PATTERN fapstefile_append_data-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_append_data" priority="1000" mode="M435"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_append_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_append_data entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_append_data entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M435"/></axsl:template><axsl:template match="text()" priority="-1" mode="M435"/><axsl:template match="@*|node()" priority="-2" mode="M435"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M435"/></axsl:template>

<!--PATTERN fapstefile_read_ea-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_read_ea" priority="1000" mode="M436"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_read_ea"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_ea entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_ea entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M436"/></axsl:template><axsl:template match="text()" priority="-1" mode="M436"/><axsl:template match="@*|node()" priority="-2" mode="M436"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M436"/></axsl:template>

<!--PATTERN fapstefile_write_ea-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_write_ea" priority="1000" mode="M437"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_write_ea"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_ea entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_ea entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M437"/></axsl:template><axsl:template match="text()" priority="-1" mode="M437"/><axsl:template match="@*|node()" priority="-2" mode="M437"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M437"/></axsl:template>

<!--PATTERN fapstefile_execute-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_execute" priority="1000" mode="M438"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_execute entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_execute entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M438"/></axsl:template><axsl:template match="text()" priority="-1" mode="M438"/><axsl:template match="@*|node()" priority="-2" mode="M438"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M438"/></axsl:template>

<!--PATTERN fapstefile_delete_child-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_delete_child" priority="1000" mode="M439"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_delete_child"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_delete_child entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_delete_child entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M439"/></axsl:template><axsl:template match="text()" priority="-1" mode="M439"/><axsl:template match="@*|node()" priority="-2" mode="M439"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M439"/></axsl:template>

<!--PATTERN fapstefile_read_attributes-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_read_attributes" priority="1000" mode="M440"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_read_attributes"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_attributes entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_attributes entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M440"/></axsl:template><axsl:template match="text()" priority="-1" mode="M440"/><axsl:template match="@*|node()" priority="-2" mode="M440"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M440"/></axsl:template>

<!--PATTERN fapstefile_write_attributes-->


	<!--RULE -->
<axsl:template match="win-def:fileauditedpermissions_state/win-def:file_write_attributes" priority="1000" mode="M441"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileauditedpermissions_state/win-def:file_write_attributes"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_attributes entity of a fileauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_attributes entity of a fileauditedpermissions_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M441"/></axsl:template><axsl:template match="text()" priority="-1" mode="M441"/><axsl:template match="@*|node()" priority="-2" mode="M441"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M441"/></axsl:template>

<!--PATTERN fertst-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_test/win-def:object" priority="1001" mode="M442"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:fileeffectiverights_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:fileeffectiverights_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a fileeffectiverights_test must reference a fileeffectiverights_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M442"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_test/win-def:state" priority="1000" mode="M442"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:fileeffectiverights_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:fileeffectiverights_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a fileeffectiverights_test must reference a fileeffectiverights_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M442"/></axsl:template><axsl:template match="text()" priority="-1" mode="M442"/><axsl:template match="@*|node()" priority="-2" mode="M442"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M442"/></axsl:template>

<!--PATTERN fefobjpath-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_object/win-def:path" priority="1000" mode="M443"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_object/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the path entity of a fileeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the path entity of a fileeffectiverights_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M443"/></axsl:template><axsl:template match="text()" priority="-1" mode="M443"/><axsl:template match="@*|node()" priority="-2" mode="M443"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M443"/></axsl:template>

<!--PATTERN fefobjfilename-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_object/win-def:filename" priority="1000" mode="M444"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_object/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the filename entity of a fileeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the filename entity of a fileeffectiverights_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M444"/></axsl:template><axsl:template match="text()" priority="-1" mode="M444"/><axsl:template match="@*|node()" priority="-2" mode="M444"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M444"/></axsl:template>

<!--PATTERN fefobjtrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_object/win-def:trustee_name" priority="1000" mode="M445"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_object/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the trustee_name entity of a fileeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the trustee_name entity of a fileeffectiverights_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M445"/></axsl:template><axsl:template match="text()" priority="-1" mode="M445"/><axsl:template match="@*|node()" priority="-2" mode="M445"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M445"/></axsl:template>

<!--PATTERN ferstepath-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:path" priority="1000" mode="M446"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the path entity of a fileeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the path entity of a fileeffectiverights_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M446"/></axsl:template><axsl:template match="text()" priority="-1" mode="M446"/><axsl:template match="@*|node()" priority="-2" mode="M446"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M446"/></axsl:template>

<!--PATTERN ferstefilename-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:filename" priority="1000" mode="M447"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:filename"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the filename entity of a fileeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the filename entity of a fileeffectiverights_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M447"/></axsl:template><axsl:template match="text()" priority="-1" mode="M447"/><axsl:template match="@*|node()" priority="-2" mode="M447"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M447"/></axsl:template>

<!--PATTERN ferstetrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:trustee_name" priority="1000" mode="M448"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_name entity of a fileeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_name entity of a fileeffectiverights_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M448"/></axsl:template><axsl:template match="text()" priority="-1" mode="M448"/><axsl:template match="@*|node()" priority="-2" mode="M448"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M448"/></axsl:template>

<!--PATTERN ferstestandard_delete-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:standard_delete" priority="1000" mode="M449"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:standard_delete"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_delete entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_delete entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M449"/></axsl:template><axsl:template match="text()" priority="-1" mode="M449"/><axsl:template match="@*|node()" priority="-2" mode="M449"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M449"/></axsl:template>

<!--PATTERN ferstestandard_read_control-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:standard_read_control" priority="1000" mode="M450"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:standard_read_control"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_read_control entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_read_control entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M450"/></axsl:template><axsl:template match="text()" priority="-1" mode="M450"/><axsl:template match="@*|node()" priority="-2" mode="M450"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M450"/></axsl:template>

<!--PATTERN ferstestandard_write_dac-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:standard_write_dac" priority="1000" mode="M451"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:standard_write_dac"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_dac entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_dac entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M451"/></axsl:template><axsl:template match="text()" priority="-1" mode="M451"/><axsl:template match="@*|node()" priority="-2" mode="M451"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M451"/></axsl:template>

<!--PATTERN ferstestandard_write_owner-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:standard_write_owner" priority="1000" mode="M452"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:standard_write_owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_owner entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_owner entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M452"/></axsl:template><axsl:template match="text()" priority="-1" mode="M452"/><axsl:template match="@*|node()" priority="-2" mode="M452"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M452"/></axsl:template>

<!--PATTERN ferstestandard_synchronize-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:standard_synchronize" priority="1000" mode="M453"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:standard_synchronize"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_synchronize entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_synchronize entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M453"/></axsl:template><axsl:template match="text()" priority="-1" mode="M453"/><axsl:template match="@*|node()" priority="-2" mode="M453"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M453"/></axsl:template>

<!--PATTERN fersteaccess_system_security-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:access_system_security" priority="1000" mode="M454"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:access_system_security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the access_system_security entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the access_system_security entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M454"/></axsl:template><axsl:template match="text()" priority="-1" mode="M454"/><axsl:template match="@*|node()" priority="-2" mode="M454"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M454"/></axsl:template>

<!--PATTERN ferstegeneric_read-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:generic_read" priority="1000" mode="M455"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:generic_read"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_read entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_read entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M455"/></axsl:template><axsl:template match="text()" priority="-1" mode="M455"/><axsl:template match="@*|node()" priority="-2" mode="M455"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M455"/></axsl:template>

<!--PATTERN ferstegeneric_write-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:generic_write" priority="1000" mode="M456"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:generic_write"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_write entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_write entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M456"/></axsl:template><axsl:template match="text()" priority="-1" mode="M456"/><axsl:template match="@*|node()" priority="-2" mode="M456"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M456"/></axsl:template>

<!--PATTERN ferstegeneric_execute-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:generic_execute" priority="1000" mode="M457"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:generic_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_execute entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_execute entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M457"/></axsl:template><axsl:template match="text()" priority="-1" mode="M457"/><axsl:template match="@*|node()" priority="-2" mode="M457"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M457"/></axsl:template>

<!--PATTERN ferstegeneric_all-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:generic_all" priority="1000" mode="M458"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:generic_all"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_all entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_all entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M458"/></axsl:template><axsl:template match="text()" priority="-1" mode="M458"/><axsl:template match="@*|node()" priority="-2" mode="M458"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M458"/></axsl:template>

<!--PATTERN ferstefile_read_data-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_read_data" priority="1000" mode="M459"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_read_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_data entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_data entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M459"/></axsl:template><axsl:template match="text()" priority="-1" mode="M459"/><axsl:template match="@*|node()" priority="-2" mode="M459"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M459"/></axsl:template>

<!--PATTERN ferstefile_write_data-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_write_data" priority="1000" mode="M460"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_write_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_data entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_data entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M460"/></axsl:template><axsl:template match="text()" priority="-1" mode="M460"/><axsl:template match="@*|node()" priority="-2" mode="M460"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M460"/></axsl:template>

<!--PATTERN ferstefile_append_data-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_append_data" priority="1000" mode="M461"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_append_data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_append_data entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_append_data entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M461"/></axsl:template><axsl:template match="text()" priority="-1" mode="M461"/><axsl:template match="@*|node()" priority="-2" mode="M461"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M461"/></axsl:template>

<!--PATTERN ferstefile_read_ea-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_read_ea" priority="1000" mode="M462"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_read_ea"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_ea entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_ea entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M462"/></axsl:template><axsl:template match="text()" priority="-1" mode="M462"/><axsl:template match="@*|node()" priority="-2" mode="M462"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M462"/></axsl:template>

<!--PATTERN ferstefile_write_ea-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_write_ea" priority="1000" mode="M463"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_write_ea"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_ea entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_ea entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M463"/></axsl:template><axsl:template match="text()" priority="-1" mode="M463"/><axsl:template match="@*|node()" priority="-2" mode="M463"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M463"/></axsl:template>

<!--PATTERN ferstefile_execute-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_execute" priority="1000" mode="M464"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_execute entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_execute entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M464"/></axsl:template><axsl:template match="text()" priority="-1" mode="M464"/><axsl:template match="@*|node()" priority="-2" mode="M464"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M464"/></axsl:template>

<!--PATTERN ferstefile_delete_child-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_delete_child" priority="1000" mode="M465"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_delete_child"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_delete_child entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_delete_child entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M465"/></axsl:template><axsl:template match="text()" priority="-1" mode="M465"/><axsl:template match="@*|node()" priority="-2" mode="M465"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M465"/></axsl:template>

<!--PATTERN ferstefile_read_attributes-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_read_attributes" priority="1000" mode="M466"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_read_attributes"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_attributes entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_attributes entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M466"/></axsl:template><axsl:template match="text()" priority="-1" mode="M466"/><axsl:template match="@*|node()" priority="-2" mode="M466"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M466"/></axsl:template>

<!--PATTERN ferstefile_write_attributes-->


	<!--RULE -->
<axsl:template match="win-def:fileeffectiverights_state/win-def:file_write_attributes" priority="1000" mode="M467"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:fileeffectiverights_state/win-def:file_write_attributes"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_write_attributes entity of a fileeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_write_attributes entity of a fileeffectiverights_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M467"/></axsl:template><axsl:template match="text()" priority="-1" mode="M467"/><axsl:template match="@*|node()" priority="-2" mode="M467"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M467"/></axsl:template>

<!--PATTERN grouptst-->


	<!--RULE -->
<axsl:template match="win-def:group_test/win-def:object" priority="1001" mode="M468"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:group_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:group_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:group_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a group_test must reference a group_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M468"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:group_test/win-def:state" priority="1000" mode="M468"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:group_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:group_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:group_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a group_test must reference a group_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M468"/></axsl:template><axsl:template match="text()" priority="-1" mode="M468"/><axsl:template match="@*|node()" priority="-2" mode="M468"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M468"/></axsl:template>

<!--PATTERN groupobjgroup-->


	<!--RULE -->
<axsl:template match="win-def:group_object/win-def:group" priority="1000" mode="M469"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:group_object/win-def:group"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the group entity of a group_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the group entity of a group_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M469"/></axsl:template><axsl:template match="text()" priority="-1" mode="M469"/><axsl:template match="@*|node()" priority="-2" mode="M469"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M469"/></axsl:template>

<!--PATTERN groupstegroup-->


	<!--RULE -->
<axsl:template match="win-def:group_state/win-def:group" priority="1000" mode="M470"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:group_state/win-def:group"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the group entity of a group_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the group entity of a group_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M470"/></axsl:template><axsl:template match="text()" priority="-1" mode="M470"/><axsl:template match="@*|node()" priority="-2" mode="M470"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M470"/></axsl:template>

<!--PATTERN groupsteuser-->


	<!--RULE -->
<axsl:template match="win-def:group_state/win-def:user" priority="1000" mode="M471"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:group_state/win-def:user"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the user entity of a group_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the user entity of a group_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M471"/></axsl:template><axsl:template match="text()" priority="-1" mode="M471"/><axsl:template match="@*|node()" priority="-2" mode="M471"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M471"/></axsl:template>

<!--PATTERN interfacetst-->


	<!--RULE -->
<axsl:template match="win-def:interface_test/win-def:object" priority="1001" mode="M472"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:interface_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:interface_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of an interface_test must reference an interface_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M472"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:interface_test/win-def:state" priority="1000" mode="M472"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:interface_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:interface_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of an interface_test must reference an interface_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M472"/></axsl:template><axsl:template match="text()" priority="-1" mode="M472"/><axsl:template match="@*|node()" priority="-2" mode="M472"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M472"/></axsl:template>

<!--PATTERN interfaceobjname-->


	<!--RULE -->
<axsl:template match="win-def:interface_object/win-def:name" priority="1000" mode="M473"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_object/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the name entity of a interface_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the name entity of a interface_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M473"/></axsl:template><axsl:template match="text()" priority="-1" mode="M473"/><axsl:template match="@*|node()" priority="-2" mode="M473"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M473"/></axsl:template>

<!--PATTERN interfacestename-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:name" priority="1000" mode="M474"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the name entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the name entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M474"/></axsl:template><axsl:template match="text()" priority="-1" mode="M474"/><axsl:template match="@*|node()" priority="-2" mode="M474"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M474"/></axsl:template>

<!--PATTERN interfacesteindex-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:index" priority="1000" mode="M475"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:index"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the index entity of an interface_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the index entity of an interface_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M475"/></axsl:template><axsl:template match="text()" priority="-1" mode="M475"/><axsl:template match="@*|node()" priority="-2" mode="M475"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M475"/></axsl:template>

<!--PATTERN interfacestetype-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:type" priority="1000" mode="M476"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the type entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the type entity of an interface_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M476"/></axsl:template><axsl:template match="text()" priority="-1" mode="M476"/><axsl:template match="@*|node()" priority="-2" mode="M476"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M476"/></axsl:template>

<!--PATTERN interfacestehardware_addr-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:hardware_addr" priority="1000" mode="M477"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:hardware_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the hardware_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the hardware_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M477"/></axsl:template><axsl:template match="text()" priority="-1" mode="M477"/><axsl:template match="@*|node()" priority="-2" mode="M477"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M477"/></axsl:template>

<!--PATTERN interfacesteinet_addr-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:inet_addr" priority="1000" mode="M478"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:inet_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the inet_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the inet_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M478"/></axsl:template><axsl:template match="text()" priority="-1" mode="M478"/><axsl:template match="@*|node()" priority="-2" mode="M478"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M478"/></axsl:template>

<!--PATTERN interfacestebroadcast_addr-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:broadcast_addr" priority="1000" mode="M479"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:broadcast_addr"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the broadcast_addr entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the broadcast_addr entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M479"/></axsl:template><axsl:template match="text()" priority="-1" mode="M479"/><axsl:template match="@*|node()" priority="-2" mode="M479"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M479"/></axsl:template>

<!--PATTERN interfacestenetmask-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:netmask" priority="1000" mode="M480"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:netmask"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the netmask entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the netmask entity of an interface_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M480"/></axsl:template><axsl:template match="text()" priority="-1" mode="M480"/><axsl:template match="@*|node()" priority="-2" mode="M480"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M480"/></axsl:template>

<!--PATTERN interfacesteaddr_type-->


	<!--RULE -->
<axsl:template match="win-def:interface_state/win-def:addr_type" priority="1000" mode="M481"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:interface_state/win-def:addr_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the addr_type entity of an interface_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the addr_type entity of an interface_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M481"/></axsl:template><axsl:template match="text()" priority="-1" mode="M481"/><axsl:template match="@*|node()" priority="-2" mode="M481"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M481"/></axsl:template>

<!--PATTERN lptst-->


	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_test/win-def:object" priority="1001" mode="M482"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:lockoutpolicy_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:lockoutpolicy_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a lockoutpolicy_test must reference a lockoutpolicy_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M482"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_test/win-def:state" priority="1000" mode="M482"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:lockoutpolicy_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:lockoutpolicy_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a lockoutpolicy_test must reference a lockoutpolicy_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M482"/></axsl:template><axsl:template match="text()" priority="-1" mode="M482"/><axsl:template match="@*|node()" priority="-2" mode="M482"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M482"/></axsl:template>

<!--PATTERN lpsteforce_logoff-->


	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_state/win-def:force_logoff" priority="1000" mode="M483"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_state/win-def:force_logoff"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the force_logoff entity of a lockoutpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the force_logoff entity of a lockoutpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M483"/></axsl:template><axsl:template match="text()" priority="-1" mode="M483"/><axsl:template match="@*|node()" priority="-2" mode="M483"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M483"/></axsl:template>

<!--PATTERN lpstelockout_duration-->


	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_state/win-def:lockout_duration" priority="1000" mode="M484"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_state/win-def:lockout_duration"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the lockout_duration entity of a lockoutpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the lockout_duration entity of a lockoutpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M484"/></axsl:template><axsl:template match="text()" priority="-1" mode="M484"/><axsl:template match="@*|node()" priority="-2" mode="M484"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M484"/></axsl:template>

<!--PATTERN lpstelockout_observation_window-->


	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_state/win-def:lockout_observation_window" priority="1000" mode="M485"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_state/win-def:lockout_observation_window"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the lockout_observation_window entity of a lockoutpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the lockout_observation_window entity of a lockoutpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M485"/></axsl:template><axsl:template match="text()" priority="-1" mode="M485"/><axsl:template match="@*|node()" priority="-2" mode="M485"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M485"/></axsl:template>

<!--PATTERN lpstelockout_threshold-->


	<!--RULE -->
<axsl:template match="win-def:lockoutpolicy_state/win-def:lockout_threshold" priority="1000" mode="M486"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:lockoutpolicy_state/win-def:lockout_threshold"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the lockout_threshold entity of a lockoutpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the lockout_threshold entity of a lockoutpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M486"/></axsl:template><axsl:template match="text()" priority="-1" mode="M486"/><axsl:template match="@*|node()" priority="-2" mode="M486"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M486"/></axsl:template>

<!--PATTERN metabasetst-->


	<!--RULE -->
<axsl:template match="win-def:metabase_test/win-def:object" priority="1001" mode="M487"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:metabase_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:metabase_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a metabase_test must reference a metabase_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M487"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:metabase_test/win-def:state" priority="1000" mode="M487"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:metabase_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:metabase_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a metabase_test must reference a metabase_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M487"/></axsl:template><axsl:template match="text()" priority="-1" mode="M487"/><axsl:template match="@*|node()" priority="-2" mode="M487"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M487"/></axsl:template>

<!--PATTERN metabaseobjkey-->


	<!--RULE -->
<axsl:template match="win-def:metabase_object/win-def:key" priority="1000" mode="M488"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_object/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the key entity of a metabase_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the key entity of a metabase_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M488"/></axsl:template><axsl:template match="text()" priority="-1" mode="M488"/><axsl:template match="@*|node()" priority="-2" mode="M488"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M488"/></axsl:template>

<!--PATTERN metabaseobjid-->


	<!--RULE -->
<axsl:template match="win-def:metabase_object/win-def:id" priority="1000" mode="M489"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_object/win-def:id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the id entity of a metabase_object should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the id entity of a metabase_object should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M489"/></axsl:template><axsl:template match="text()" priority="-1" mode="M489"/><axsl:template match="@*|node()" priority="-2" mode="M489"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M489"/></axsl:template>

<!--PATTERN metabasestekey-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:key" priority="1000" mode="M490"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key entity of a metabase_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key entity of a metabase_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M490"/></axsl:template><axsl:template match="text()" priority="-1" mode="M490"/><axsl:template match="@*|node()" priority="-2" mode="M490"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M490"/></axsl:template>

<!--PATTERN metabasesteid-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:id" priority="1000" mode="M491"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:id"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the id entity of a metabase_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the id entity of a metabase_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M491"/></axsl:template><axsl:template match="text()" priority="-1" mode="M491"/><axsl:template match="@*|node()" priority="-2" mode="M491"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M491"/></axsl:template>

<!--PATTERN metabasestename-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:name" priority="1000" mode="M492"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the name entity of a metabase_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the name entity of a metabase_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M492"/></axsl:template><axsl:template match="text()" priority="-1" mode="M492"/><axsl:template match="@*|node()" priority="-2" mode="M492"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M492"/></axsl:template>

<!--PATTERN metabasesteuser_type-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:user_type" priority="1000" mode="M493"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:user_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the user_type entity of a metabase_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the user_type entity of a metabase_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M493"/></axsl:template><axsl:template match="text()" priority="-1" mode="M493"/><axsl:template match="@*|node()" priority="-2" mode="M493"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M493"/></axsl:template>

<!--PATTERN metabasestedata_type-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:data_type" priority="1000" mode="M494"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:data_type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the data_type entity of a metabase_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the data_type entity of a metabase_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M494"/></axsl:template><axsl:template match="text()" priority="-1" mode="M494"/><axsl:template match="@*|node()" priority="-2" mode="M494"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M494"/></axsl:template>

<!--PATTERN metabasestedata-->


	<!--RULE -->
<axsl:template match="win-def:metabase_state/win-def:data" priority="1000" mode="M495"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:metabase_state/win-def:data"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - the supplied operation attribute for the data entity of a metabase_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M495"/></axsl:template><axsl:template match="text()" priority="-1" mode="M495"/><axsl:template match="@*|node()" priority="-2" mode="M495"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M495"/></axsl:template>

<!--PATTERN pptst-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_test/win-def:object" priority="1001" mode="M496"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:passwordpolicy_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:passwordpolicy_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a passwordpolicy_test must reference a passwordpolicy_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M496"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_test/win-def:state" priority="1000" mode="M496"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:passwordpolicy_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:passwordpolicy_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a passwordpolicy_test must reference a passwordpolicy_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M496"/></axsl:template><axsl:template match="text()" priority="-1" mode="M496"/><axsl:template match="@*|node()" priority="-2" mode="M496"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M496"/></axsl:template>

<!--PATTERN ppstemax_passwd_age-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:max_passwd_age" priority="1000" mode="M497"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:max_passwd_age"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the max_passwd_age entity of a passwordpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the max_passwd_age entity of a passwordpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M497"/></axsl:template><axsl:template match="text()" priority="-1" mode="M497"/><axsl:template match="@*|node()" priority="-2" mode="M497"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M497"/></axsl:template>

<!--PATTERN ppstemin_passwd_age-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:min_passwd_age" priority="1000" mode="M498"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:min_passwd_age"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the min_passwd_age entity of a passwordpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the min_passwd_age entity of a passwordpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M498"/></axsl:template><axsl:template match="text()" priority="-1" mode="M498"/><axsl:template match="@*|node()" priority="-2" mode="M498"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M498"/></axsl:template>

<!--PATTERN ppstemin_passwd_len-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:min_passwd_len" priority="1000" mode="M499"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:min_passwd_len"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the min_passwd_len entity of a passwordpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the min_passwd_len entity of a passwordpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M499"/></axsl:template><axsl:template match="text()" priority="-1" mode="M499"/><axsl:template match="@*|node()" priority="-2" mode="M499"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M499"/></axsl:template>

<!--PATTERN ppstepassword_hist_len-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:password_hist_len" priority="1000" mode="M500"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:password_hist_len"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the password_hist_len entity of a passwordpolicy_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the password_hist_len entity of a passwordpolicy_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M500"/></axsl:template><axsl:template match="text()" priority="-1" mode="M500"/><axsl:template match="@*|node()" priority="-2" mode="M500"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M500"/></axsl:template>

<!--PATTERN ppstepassword_complexity-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:password_complexity" priority="1000" mode="M501"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:password_complexity"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the password_complexity entity of an passwordpolicy_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the password_complexity entity of an passwordpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M501"/></axsl:template><axsl:template match="text()" priority="-1" mode="M501"/><axsl:template match="@*|node()" priority="-2" mode="M501"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M501"/></axsl:template>

<!--PATTERN ppstereversible_encryption-->


	<!--RULE -->
<axsl:template match="win-def:passwordpolicy_state/win-def:reversible_encryption" priority="1000" mode="M502"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:passwordpolicy_state/win-def:reversible_encryption"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the reversible_encryption entity of an passwordpolicy_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the reversible_encryption entity of an passwordpolicy_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M502"/></axsl:template><axsl:template match="text()" priority="-1" mode="M502"/><axsl:template match="@*|node()" priority="-2" mode="M502"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M502"/></axsl:template>

<!--PATTERN porttst-->


	<!--RULE -->
<axsl:template match="win-def:port_test/win-def:object" priority="1001" mode="M503"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:port_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:port_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a port_test must reference a port_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M503"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:port_test/win-def:state" priority="1000" mode="M503"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:port_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:port_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a port_test must reference a port_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M503"/></axsl:template><axsl:template match="text()" priority="-1" mode="M503"/><axsl:template match="@*|node()" priority="-2" mode="M503"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M503"/></axsl:template>

<!--PATTERN portobj-->


	<!--RULE -->
<axsl:template match="win-def:port_object/win-def:command_line" priority="1000" mode="M504"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_object/win-def:command_line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the command_line entity of a port_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the command_line entity of a port_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M504"/></axsl:template><axsl:template match="text()" priority="-1" mode="M504"/><axsl:template match="@*|node()" priority="-2" mode="M504"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M504"/></axsl:template>

<!--PATTERN portobjlocal_port-->


	<!--RULE -->
<axsl:template match="win-def:port_object/win-def:local_port" priority="1000" mode="M505"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_object/win-def:local_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the local_port entity of a port_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the local_port entity of a port_object should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M505"/></axsl:template><axsl:template match="text()" priority="-1" mode="M505"/><axsl:template match="@*|node()" priority="-2" mode="M505"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M505"/></axsl:template>

<!--PATTERN portobj-->


	<!--RULE -->
<axsl:template match="win-def:port_object/win-def:protocol" priority="1000" mode="M506"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_object/win-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the protocol entity of a port_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the protocol entity of a port_object should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M506"/></axsl:template><axsl:template match="text()" priority="-1" mode="M506"/><axsl:template match="@*|node()" priority="-2" mode="M506"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M506"/></axsl:template>

<!--PATTERN portstelocal_address-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:local_address" priority="1000" mode="M507"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:local_address"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the local_address entity of a port_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the local_address entity of a port_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M507"/></axsl:template><axsl:template match="text()" priority="-1" mode="M507"/><axsl:template match="@*|node()" priority="-2" mode="M507"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M507"/></axsl:template>

<!--PATTERN portstelocal_port-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:local_port" priority="1000" mode="M508"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:local_port"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the local_port entity of a port_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the local_port entity of a port_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M508"/></axsl:template><axsl:template match="text()" priority="-1" mode="M508"/><axsl:template match="@*|node()" priority="-2" mode="M508"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M508"/></axsl:template>

<!--PATTERN portsteprotocol-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:protocol" priority="1000" mode="M509"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:protocol"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the protocol entity of a port_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the protocol entity of a port_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M509"/></axsl:template><axsl:template match="text()" priority="-1" mode="M509"/><axsl:template match="@*|node()" priority="-2" mode="M509"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M509"/></axsl:template>

<!--PATTERN portstepid-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:pid" priority="1000" mode="M510"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:pid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the pid entity of a port_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the pid entity of a port_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M510"/></axsl:template><axsl:template match="text()" priority="-1" mode="M510"/><axsl:template match="@*|node()" priority="-2" mode="M510"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M510"/></axsl:template>

<!--PATTERN processtst-->


	<!--RULE -->
<axsl:template match="win-def:process_test/win-def:object" priority="1001" mode="M511"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:process_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:process_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a process_test must reference a process_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M511"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:process_test/win-def:state" priority="1000" mode="M511"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:process_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:process_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a process_test must reference a process_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M511"/></axsl:template><axsl:template match="text()" priority="-1" mode="M511"/><axsl:template match="@*|node()" priority="-2" mode="M511"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M511"/></axsl:template>

<!--PATTERN processobjcommand_line-->


	<!--RULE -->
<axsl:template match="win-def:process_object/win-def:command_line" priority="1000" mode="M512"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_object/win-def:command_line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the command_line entity of a process_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the command_line entity of a process_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M512"/></axsl:template><axsl:template match="text()" priority="-1" mode="M512"/><axsl:template match="@*|node()" priority="-2" mode="M512"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M512"/></axsl:template>

<!--PATTERN processstecommand_line-->


	<!--RULE -->
<axsl:template match="win-def:process_state/win-def:command_line" priority="1000" mode="M513"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_state/win-def:command_line"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the command_line entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the command_line entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M513"/></axsl:template><axsl:template match="text()" priority="-1" mode="M513"/><axsl:template match="@*|node()" priority="-2" mode="M513"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M513"/></axsl:template>

<!--PATTERN processstepid-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:pid" priority="1000" mode="M514"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:pid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the pid entity of a port_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the pid entity of a port_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M514"/></axsl:template><axsl:template match="text()" priority="-1" mode="M514"/><axsl:template match="@*|node()" priority="-2" mode="M514"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M514"/></axsl:template>

<!--PATTERN processsteppid-->


	<!--RULE -->
<axsl:template match="win-def:port_state/win-def:ppid" priority="1000" mode="M515"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:port_state/win-def:ppid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the ppid entity of a port_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the ppid entity of a port_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M515"/></axsl:template><axsl:template match="text()" priority="-1" mode="M515"/><axsl:template match="@*|node()" priority="-2" mode="M515"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M515"/></axsl:template>

<!--PATTERN processstepriority-->


	<!--RULE -->
<axsl:template match="win-def:process_state/win-def:priority" priority="1000" mode="M516"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_state/win-def:priority"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the priority entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the priority entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M516"/></axsl:template><axsl:template match="text()" priority="-1" mode="M516"/><axsl:template match="@*|node()" priority="-2" mode="M516"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M516"/></axsl:template>

<!--PATTERN processsteimage_path-->


	<!--RULE -->
<axsl:template match="win-def:process_state/win-def:image_path" priority="1000" mode="M517"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_state/win-def:image_path"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the image_path entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the image_path entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M517"/></axsl:template><axsl:template match="text()" priority="-1" mode="M517"/><axsl:template match="@*|node()" priority="-2" mode="M517"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M517"/></axsl:template>

<!--PATTERN processstecurrent_dir-->


	<!--RULE -->
<axsl:template match="win-def:process_state/win-def:current_dir" priority="1000" mode="M518"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:process_state/win-def:current_dir"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the current_dir entity of a process_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the current_dir entity of a process_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M518"/></axsl:template><axsl:template match="text()" priority="-1" mode="M518"/><axsl:template match="@*|node()" priority="-2" mode="M518"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M518"/></axsl:template>

<!--PATTERN regtst-->


	<!--RULE -->
<axsl:template match="win-def:registry_test/win-def:object" priority="1001" mode="M519"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:registry_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:registry_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a registry_test must reference a registry_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M519"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:registry_test/win-def:state" priority="1000" mode="M519"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:registry_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:registry_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a registry_test must reference a registry_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M519"/></axsl:template><axsl:template match="text()" priority="-1" mode="M519"/><axsl:template match="@*|node()" priority="-2" mode="M519"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M519"/></axsl:template>

<!--PATTERN regobjhive-->


	<!--RULE -->
<axsl:template match="win-def:registry_object/win-def:hive" priority="1000" mode="M520"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_object/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the hive entity of a registry_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the hive entity of a registry_object should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M520"/></axsl:template><axsl:template match="text()" priority="-1" mode="M520"/><axsl:template match="@*|node()" priority="-2" mode="M520"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M520"/></axsl:template>

<!--PATTERN regobjkey-->


	<!--RULE -->
<axsl:template match="win-def:registry_object/win-def:key" priority="1000" mode="M521"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_object/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the key entity of a registry_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the key entity of a registry_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@xsi:nil='true') or ../win-def:name/@xsi:nil='true'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@xsi:nil='true') or ../win-def:name/@xsi:nil='true'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - name entity must be nil when key is nil</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M521"/></axsl:template><axsl:template match="text()" priority="-1" mode="M521"/><axsl:template match="@*|node()" priority="-2" mode="M521"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M521"/></axsl:template>

<!--PATTERN regobjname-->


	<!--RULE -->
<axsl:template match="win-def:registry_object/win-def:name" priority="1000" mode="M522"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_object/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the name entity of a registry_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the name entity of a registry_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M522"/></axsl:template><axsl:template match="text()" priority="-1" mode="M522"/><axsl:template match="@*|node()" priority="-2" mode="M522"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M522"/></axsl:template>

<!--PATTERN regstehive-->


	<!--RULE -->
<axsl:template match="win-def:registry_state/win-def:hive" priority="1000" mode="M523"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_state/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the hive entity of a registry_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the hive entity of a registry_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M523"/></axsl:template><axsl:template match="text()" priority="-1" mode="M523"/><axsl:template match="@*|node()" priority="-2" mode="M523"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M523"/></axsl:template>

<!--PATTERN regstekey-->


	<!--RULE -->
<axsl:template match="win-def:registry_state/win-def:key" priority="1000" mode="M524"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_state/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key entity of a registry_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key entity of a registry_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M524"/></axsl:template><axsl:template match="text()" priority="-1" mode="M524"/><axsl:template match="@*|node()" priority="-2" mode="M524"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M524"/></axsl:template>

<!--PATTERN regstename-->


	<!--RULE -->
<axsl:template match="win-def:registry_state/win-def:name" priority="1000" mode="M525"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_state/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the name entity of a registry_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the name entity of a registry_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M525"/></axsl:template><axsl:template match="text()" priority="-1" mode="M525"/><axsl:template match="@*|node()" priority="-2" mode="M525"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M525"/></axsl:template>

<!--PATTERN regstetype-->


	<!--RULE -->
<axsl:template match="win-def:registry_state/win-def:type" priority="1000" mode="M526"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_state/win-def:type"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the type entity of a registry_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the type entity of a registry_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M526"/></axsl:template><axsl:template match="text()" priority="-1" mode="M526"/><axsl:template match="@*|node()" priority="-2" mode="M526"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M526"/></axsl:template>

<!--PATTERN regstevalue-->


	<!--RULE -->
<axsl:template match="win-def:registry_state/win-def:value" priority="1000" mode="M527"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:registry_state/win-def:value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - the supplied operation attribute for the value entity of a registry_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M527"/></axsl:template><axsl:template match="text()" priority="-1" mode="M527"/><axsl:template match="@*|node()" priority="-2" mode="M527"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M527"/></axsl:template>

<!--PATTERN raptst-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_test/win-def:object" priority="1001" mode="M528"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:regkeyauditedpermissions_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:regkeyauditedpermissions_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a regkeyauditedpermissions_test must reference a regkeyauditedpermissions_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M528"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_test/win-def:state" priority="1000" mode="M528"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:regkeyauditedpermissions_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:regkeyauditedpermissions_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a regkeyauditedpermissions_test must reference a regkeyauditedpermissions_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M528"/></axsl:template><axsl:template match="text()" priority="-1" mode="M528"/><axsl:template match="@*|node()" priority="-2" mode="M528"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M528"/></axsl:template>

<!--PATTERN rapobjhive-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_object/win-def:hive" priority="1000" mode="M529"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_object/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the hive entity of a regkeyauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the hive entity of a regkeyauditedpermissions_object should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M529"/></axsl:template><axsl:template match="text()" priority="-1" mode="M529"/><axsl:template match="@*|node()" priority="-2" mode="M529"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M529"/></axsl:template>

<!--PATTERN rapobjkey-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_object/win-def:key" priority="1000" mode="M530"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_object/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the key entity of a regkeyauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the key entity of a regkeyauditedpermissions_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M530"/></axsl:template><axsl:template match="text()" priority="-1" mode="M530"/><axsl:template match="@*|node()" priority="-2" mode="M530"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M530"/></axsl:template>

<!--PATTERN rapobjtrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_object/win-def:trustee_name" priority="1000" mode="M531"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_object/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the trustee_name entity of a regkeyauditedpermissions_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the trustee_name entity of a regkeyauditedpermissions_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M531"/></axsl:template><axsl:template match="text()" priority="-1" mode="M531"/><axsl:template match="@*|node()" priority="-2" mode="M531"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M531"/></axsl:template>

<!--PATTERN rapstehive-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:hive" priority="1000" mode="M532"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the hive entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the hive entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M532"/></axsl:template><axsl:template match="text()" priority="-1" mode="M532"/><axsl:template match="@*|node()" priority="-2" mode="M532"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M532"/></axsl:template>

<!--PATTERN rapstekey-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key" priority="1000" mode="M533"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key entity of a regkeyauditedpermissions_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M533"/></axsl:template><axsl:template match="text()" priority="-1" mode="M533"/><axsl:template match="@*|node()" priority="-2" mode="M533"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M533"/></axsl:template>

<!--PATTERN rapstetrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:trustee_name" priority="1000" mode="M534"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_name entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_name entity of a regkeyauditedpermissions_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M534"/></axsl:template><axsl:template match="text()" priority="-1" mode="M534"/><axsl:template match="@*|node()" priority="-2" mode="M534"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M534"/></axsl:template>

<!--PATTERN rapstestandard_delete-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:standard_delete" priority="1000" mode="M535"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:standard_delete"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_delete entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_delete entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M535"/></axsl:template><axsl:template match="text()" priority="-1" mode="M535"/><axsl:template match="@*|node()" priority="-2" mode="M535"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M535"/></axsl:template>

<!--PATTERN rapstestandard_read_control-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:standard_read_control" priority="1000" mode="M536"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:standard_read_control"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_read_control entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_read_control entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M536"/></axsl:template><axsl:template match="text()" priority="-1" mode="M536"/><axsl:template match="@*|node()" priority="-2" mode="M536"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M536"/></axsl:template>

<!--PATTERN rapstestandard_write_dac-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:standard_write_dac" priority="1000" mode="M537"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:standard_write_dac"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_dac entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_dac entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M537"/></axsl:template><axsl:template match="text()" priority="-1" mode="M537"/><axsl:template match="@*|node()" priority="-2" mode="M537"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M537"/></axsl:template>

<!--PATTERN rapstestandard_write_owner-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:standard_write_owner" priority="1000" mode="M538"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:standard_write_owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_owner entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_owner entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M538"/></axsl:template><axsl:template match="text()" priority="-1" mode="M538"/><axsl:template match="@*|node()" priority="-2" mode="M538"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M538"/></axsl:template>

<!--PATTERN rapstestandard_synchronize-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:standard_synchronize" priority="1000" mode="M539"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:standard_synchronize"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_synchronize entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_synchronize entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M539"/></axsl:template><axsl:template match="text()" priority="-1" mode="M539"/><axsl:template match="@*|node()" priority="-2" mode="M539"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M539"/></axsl:template>

<!--PATTERN rapsteaccess_system_security-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:access_system_security" priority="1000" mode="M540"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:access_system_security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the access_system_security entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the access_system_security entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M540"/></axsl:template><axsl:template match="text()" priority="-1" mode="M540"/><axsl:template match="@*|node()" priority="-2" mode="M540"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M540"/></axsl:template>

<!--PATTERN rapstegeneric_read-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:generic_read" priority="1000" mode="M541"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:generic_read"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_read entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_read entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M541"/></axsl:template><axsl:template match="text()" priority="-1" mode="M541"/><axsl:template match="@*|node()" priority="-2" mode="M541"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M541"/></axsl:template>

<!--PATTERN rapstegeneric_write-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:generic_write" priority="1000" mode="M542"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:generic_write"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_write entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_write entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M542"/></axsl:template><axsl:template match="text()" priority="-1" mode="M542"/><axsl:template match="@*|node()" priority="-2" mode="M542"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M542"/></axsl:template>

<!--PATTERN rapstegeneric_execute-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:generic_execute" priority="1000" mode="M543"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:generic_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_execute entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_execute entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M543"/></axsl:template><axsl:template match="text()" priority="-1" mode="M543"/><axsl:template match="@*|node()" priority="-2" mode="M543"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M543"/></axsl:template>

<!--PATTERN rapstegeneric_all-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:generic_all" priority="1000" mode="M544"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:generic_all"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_all entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_all entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M544"/></axsl:template><axsl:template match="text()" priority="-1" mode="M544"/><axsl:template match="@*|node()" priority="-2" mode="M544"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M544"/></axsl:template>

<!--PATTERN rapstekey_query_value-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_query_value" priority="1000" mode="M545"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_query_value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_query_value entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_query_value entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M545"/></axsl:template><axsl:template match="text()" priority="-1" mode="M545"/><axsl:template match="@*|node()" priority="-2" mode="M545"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M545"/></axsl:template>

<!--PATTERN rapstekey_set_value-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_set_value" priority="1000" mode="M546"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_set_value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_set_value entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_set_value entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M546"/></axsl:template><axsl:template match="text()" priority="-1" mode="M546"/><axsl:template match="@*|node()" priority="-2" mode="M546"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M546"/></axsl:template>

<!--PATTERN rapstekey_create_sub_key-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_create_sub_key" priority="1000" mode="M547"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_create_sub_key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_create_sub_key entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_create_sub_key entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M547"/></axsl:template><axsl:template match="text()" priority="-1" mode="M547"/><axsl:template match="@*|node()" priority="-2" mode="M547"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M547"/></axsl:template>

<!--PATTERN rapstekey_enumerate_sub_keys-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_enumerate_sub_keys" priority="1000" mode="M548"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_enumerate_sub_keys"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_enumerate_sub_keys entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_enumerate_sub_keys entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M548"/></axsl:template><axsl:template match="text()" priority="-1" mode="M548"/><axsl:template match="@*|node()" priority="-2" mode="M548"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M548"/></axsl:template>

<!--PATTERN rapstekey_notify-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_notify" priority="1000" mode="M549"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_notify"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_notify entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_notify entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M549"/></axsl:template><axsl:template match="text()" priority="-1" mode="M549"/><axsl:template match="@*|node()" priority="-2" mode="M549"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M549"/></axsl:template>

<!--PATTERN rapstekey_create_link-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_create_link" priority="1000" mode="M550"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_create_link"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_create_link entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_create_link entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M550"/></axsl:template><axsl:template match="text()" priority="-1" mode="M550"/><axsl:template match="@*|node()" priority="-2" mode="M550"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M550"/></axsl:template>

<!--PATTERN rapstekey_wow64_64key-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_wow64_64key" priority="1000" mode="M551"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_wow64_64key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_64key entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_64key entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M551"/></axsl:template><axsl:template match="text()" priority="-1" mode="M551"/><axsl:template match="@*|node()" priority="-2" mode="M551"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M551"/></axsl:template>

<!--PATTERN rapste-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_wow64_32key" priority="1000" mode="M552"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_wow64_32key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_32key entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_32key entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M552"/></axsl:template><axsl:template match="text()" priority="-1" mode="M552"/><axsl:template match="@*|node()" priority="-2" mode="M552"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M552"/></axsl:template>

<!--PATTERN rapste-->


	<!--RULE -->
<axsl:template match="win-def:regkeyauditedpermissions_state/win-def:key_wow64_res" priority="1000" mode="M553"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyauditedpermissions_state/win-def:key_wow64_res"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_res entity of a regkeyauditedpermissions_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_res entity of a regkeyauditedpermissions_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M553"/></axsl:template><axsl:template match="text()" priority="-1" mode="M553"/><axsl:template match="@*|node()" priority="-2" mode="M553"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M553"/></axsl:template>

<!--PATTERN rertst-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_test/win-def:object" priority="1001" mode="M554"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:regkeyeffectiverights_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:regkeyeffectiverights_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a regkeyeffectiverights_test must reference a regkeyeffectiverights_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M554"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_test/win-def:state" priority="1000" mode="M554"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:regkeyeffectiverights_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:regkeyeffectiverights_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a regkeyeffectiverights_test must reference a regkeyeffectiverights_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M554"/></axsl:template><axsl:template match="text()" priority="-1" mode="M554"/><axsl:template match="@*|node()" priority="-2" mode="M554"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M554"/></axsl:template>

<!--PATTERN rerobjhive-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_object/win-def:hive" priority="1000" mode="M555"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_object/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the hive entity of a regkeyeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the hive entity of a regkeyeffectiverights_object should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M555"/></axsl:template><axsl:template match="text()" priority="-1" mode="M555"/><axsl:template match="@*|node()" priority="-2" mode="M555"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M555"/></axsl:template>

<!--PATTERN rerobjkey-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_object/win-def:key" priority="1000" mode="M556"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_object/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the key entity of a regkeyeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the key entity of a regkeyeffectiverights_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M556"/></axsl:template><axsl:template match="text()" priority="-1" mode="M556"/><axsl:template match="@*|node()" priority="-2" mode="M556"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M556"/></axsl:template>

<!--PATTERN rerobjtrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_object/win-def:trustee_name" priority="1000" mode="M557"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_object/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the trustee_name entity of a regkeyeffectiverights_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the trustee_name entity of a regkeyeffectiverights_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M557"/></axsl:template><axsl:template match="text()" priority="-1" mode="M557"/><axsl:template match="@*|node()" priority="-2" mode="M557"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M557"/></axsl:template>

<!--PATTERN rerstehive-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:hive" priority="1000" mode="M558"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:hive"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the hive entity of a regkeyeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the hive entity of a regkeyeffectiverights_state should be 'equals' or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M558"/></axsl:template><axsl:template match="text()" priority="-1" mode="M558"/><axsl:template match="@*|node()" priority="-2" mode="M558"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M558"/></axsl:template>

<!--PATTERN rerstekey-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key" priority="1000" mode="M559"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key entity of a regkeyeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key entity of a regkeyeffectiverights_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M559"/></axsl:template><axsl:template match="text()" priority="-1" mode="M559"/><axsl:template match="@*|node()" priority="-2" mode="M559"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M559"/></axsl:template>

<!--PATTERN rerstetrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:trustee_name" priority="1000" mode="M560"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_name entity of a regkeyeffectiverights_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_name entity of a regkeyeffectiverights_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M560"/></axsl:template><axsl:template match="text()" priority="-1" mode="M560"/><axsl:template match="@*|node()" priority="-2" mode="M560"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M560"/></axsl:template>

<!--PATTERN rerstestandard_delete-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:standard_delete" priority="1000" mode="M561"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:standard_delete"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_delete entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_delete entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M561"/></axsl:template><axsl:template match="text()" priority="-1" mode="M561"/><axsl:template match="@*|node()" priority="-2" mode="M561"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M561"/></axsl:template>

<!--PATTERN rerstestandard_read_control-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:standard_read_control" priority="1000" mode="M562"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:standard_read_control"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_read_control entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_read_control entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M562"/></axsl:template><axsl:template match="text()" priority="-1" mode="M562"/><axsl:template match="@*|node()" priority="-2" mode="M562"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M562"/></axsl:template>

<!--PATTERN rerstestandard_write_dac-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:standard_write_dac" priority="1000" mode="M563"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:standard_write_dac"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_dac entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_dac entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M563"/></axsl:template><axsl:template match="text()" priority="-1" mode="M563"/><axsl:template match="@*|node()" priority="-2" mode="M563"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M563"/></axsl:template>

<!--PATTERN rerstestandard_write_owner-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:standard_write_owner" priority="1000" mode="M564"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:standard_write_owner"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_write_owner entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_write_owner entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M564"/></axsl:template><axsl:template match="text()" priority="-1" mode="M564"/><axsl:template match="@*|node()" priority="-2" mode="M564"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M564"/></axsl:template>

<!--PATTERN rerstestandard_synchronize-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:standard_synchronize" priority="1000" mode="M565"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:standard_synchronize"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the standard_synchronize entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the standard_synchronize entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M565"/></axsl:template><axsl:template match="text()" priority="-1" mode="M565"/><axsl:template match="@*|node()" priority="-2" mode="M565"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M565"/></axsl:template>

<!--PATTERN rersteaccess_system_security-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:access_system_security" priority="1000" mode="M566"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:access_system_security"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the access_system_security entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the access_system_security entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M566"/></axsl:template><axsl:template match="text()" priority="-1" mode="M566"/><axsl:template match="@*|node()" priority="-2" mode="M566"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M566"/></axsl:template>

<!--PATTERN rerstegeneric_read-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:generic_read" priority="1000" mode="M567"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:generic_read"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_read entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_read entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M567"/></axsl:template><axsl:template match="text()" priority="-1" mode="M567"/><axsl:template match="@*|node()" priority="-2" mode="M567"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M567"/></axsl:template>

<!--PATTERN rerstegeneric_write-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:generic_write" priority="1000" mode="M568"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:generic_write"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_write entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_write entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M568"/></axsl:template><axsl:template match="text()" priority="-1" mode="M568"/><axsl:template match="@*|node()" priority="-2" mode="M568"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M568"/></axsl:template>

<!--PATTERN rerstegeneric_execute-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:generic_execute" priority="1000" mode="M569"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:generic_execute"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_execute entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_execute entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M569"/></axsl:template><axsl:template match="text()" priority="-1" mode="M569"/><axsl:template match="@*|node()" priority="-2" mode="M569"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M569"/></axsl:template>

<!--PATTERN rerstegeneric_all-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:generic_all" priority="1000" mode="M570"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:generic_all"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the generic_all entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the generic_all entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M570"/></axsl:template><axsl:template match="text()" priority="-1" mode="M570"/><axsl:template match="@*|node()" priority="-2" mode="M570"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M570"/></axsl:template>

<!--PATTERN rerstekey_query_value-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_query_value" priority="1000" mode="M571"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_query_value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_query_value entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_query_value entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M571"/></axsl:template><axsl:template match="text()" priority="-1" mode="M571"/><axsl:template match="@*|node()" priority="-2" mode="M571"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M571"/></axsl:template>

<!--PATTERN rerstekey_set_value-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_set_value" priority="1000" mode="M572"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_set_value"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_set_value entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_set_value entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M572"/></axsl:template><axsl:template match="text()" priority="-1" mode="M572"/><axsl:template match="@*|node()" priority="-2" mode="M572"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M572"/></axsl:template>

<!--PATTERN rerstekey_create_sub_key-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_create_sub_key" priority="1000" mode="M573"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_create_sub_key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_create_sub_key entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_create_sub_key entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M573"/></axsl:template><axsl:template match="text()" priority="-1" mode="M573"/><axsl:template match="@*|node()" priority="-2" mode="M573"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M573"/></axsl:template>

<!--PATTERN rerstekey_enumerate_sub_keys-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_enumerate_sub_keys" priority="1000" mode="M574"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_enumerate_sub_keys"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_enumerate_sub_keys entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_enumerate_sub_keys entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M574"/></axsl:template><axsl:template match="text()" priority="-1" mode="M574"/><axsl:template match="@*|node()" priority="-2" mode="M574"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M574"/></axsl:template>

<!--PATTERN rerstekey_notify-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_notify" priority="1000" mode="M575"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_notify"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_notify entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_notify entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M575"/></axsl:template><axsl:template match="text()" priority="-1" mode="M575"/><axsl:template match="@*|node()" priority="-2" mode="M575"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M575"/></axsl:template>

<!--PATTERN rerstekey_create_link-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_create_link" priority="1000" mode="M576"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_create_link"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_create_link entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_create_link entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M576"/></axsl:template><axsl:template match="text()" priority="-1" mode="M576"/><axsl:template match="@*|node()" priority="-2" mode="M576"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M576"/></axsl:template>

<!--PATTERN rerstekey_wow64_64key-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_wow64_64key" priority="1000" mode="M577"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_wow64_64key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_64key entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_64key entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M577"/></axsl:template><axsl:template match="text()" priority="-1" mode="M577"/><axsl:template match="@*|node()" priority="-2" mode="M577"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M577"/></axsl:template>

<!--PATTERN rerstekey_wow64_32key-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_wow64_32key" priority="1000" mode="M578"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_wow64_32key"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_32key entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_32key entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M578"/></axsl:template><axsl:template match="text()" priority="-1" mode="M578"/><axsl:template match="@*|node()" priority="-2" mode="M578"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M578"/></axsl:template>

<!--PATTERN rerstekey_wow64_res-->


	<!--RULE -->
<axsl:template match="win-def:regkeyeffectiverights_state/win-def:key_wow64_res" priority="1000" mode="M579"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:regkeyeffectiverights_state/win-def:key_wow64_res"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the key_wow64_res entity of a regkeyeffectiverights_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the key_wow64_res entity of a regkeyeffectiverights_state should be 'equals', or 'not equal</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M579"/></axsl:template><axsl:template match="text()" priority="-1" mode="M579"/><axsl:template match="@*|node()" priority="-2" mode="M579"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M579"/></axsl:template>

<!--PATTERN sidtst-->


	<!--RULE -->
<axsl:template match="win-def:sid_test/win-def:object" priority="1001" mode="M580"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:sid_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:sid_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a sid_test must reference a sid_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M580"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:sid_test/win-def:state" priority="1000" mode="M580"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:sid_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:sid_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a sid_test must reference a sid_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M580"/></axsl:template><axsl:template match="text()" priority="-1" mode="M580"/><axsl:template match="@*|node()" priority="-2" mode="M580"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M580"/></axsl:template>

<!--PATTERN sidobjtrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:sid_object/win-def:trustee_name" priority="1000" mode="M581"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_object/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the trustee_name entity of a sid_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the trustee_name entity of a sid_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M581"/></axsl:template><axsl:template match="text()" priority="-1" mode="M581"/><axsl:template match="@*|node()" priority="-2" mode="M581"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M581"/></axsl:template>

<!--PATTERN sidstetrustee_name-->


	<!--RULE -->
<axsl:template match="win-def:sid_state/win-def:trustee_name" priority="1000" mode="M582"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_state/win-def:trustee_name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_name entity of a sid_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_name entity of a sid_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M582"/></axsl:template><axsl:template match="text()" priority="-1" mode="M582"/><axsl:template match="@*|node()" priority="-2" mode="M582"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M582"/></axsl:template>

<!--PATTERN sidstetrustee_sid-->


	<!--RULE -->
<axsl:template match="win-def:sid_state/win-def:trustee_sid" priority="1000" mode="M583"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_state/win-def:trustee_sid"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_sid entity of a sid_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_sid entity of a sid_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M583"/></axsl:template><axsl:template match="text()" priority="-1" mode="M583"/><axsl:template match="@*|node()" priority="-2" mode="M583"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M583"/></axsl:template>

<!--PATTERN sidstetrustee_domain-->


	<!--RULE -->
<axsl:template match="win-def:sid_state/win-def:trustee_domain" priority="1000" mode="M584"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:sid_state/win-def:trustee_domain"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the trustee_domain entity of a sid_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the trustee_domain entity of a sid_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M584"/></axsl:template><axsl:template match="text()" priority="-1" mode="M584"/><axsl:template match="@*|node()" priority="-2" mode="M584"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M584"/></axsl:template>

<!--PATTERN usertst-->


	<!--RULE -->
<axsl:template match="win-def:user_test/win-def:object" priority="1001" mode="M585"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:user_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:user_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a user_test must reference a user_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M585"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:user_test/win-def:state" priority="1000" mode="M585"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:user_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:user_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a user_test must reference a user_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M585"/></axsl:template><axsl:template match="text()" priority="-1" mode="M585"/><axsl:template match="@*|node()" priority="-2" mode="M585"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M585"/></axsl:template>

<!--PATTERN userobjuser-->


	<!--RULE -->
<axsl:template match="win-def:user_object/win-def:user" priority="1000" mode="M586"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_object/win-def:user"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the user entity of a user_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the user entity of a user_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M586"/></axsl:template><axsl:template match="text()" priority="-1" mode="M586"/><axsl:template match="@*|node()" priority="-2" mode="M586"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M586"/></axsl:template>

<!--PATTERN usersteuser-->


	<!--RULE -->
<axsl:template match="win-def:user_state/win-def:user" priority="1000" mode="M587"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_state/win-def:user"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the user entity of a user_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the user entity of a user_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M587"/></axsl:template><axsl:template match="text()" priority="-1" mode="M587"/><axsl:template match="@*|node()" priority="-2" mode="M587"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M587"/></axsl:template>

<!--PATTERN usersteenabled-->


	<!--RULE -->
<axsl:template match="win-def:user_state/win-def:enabled" priority="1000" mode="M588"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_state/win-def:enabled"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='boolean'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='boolean'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the enabled entity of a user_state should be 'boolean'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the enabled entity of a user_state should be 'equals', or 'not equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M588"/></axsl:template><axsl:template match="text()" priority="-1" mode="M588"/><axsl:template match="@*|node()" priority="-2" mode="M588"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M588"/></axsl:template>

<!--PATTERN userstegroup-->


	<!--RULE -->
<axsl:template match="win-def:user_state/win-def:group" priority="1000" mode="M589"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:user_state/win-def:group"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the group entity of a user_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the group entity of a user_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M589"/></axsl:template><axsl:template match="text()" priority="-1" mode="M589"/><axsl:template match="@*|node()" priority="-2" mode="M589"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M589"/></axsl:template>

<!--PATTERN volumetst-->


	<!--RULE -->
<axsl:template match="win-def:volume_test/win-def:object" priority="1001" mode="M590"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:volume_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:volume_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a volume_test must reference a volume_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M590"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:volume_test/win-def:state" priority="1000" mode="M590"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:volume_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:volume_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a volume_test must reference a volume_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M590"/></axsl:template><axsl:template match="text()" priority="-1" mode="M590"/><axsl:template match="@*|node()" priority="-2" mode="M590"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M590"/></axsl:template>

<!--PATTERN volobjrootpath-->


	<!--RULE -->
<axsl:template match="win-def:volume_object/win-def:rootpath" priority="1000" mode="M591"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_object/win-def:rootpath"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the rootpath entity of a volume_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the rootpath entity of a volume_object should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M591"/></axsl:template><axsl:template match="text()" priority="-1" mode="M591"/><axsl:template match="@*|node()" priority="-2" mode="M591"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M591"/></axsl:template>

<!--PATTERN volumesterootpath-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:rootpath" priority="1000" mode="M592"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:rootpath"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the rootpath entity of a volume_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the rootpath entity of a volume_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M592"/></axsl:template><axsl:template match="text()" priority="-1" mode="M592"/><axsl:template match="@*|node()" priority="-2" mode="M592"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M592"/></axsl:template>

<!--PATTERN volumestefile_system-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_system" priority="1000" mode="M593"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_system"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_system entity of a volume_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_system entity of a volume_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M593"/></axsl:template><axsl:template match="text()" priority="-1" mode="M593"/><axsl:template match="@*|node()" priority="-2" mode="M593"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M593"/></axsl:template>

<!--PATTERN volumestename-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:name" priority="1000" mode="M594"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:name"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the name entity of a volume_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the name entity of a volume_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M594"/></axsl:template><axsl:template match="text()" priority="-1" mode="M594"/><axsl:template match="@*|node()" priority="-2" mode="M594"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M594"/></axsl:template>

<!--PATTERN volstevolume_max_component_length-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:volume_max_component_length" priority="1000" mode="M595"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:volume_max_component_length"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the volume_max_component_length entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the volume_max_component_length entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M595"/></axsl:template><axsl:template match="text()" priority="-1" mode="M595"/><axsl:template match="@*|node()" priority="-2" mode="M595"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M595"/></axsl:template>

<!--PATTERN volsteserial_number-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:serial_number" priority="1000" mode="M596"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:serial_number"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the serial_number entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the serial_number entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M596"/></axsl:template><axsl:template match="text()" priority="-1" mode="M596"/><axsl:template match="@*|node()" priority="-2" mode="M596"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M596"/></axsl:template>

<!--PATTERN volstefile_case_sensitive_search-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_case_sensitive_search" priority="1000" mode="M597"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_case_sensitive_search"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_case_sensitive_search entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_case_sensitive_search entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M597"/></axsl:template><axsl:template match="text()" priority="-1" mode="M597"/><axsl:template match="@*|node()" priority="-2" mode="M597"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M597"/></axsl:template>

<!--PATTERN volstefile_case_preserved_names-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_case_preserved_names" priority="1000" mode="M598"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_case_preserved_names"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_case_preserved_names entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_case_preserved_names entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M598"/></axsl:template><axsl:template match="text()" priority="-1" mode="M598"/><axsl:template match="@*|node()" priority="-2" mode="M598"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M598"/></axsl:template>

<!--PATTERN volstefile_unicode_on_disk-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_unicode_on_disk" priority="1000" mode="M599"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_unicode_on_disk"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_unicode_on_disk entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_unicode_on_disk entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M599"/></axsl:template><axsl:template match="text()" priority="-1" mode="M599"/><axsl:template match="@*|node()" priority="-2" mode="M599"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M599"/></axsl:template>

<!--PATTERN volstefile_persistent_acls-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_persistent_acls" priority="1000" mode="M600"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_persistent_acls"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_persistent_acls entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_persistent_acls entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M600"/></axsl:template><axsl:template match="text()" priority="-1" mode="M600"/><axsl:template match="@*|node()" priority="-2" mode="M600"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M600"/></axsl:template>

<!--PATTERN volstefile_file_compression-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_file_compression" priority="1000" mode="M601"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_file_compression"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_file_compression entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_file_compression entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M601"/></axsl:template><axsl:template match="text()" priority="-1" mode="M601"/><axsl:template match="@*|node()" priority="-2" mode="M601"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M601"/></axsl:template>

<!--PATTERN volstefile_volume_quotas-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_volume_quotas" priority="1000" mode="M602"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_volume_quotas"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_volume_quotas entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_volume_quotas entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M602"/></axsl:template><axsl:template match="text()" priority="-1" mode="M602"/><axsl:template match="@*|node()" priority="-2" mode="M602"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M602"/></axsl:template>

<!--PATTERN volstefile_supports_sparse_files-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_supports_sparse_files" priority="1000" mode="M603"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_supports_sparse_files"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_supports_sparse_files entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_supports_sparse_files entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M603"/></axsl:template><axsl:template match="text()" priority="-1" mode="M603"/><axsl:template match="@*|node()" priority="-2" mode="M603"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M603"/></axsl:template>

<!--PATTERN volstefile_supports_reparse_points-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_supports_reparse_points" priority="1000" mode="M604"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_supports_reparse_points"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_supports_reparse_points entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_supports_reparse_points entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M604"/></axsl:template><axsl:template match="text()" priority="-1" mode="M604"/><axsl:template match="@*|node()" priority="-2" mode="M604"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M604"/></axsl:template>

<!--PATTERN volstefile_supports_remote_storage-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_supports_remote_storage" priority="1000" mode="M605"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_supports_remote_storage"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_supports_remote_storage entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_supports_remote_storage entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M605"/></axsl:template><axsl:template match="text()" priority="-1" mode="M605"/><axsl:template match="@*|node()" priority="-2" mode="M605"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M605"/></axsl:template>

<!--PATTERN volstefile_volume_is_compressed-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_volume_is_compressed" priority="1000" mode="M606"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_volume_is_compressed"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_volume_is_compressed entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_volume_is_compressed entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M606"/></axsl:template><axsl:template match="text()" priority="-1" mode="M606"/><axsl:template match="@*|node()" priority="-2" mode="M606"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M606"/></axsl:template>

<!--PATTERN volstefile_supports_object_ids-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_supports_object_ids" priority="1000" mode="M607"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_supports_object_ids"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_supports_object_ids entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_supports_object_ids entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M607"/></axsl:template><axsl:template match="text()" priority="-1" mode="M607"/><axsl:template match="@*|node()" priority="-2" mode="M607"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M607"/></axsl:template>

<!--PATTERN volstefile_supports_encryption-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_supports_encryption" priority="1000" mode="M608"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_supports_encryption"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_supports_encryption entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_supports_encryption entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M608"/></axsl:template><axsl:template match="text()" priority="-1" mode="M608"/><axsl:template match="@*|node()" priority="-2" mode="M608"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M608"/></axsl:template>

<!--PATTERN volstefile_named_streams-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_named_streams" priority="1000" mode="M609"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_named_streams"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_named_streams entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_named_streams entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M609"/></axsl:template><axsl:template match="text()" priority="-1" mode="M609"/><axsl:template match="@*|node()" priority="-2" mode="M609"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M609"/></axsl:template>

<!--PATTERN volstefile_read_only_volume-->


	<!--RULE -->
<axsl:template match="win-def:volume_state/win-def:file_read_only_volume" priority="1000" mode="M610"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:volume_state/win-def:file_read_only_volume"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='int'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='int'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the file_read_only_volume entity of a volume_state should be 'int'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the file_read_only_volume entity of a volume_state should be 'equals', 'not equal', 'greater than', 'greater than or equal', 'less than', or 'less than or equal'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M610"/></axsl:template><axsl:template match="text()" priority="-1" mode="M610"/><axsl:template match="@*|node()" priority="-2" mode="M610"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M610"/></axsl:template>

<!--PATTERN wmitst-->


	<!--RULE -->
<axsl:template match="win-def:wmi_test/win-def:object" priority="1001" mode="M611"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_test/win-def:object"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:wmi_object/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@object_ref=/oval-def:oval_definitions/oval-def:objects/win-def:wmi_object/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the object child element of a wmi_test must reference a wmi_object</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M611"/></axsl:template>

	<!--RULE -->
<axsl:template match="win-def:wmi_test/win-def:state" priority="1000" mode="M611"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_test/win-def:state"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:wmi_state/@id"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="@state_ref=/oval-def:oval_definitions/oval-def:states/win-def:wmi_state/@id"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
							 - the state child element of a wmi_test must reference a wmi_state</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M611"/></axsl:template><axsl:template match="text()" priority="-1" mode="M611"/><axsl:template match="@*|node()" priority="-2" mode="M611"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M611"/></axsl:template>

<!--PATTERN wmiobjnamespace-->


	<!--RULE -->
<axsl:template match="win-def:wmi_object/win-def:namespace" priority="1000" mode="M612"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_object/win-def:namespace"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the namespace entity of a wmi_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the namespace entity of a wmi_object should be 'equals'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M612"/></axsl:template><axsl:template match="text()" priority="-1" mode="M612"/><axsl:template match="@*|node()" priority="-2" mode="M612"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M612"/></axsl:template>

<!--PATTERN wmiobj-->


	<!--RULE -->
<axsl:template match="win-def:wmi_object/win-def:wql" priority="1000" mode="M613"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_object/win-def:wql"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - datatype attribute for the wql entity of a wmi_object should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
														 - operation attribute for the wql entity of a wmi_object should be 'equals'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M613"/></axsl:template><axsl:template match="text()" priority="-1" mode="M613"/><axsl:template match="@*|node()" priority="-2" mode="M613"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M613"/></axsl:template>

<!--PATTERN wmistenamespace-->


	<!--RULE -->
<axsl:template match="win-def:wmi_state/win-def:namespace" priority="1000" mode="M614"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_state/win-def:namespace"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the namespace entity of a wmi_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the namespace entity of a wmi_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M614"/></axsl:template><axsl:template match="text()" priority="-1" mode="M614"/><axsl:template match="@*|node()" priority="-2" mode="M614"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M614"/></axsl:template>

<!--PATTERN wmistewql-->


	<!--RULE -->
<axsl:template match="win-def:wmi_state/win-def:wql" priority="1000" mode="M615"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_state/win-def:wql"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@datatype) or @datatype='string'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@datatype) or @datatype='string'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - datatype attribute for the wql entity of a wmi_state should be 'string'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose>

		<!--ASSERT -->
<axsl:choose><axsl:when test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match'"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - operation attribute for the wql entity of a wmi_state should be 'equals', 'not equal', or 'pattern match'</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M615"/></axsl:template><axsl:template match="text()" priority="-1" mode="M615"/><axsl:template match="@*|node()" priority="-2" mode="M615"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M615"/></axsl:template>

<!--PATTERN wmisteresult-->


	<!--RULE -->
<axsl:template match="win-def:wmi_state/win-def:result" priority="1000" mode="M616"><svrl:fired-rule xmlns:svrl="http://purl.oclc.org/dsdl/svrl" context="win-def:wmi_state/win-def:result"/>

		<!--ASSERT -->
<axsl:choose><axsl:when test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"/><axsl:otherwise><svrl:failed-assert xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:schold="http://www.ascc.net/xml/schematron" test="((@datatype='binary' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='boolean' and (not(@operation) or @operation='equals' or @operation='not equal')) or (@datatype='float' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or (@datatype='int' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal' or @operation='bitwise and' or @operation='bitwise or')) or ((@datatype='string' or not(@datatype)) and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='pattern match')) or (@datatype='version' and (not(@operation) or @operation='equals' or @operation='not equal' or @operation='greater than' or @operation='greater than or equal' or @operation='less than' or @operation='less than or equal')))"><axsl:attribute name="location"><axsl:apply-templates select="." mode="schematron-get-full-path"/></axsl:attribute><svrl:text>
												 - the supplied operation attribute for the result entity of a wmi_state is not valid given a datatype of ''</svrl:text></svrl:failed-assert></axsl:otherwise></axsl:choose><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M616"/></axsl:template><axsl:template match="text()" priority="-1" mode="M616"/><axsl:template match="@*|node()" priority="-2" mode="M616"><axsl:apply-templates select="@*|*|comment()|processing-instruction()" mode="M616"/></axsl:template></axsl:stylesheet>
