<definition xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" class="vulnerability" id="oval:org.cisecurity:def:4027" version="6">
  <metadata>
    <title>OpenSSL Security Bypass Vulnerability - CVE-2017-3737</title>
    <affected family="windows">
      <platform>Microsoft Windows Server 2003</platform>
      <platform>Microsoft Windows Server 2008</platform>
      <platform>Microsoft Windows 7</platform>
      <platform>Microsoft Windows Server 2008 R2</platform>
      <platform>Microsoft Windows Server 2012</platform>
      <platform>Microsoft Windows 8</platform>
      <platform>Microsoft Windows 8.1</platform>
      <platform>Microsoft Windows Server 2012 R2</platform>
      <platform>Microsoft Windows 10</platform>
      <platform>Microsoft Windows Server 2016</platform>
      <product>OpenSSL</product>
    </affected>
    <reference ref_id="CVE-2017-3737" ref_url="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-3737" source="CVE" />
    <description>OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an "error state" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.</description>
    <oval_repository>
      <dates>
        <submitted date="2018-02-05T12:46:10+08:00">
          <contributor organization="DTCC">Jose Israel Padilla</contributor>
        </submitted>
        <status_change date="2018-02-09T12:00:00.000-05:00">DRAFT</status_change>
        <status_change date="2018-02-23T14:00:00.000-05:00">INTERIM</status_change>
        <status_change date="2018-03-09T04:00:40.204-05:00">ACCEPTED</status_change>
      </dates>
      <status>ACCEPTED</status>
      <min_schema_version>5.10</min_schema_version>
    </oval_repository>
  </metadata>
  <criteria comment="Check for vulnerable OpenSSL installation + vulnerable file version" operator="OR">
    <criteria comment="OpenSSL is installed + file version" operator="AND">
      <extend_definition comment="OpenSSL is installed" definition_ref="oval:org.mitre.oval:def:12331" />
      <criterion comment="Check if OpenSSL 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n" test_ref="oval:org.cisecurity:tst:5381" />
    </criteria>
    <criteria comment="OpenSSL (x86) is installed + file version" operator="AND">
      <criterion comment="OpenSSL (32_bit) is installed" test_ref="oval:org.mitre.oval:tst:113875" />
      <criterion comment="Check if OpenSSL 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n (x86)" test_ref="oval:org.cisecurity:tst:5383" />
    </criteria>
    <criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on ProgramFilesDir" test_ref="oval:org.cisecurity:tst:5379" />
    <criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on ProgramFilesDir (x86)" test_ref="oval:org.cisecurity:tst:5382" />
    <criterion comment="Check if ssleay32.dll 1.0.2 version is greater than or equal 1.0.2 and less than 1.0.2n on System32 and SysWOW64" test_ref="oval:org.cisecurity:tst:5377" />
  </criteria>
</definition>
